(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1064275,      19634]
NotebookOptionsPosition[   1060339,      19562]
NotebookOutlinePosition[   1060810,      19580]
CellTagsIndexPosition[   1060767,      19577]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Finding Hidden Structure in a NN (MNIST)", "Title",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899643578108666*^9, 3.899643581720828*^9}, {
  3.89964372515622*^9, 3.899643755151266*^9}, {3.8996439004782667`*^9, 
  3.899643901887251*^9}, {3.899908149632354*^9, 
  3.899908159462082*^9}},ExpressionUUID->"2a5e0de6-398a-46f0-85d1-\
ef56e92a81cf"],

Cell[TextData[{
 "First, load the data and define the ",
 StyleBox["NetEncoder",
  FontWeight->"Bold"],
 "/",
 StyleBox["NetDecoder",
  FontWeight->"Bold"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.8999615867390842`*^9, 
   3.899961592015293*^9}, {3.899961685705503*^9, 
   3.8999616978655853`*^9}},ExpressionUUID->"7f3e9ead-0d57-4913-893e-\
29a272521e29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mnistEncoder", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"28", ",", "28"}], "}"}], ",", 
      RowBox[{"\"\<ColorSpace\>\"", "->", "\"\<Grayscale\>\""}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mnistDecoder", "=", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Class\>\"", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "9"}], "]"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899643629291602*^9, 3.899643629293592*^9}, {
   3.8998454879974947`*^9, 3.899845489661338*^9}, {3.8999081847201147`*^9, 
   3.899908186276101*^9}, 3.899994157757058*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"52223c95-b99b-4d49-9620-fd87ea3b2aff"],

Cell["\<\
We\[CloseCurlyQuote]ll slightly modify the Neural Network from yesterday to \
see more examples. \
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.8999615867390842`*^9, 
   3.899961592015293*^9}},ExpressionUUID->"4898254f-1e5e-4127-a468-\
a8fa0aa2e8d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uNet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"21", ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"15", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FunctionLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "->", "mnistEncoder"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", "mnistDecoder"}]}], "]"}]}], 
  ";"}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899898385704184*^9, 3.899898392974886*^9}, {
   3.899900551030119*^9, 3.899900577483036*^9}, {3.899900850921194*^9, 
   3.899900851870042*^9}, {3.899900990309123*^9, 3.8999010140611153`*^9}, {
   3.899901062846739*^9, 3.899901078559599*^9}, {3.899961879321659*^9, 
   3.89996187943253*^9}, {3.8999639965270653`*^9, 3.8999639970070047`*^9}, {
   3.8999791544593334`*^9, 3.8999791693593817`*^9}, {3.899986880097764*^9, 
   3.899986880757574*^9}, {3.8999869290367565`*^9, 3.899986936721326*^9}, {
   3.899987013077426*^9, 3.8999870451494226`*^9}, {3.8999871216376824`*^9, 
   3.899987136368232*^9}, {3.899987317210925*^9, 3.8999873213341618`*^9}, {
   3.8999874766099806`*^9, 3.8999874883758125`*^9}, {3.8999877761030474`*^9, 
   3.899987793518753*^9}, {3.899987903685724*^9, 3.8999879259632325`*^9}, {
   3.8999880143995447`*^9, 3.899988213134028*^9}, {3.899988255362735*^9, 
   3.8999883080120373`*^9}, {3.8999885542102103`*^9, 3.899988698838301*^9}, {
   3.8999893888134327`*^9, 3.8999893920368*^9}, 3.899989519050091*^9, {
   3.8999895548951616`*^9, 3.8999895980182867`*^9}, {3.89998963024658*^9, 
   3.8999896442983246`*^9}, {3.8999897154305754`*^9, 
   3.8999897429212418`*^9}, {3.8999897839219427`*^9, 
   3.8999898509288826`*^9}, {3.899989953791375*^9, 3.8999899870730567`*^9}, {
   3.899990151425866*^9, 3.8999902544952793`*^9}, {3.8999902919971743`*^9, 
   3.8999903546164923`*^9}, {3.8999904175338774`*^9, 3.8999904303544044`*^9}},
 
 CellLabel->
  "In[323]:=",ExpressionUUID->"88808776-4c24-4770-a608-88ac5c33c6d8"],

Cell["\<\
The process of building a Network graph and training the Neural Network is \
similar. \
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.899908335106683*^9, 
   3.8999083478077602`*^9}},ExpressionUUID->"6baafdb8-25b4-4957-8248-\
b39beb25f925"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iNet", "=", 
   RowBox[{"NetInitialize", "[", "uNet", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tNet", "=", 
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<MyNet\>\"", "->", "iNet"}], ",", 
        RowBox[{"\"\<loss\>\"", "->", 
         RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
       "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
         RowBox[{"\"\<MyNet\>\"", "->", 
          RowBox[{"NetPort", "[", 
           RowBox[{"\"\<loss\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "->", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainAssoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "->", 
      RowBox[{"Keys", "[", "trainingData", "]"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "->", 
      RowBox[{
       RowBox[{"Values", "[", "trainingData", "]"}], "+", "1"}]}]}], "|>"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testAssoc", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "->", 
       RowBox[{"Keys", "[", "testData", "]"}]}], ",", 
      RowBox[{"\"\<Target\>\"", "->", 
       RowBox[{
        RowBox[{"Values", "[", "testData", "]"}], "+", "1"}]}]}], "|>"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"results", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"tNet", ",", "trainAssoc", ",", "All", ",", 
    RowBox[{"ValidationSet", "->", "testAssoc"}], ",", 
    RowBox[{"MaxTrainingRounds", "->", "5"}]}], "]"}]}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899901119243224*^9, 3.899901122414444*^9}, {
  3.899908295763466*^9, 3.899908307058897*^9}, {3.89996345389366*^9, 
  3.899963460860009*^9}, {3.899987201541867*^9, 3.8999872016955853`*^9}, {
  3.8999898571763725`*^9, 3.89998985744976*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"185bd20e-b93d-420e-9e13-2035c0d7a18b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "4690"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "5"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["2.5min"], 
                  TextCell["2.5min"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "2028"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "60000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "10000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "300160"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.73\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.04729472319082541, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["1.43%"], 
                  TextCell["1.43%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"8.08\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.08075160253564737, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["2.21%"], 
                  TextCell["2.21%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
sUkXbuP60gAY/1q9QnikDf8HK72MGA==
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9866220735785953, -1.001823657233205}, {
                    1.9899665551839465`, -1.107147864001494}, {
                    2.9933110367892977`, -1.1556949427425296`}, {
                    3.9966555183946486`, -1.1863799637174692`}, {
                    5., -1.0928488502292708`}}]}, {
                    AbsolutePointSize[4.125], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9866220735785953, -1.001823657233205}, {
                    1.9899665551839465`, -1.107147864001494}, {
                    2.9933110367892977`, -1.1556949427425296`}, {
                    3.9966555183946486`, -1.1863799637174692`}, {
                    5., -1.0928488502292708`}}]}}}, Prolog -> {{
                    Text[2, 
                    Offset[{-2, -2}, {2., 0.6450000000000001}], {1., 1.}], 
                    Text[4, 
                    Offset[{-2, -2}, {4., 0.6450000000000001}], {1., 1.}], 
                    Text[6, 
                    Offset[{-2, -2}, {6., 0.6450000000000001}], {1., 1.}], 
                    Text[8, 
                    Offset[{-2, -2}, {8., 0.6450000000000001}], {1., 1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {10., 0.6450000000000001}], {1., 1.}]}, {
                    
                    Text[
                    Superscript[10, "-3"], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-2"], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 5.015458422174863}, {-3.9450000000000003`,
                     0.6450000000000001}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{2., 4., 6., 8., 10.}, {{-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
/B9gCi0j
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9866220735785953, 0.0286}, {1.9899665551839465`, 
                    0.0238}, {2.9933110367892977`, 0.022500000000000003`}, {
                    3.9966555183946486`, 0.0187}, {5., 0.0221}}]}, {
                    AbsolutePointSize[4.125], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9866220735785953, 0.0286}, {1.9899665551839465`,
                     0.0238}, {2.9933110367892977`, 0.022500000000000003`}, {
                    3.9966555183946486`, 0.0187}, {5., 0.0221}}]}}}, 
                  Prolog -> {{
                    Text[2, 
                    Offset[{-2, -2}, {2., 0.9090000000000001}], {1., 1.}], 
                    Text[4, 
                    Offset[{-2, -2}, {4., 0.9090000000000001}], {1., 1.}], 
                    Text[6, 
                    Offset[{-2, -2}, {6., 0.9090000000000001}], {1., 1.}], 
                    Text[8, 
                    Offset[{-2, -2}, {8., 0.9090000000000001}], {1., 1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {10., 0.9090000000000001}], {1., 1.}]}, {
                    
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.25], 
                    Offset[{3, 0}, {0, 0.25}], {-1, -1.}], 
                    Text[
                    PercentForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    PercentForm[0.75], 
                    Offset[{3, 0}, {0, 0.75}], {-1, -1.}]}}, 
                  PlotRange -> {{
                    0, 5.015458422174863}, {-0.009000000000000001, 
                    0.9090000000000001}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{2., 4., 6., 8., 10.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.25, 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {0.75, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    
                    ImageSizeCache->{
                    222.33620349884035`, {7.328759626136161, 
                    11.978173688636161`}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    
                    ImageSizeCache->{
                    280.979347963382, {84.93960943856277, 88.65914083636366}},
                    
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.899989487200488*^9, 3.8999899067492647`*^9, 
  3.8999901201566186`*^9, 3.899990264573818*^9, 3.8999904677644405`*^9, 
  3.899990617297298*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"7c172746-a698-4152-905a-8a0a5272dda1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "3792"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "4"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["11min"], 
                  TextCell["11min"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "360"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "60000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "10000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "242688"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"5.53\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.0553198679053182, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["1.58%"], 
                  TextCell["1.58%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"1.62\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], ShowStringCharacters -> 
                    False], 0.16195723370055481`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["3.24%"], 
                  TextCell["3.24%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9899665551839465, -0.9395235781978414}, {
                    1.9933110367892977`, -0.9305722613473332}, {
                    2.9966555183946486`, -1.0446258389540823`}, {
                    4., -0.7905996497774473}}]}, {
                    AbsolutePointSize[4.1923076923076925`], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9899665551839465, -0.9395235781978414}, {
                    1.9933110367892977`, -0.9305722613473332}, {
                    2.9966555183946486`, -1.0446258389540823`}, {
                    4., -0.7905996497774473}}]}}}, Prolog -> {{
                    Text[1, 
                    Offset[{-2, -2}, {1., 1.866}], {1., 1.}], 
                    Text[2, 
                    Offset[{-2, -2}, {2., 1.866}], {1., 1.}], 
                    Text[3, 
                    Offset[{-2, -2}, {3., 1.866}], {1., 1.}], 
                    Text[4, 
                    Offset[{-2, -2}, {4., 1.866}], {1., 1.}], 
                    Text[5, 
                    Offset[{-2, -2}, {5., 1.866}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-4"], 
                    Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-3"], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-2"], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text["10", 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 4.047441364605565}, {-4.8660000000000005`,
                     1.866}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{1., 2., 3., 4., 5.}, {{-5., 
                    GrayLevel[0.3001]}, {-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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

                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9899665551839465, 0.0339}, {1.9933110367892977`, 
                    0.031200000000000002`}, {2.9966555183946486`, 0.0253}, {
                    4., 0.0324}}]}, {
                    AbsolutePointSize[4.1923076923076925`], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9899665551839465, 0.0339}, {1.9933110367892977`,
                     0.031200000000000002`}, {2.9966555183946486`, 0.0253}, {
                    4., 0.0324}}]}}}, Prolog -> {{
                    Text[1, 
                    Offset[{-2, -2}, {1., 1.0074750000000001`}], {1., 1.}], 
                    Text[2, 
                    Offset[{-2, -2}, {2., 1.0074750000000001`}], {1., 1.}], 
                    Text[3, 
                    Offset[{-2, -2}, {3., 1.0074750000000001`}], {1., 1.}], 
                    Text[4, 
                    Offset[{-2, -2}, {4., 1.0074750000000001`}], {1., 1.}], 
                    Text[5, 
                    Offset[{-2, -2}, {5., 1.0074750000000001`}], {1., 1.}]}, {
                    
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.25], 
                    Offset[{3, 0}, {0, 0.25}], {-1, -1.}], 
                    Text[
                    PercentForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    PercentForm[0.75], 
                    Offset[{3, 0}, {0, 0.75}], {-1, -1.}]}}, 
                  PlotRange -> {{
                    0, 4.047441364605565}, {-0.009975000000000001, 
                    1.0074750000000001`}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{1., 2., 3., 4., 5.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.25, 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {0.75, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    
                    ImageSizeCache->{
                    222.33620349884035`, {7.328759626136161, 
                    11.978173688636161`}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    
                    ImageSizeCache->{
                    280.979372240972, {84.93960943856277, 88.65914083636366}},
                    
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\"\<training set\>\"", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\"\<validation set\>\""}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.899989395764011*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"80102c16-607d-43a8-aedc-5a12e2131a09"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8999932255807543`*^9, 
  3.8999932262399626`*^9}},ExpressionUUID->"4fb3a841-a2e5-44ab-9d89-\
fb3f47708e8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tdNet", "=", 
   RowBox[{"NetExtract", "[", 
    RowBox[{
     RowBox[{"results", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
     "\"\<MyNet\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tdNet", "=", 
   RowBox[{"NetReplacePart", "[", 
    RowBox[{"tdNet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "->", "mnistEncoder"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", "mnistDecoder"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899902310705633*^9, 3.899902323495802*^9}, {
  3.899963556262054*^9, 3.8999635568900957`*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"214c0df1-468a-46a6-850f-b34404d1d650"],

Cell[CellGroupData[{

Cell["Measurements", "Section",
 CellFrame->{{0, 0}, {0, 1}},
 CellChangeTimes->{{3.899909526315485*^9, 
  3.8999095339702168`*^9}},ExpressionUUID->"fa2104ae-bd4a-4297-925c-\
ec46ad74fc80"],

Cell[TextData[{
 StyleBox["ClassifierMeasurements",
  FontWeight->"Bold"],
 StyleBox[" performs a variety of statistical measurements on our trained \
Neural Network. ",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.899908335106683*^9, 
   3.8999083478077602`*^9}, {3.8999349137578506`*^9, 3.899934922396121*^9}, {
   3.899963518445606*^9, 3.899963573144479*^9}, 3.899986913940466*^9, {
   3.8999871003579273`*^9, 3.8999871030050783`*^9}, 3.8999885041111345`*^9, 
   3.899988923718062*^9, 
   3.8999913532236743`*^9},ExpressionUUID->"3fd8a2d6-f15b-4889-8c01-\
b6cfbca36c2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"tdNet", ",", "testData"}], "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899909519101061*^9, 3.899909540112199*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"54a4b80a-f8cf-45b5-9eb3-4b6a20613307"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"65176fc1-5c2c-4301-908e-3faa3384a4a4"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "10000"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"98.13", "0.14"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   98.1299999999999954525`3., 0.1354700897413428085`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   TooltipStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"11.35", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   11.3499999999999996447`3., 0.3172188720446457721`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.9369670529931559688`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0046165847395259196`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.9277338835141041296`3.",
                   "\", \"", "0.9462002224722078081`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.9277338835141041296`3., 
                  ", ", 0.9462002224722078081`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.0651071595890751892`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0049271380947691866`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.055252883399536816`3.", 
                  "\", \"", "0.0749614357786135554`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.055252883399536816`3., 
                  ", ", 0.0749614357786135554`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.13`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"7.35`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQW8FoX0Fp9jv716FHpy+++NZ+ytm3u9QmvLLHJc4A
Bh8w6GkrPZc99H9nn/qvuTQv86198o+pJpKNL+1/8b9xU/v71v7a9/185w3e
2F+t6Fv4IfiZPa/i1du+Ju/sHyxzCrZkfGtvomy3jrvoBU7z48r6nmetemvv
9vH3cv0fr+xdfrbxnVB7bL9yl5E1Z/s7+/y1bLtuWL6zP7TI1dFk/mt7zpO8
vtMvv7Vn+XaieafRfXvLpSb+Ozdnk+wvXO7E5V9c5uAKB1LDf8bNVTOfz31j
7+L3Wev/mQf2ZalP/bL7S+0L2strJj18ax+woO7NzBOv7ZcsNpN+7PKU5Pgi
NV6oRVfsKGBw53xv3+y/emPJ6Tv2Cv9tGC0mRuCMX1zubJ6RILhL4p19lD+j
IcvMN/Ysfs/U/yU9xxmeuMzHJf78H9Omf0ff2p/2sD2VkvDavuzcvSlXTZ/g
tLdIIyhV3uSNvdz9ix+FzR7ar9u/kqHbsAJnOOCyl1rhjCsc9j3Imne/9639
XbZ+3+CeV/ZfhcQ+WfI9wmnOiglsv1d2vbZPqWGeXP3xob3CcWPNC49bSU7P
pOZHUtWTGr97163aHsH/1l7uXnuFX8wD+yp+ef3qPUUklw+kuofU/IuLxmXO
VIc+bjnDd/YurKZ+Lyvu2b+qeVq3jjudZHNwqSc131ErHnfG3vnzYOM7+5PL
tawlKu/aX3gY0N6zKAGnelzlMKn5Dlf4UDv/PqwSWef+8BaUj7u+xlWeU6se
p1Y8eqlpl93PeWtffbp695l/9+39qr8fK80ooHl5SGr5Ty31AJYYxIo=
                 "], {{0, 0}, {10, 10}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["971", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "971", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9887983706720977`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9908163265306122`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9898063200815496`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{971, " examples of ", 0, " correctly classified"}], 
                    Row[{"Precision = ", 0.9887983706720977}], 
                    Row[{"Recall = ", 0.9908163265306122}], 
                    Row[{"FScore = ", 0.9898063200815496}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "3", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "4", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 4, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.002036659877800407}], 
                    Row[{"Row fraction = ", 0.002036659877800407}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "5", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 5, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "6", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0050916496945010185`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005219206680584551`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " examples of ", 6, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.0050916496945010185`}], 
                    Row[{"Row fraction = ", 0.005219206680584551}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "8", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002053388090349076`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 8, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.002036659877800407}], 
                    Row[{"Row fraction = ", 0.002053388090349076}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "9", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002036659877800407`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019821605550049554`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 9, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.002036659877800407}], 
                    Row[{"Row fraction = ", 0.0019821605550049554`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1121", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1121", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9929140832595217`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9876651982378855`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9902826855123673`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1121, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9929140832595217}], 
                    Row[{"Recall = ", 0.9876651982378855}], 
                    Row[{"FScore = ", 0.9902826855123673}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "2", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0008857395925597874`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009689922480620155`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.0008857395925597874}], 
                    Row[{"Row fraction = ", 0.0009689922480620155}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "3", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "4", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 4, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "5", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 5, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "6", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.001771479185119575`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020876826722338203`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 6, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.001771479185119575}], 
                    Row[{"Row fraction = ", 0.0020876826722338203`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "7", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002657218777679362`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0029182879377431907`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 7, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.002657218777679362}], 
                    Row[{"Row fraction = ", 0.0029182879377431907`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "8", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 8, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "9", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.001771479185119575`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019821605550049554`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 9, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.001771479185119575}], 
                    Row[{"Row fraction = ", 0.0019821605550049554`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009643201542912247`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010204081632653062`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0009643201542912247}], 
                    Row[{"Row fraction = ", 0.0010204081632653062`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019286403085824494`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.001762114537444934`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0019286403085824494`}], 
                    Row[{"Row fraction = ", 0.001762114537444934}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1015", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1015", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9787849566055931`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9835271317829457`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9811503141614306`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1015, " examples of ", 2, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9787849566055931}], 
                    Row[{"Recall = ", 0.9835271317829457}], 
                    Row[{"FScore = ", 0.9811503141614306}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "3", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006750241080038573`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006930693069306931`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.006750241080038573}], 
                    Row[{"Row fraction = ", 0.006930693069306931}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "4", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009643201542912247`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010183299389002036`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 4, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0009643201542912247}], 
                    Row[{"Row fraction = ", 0.0010183299389002036`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "5", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019286403085824494`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002242152466367713`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 5, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0019286403085824494`}], 
                    Row[{"Row fraction = ", 0.002242152466367713}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "6", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009643201542912247`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010438413361169101`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 6, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0009643201542912247}], 
                    Row[{"Row fraction = ", 0.0010438413361169101`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "7", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.003857280617164899`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0038910505836575876`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 7, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.003857280617164899}], 
                    Row[{"Row fraction = ", 0.0038910505836575876`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "8", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.003857280617164899`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004106776180698152`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 8, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.003857280617164899}], 
                    Row[{"Row fraction = ", 0.004106776180698152}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "9", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 9, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "1", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002967359050445104`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0026431718061674008`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.002967359050445104}], 
                    Row[{"Row fraction = ", 0.0026431718061674008`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "2", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009891196834817012`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009689922480620155`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0009891196834817012}], 
                    Row[{"Row fraction = ", 0.0009689922480620155}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["987", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "987", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9762611275964391`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9772277227722772`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9767441860465114`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{987, " examples of ", 3, " correctly classified"}], 
                    Row[{"Precision = ", 0.9762611275964391}], 
                    Row[{"Recall = ", 0.9772277227722772}], 
                    Row[{"FScore = ", 0.9767441860465114}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "4", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009891196834817012`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010183299389002036`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 4, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0009891196834817012}], 
                    Row[{"Row fraction = ", 0.0010183299389002036`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "5", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.011869436201780416`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013452914798206279`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " examples of ", 5, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.011869436201780416`}], 
                    Row[{"Row fraction = ", 0.013452914798206279`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "6", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0009891196834817012`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010438413361169101`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 6, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0009891196834817012}], 
                    Row[{"Row fraction = ", 0.0010438413361169101`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "8", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002967359050445104`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003080082135523614`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 8, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.002967359050445104}], 
                    Row[{"Row fraction = ", 0.003080082135523614}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "9", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002967359050445104`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002973240832507433`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 9, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.002967359050445104}], 
                    Row[{"Row fraction = ", 0.002973240832507433}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "0", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 0, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "1", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0020242914979757085`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.001762114537444934`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 1, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.0020242914979757085`}], 
                    Row[{"Row fraction = ", 0.001762114537444934}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "2", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006072874493927126`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005813953488372093`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 2, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.006072874493927126}], 
                    Row[{"Row fraction = ", 0.005813953488372093}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "3", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 3, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["966", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "966", "\" examples of \"", "4", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9777327935222672`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9837067209775967`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9807106598984769`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{966, " examples of ", 4, " correctly classified"}], 
                    Row[{"Precision = ", 0.9777327935222672}], 
                    Row[{"Recall = ", 0.9837067209775967}], 
                    Row[{"FScore = ", 0.9807106598984769}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "5", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 5, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "6", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.008097165991902834`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.008350730688935281`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{8, " examples of ", 6, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.008097165991902834}], 
                    Row[{"Row fraction = ", 0.008350730688935281}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "8", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 8, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "9", "\" misclassified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006072874493927126`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005946481665014866`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 9, " misclassified as ", 4}], 
                    Row[{"Column fraction = ", 0.006072874493927126}], 
                    Row[{"Row fraction = ", 0.005946481665014866}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "0", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002229654403567447`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020408163265306124`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 0, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.002229654403567447}], 
                    Row[{"Row fraction = ", 0.0020408163265306124`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "2", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0011148272017837235`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009689922480620155`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 2, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.0011148272017837235`}], 
                    Row[{"Row fraction = ", 0.0009689922480620155}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "3", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.007803790412486065`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006930693069306931`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 3, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.007803790412486065}], 
                    Row[{"Row fraction = ", 0.006930693069306931}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "4", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 4, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["872", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "872", "\" examples of \"", "5", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9721293199554069`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9775784753363229`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9748462828395751`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{872, " examples of ", 5, " correctly classified"}], 
                    Row[{"Precision = ", 0.9721293199554069}], 
                    Row[{"Recall = ", 0.9775784753363229}], 
                    Row[{"FScore = ", 0.9748462828395751}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "6", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.005574136008918618`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.005219206680584551`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " examples of ", 6, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.005574136008918618}], 
                    Row[{"Row fraction = ", 0.005219206680584551}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["6", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "6", "\" examples of \"", "8", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.006688963210702341`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006160164271047228`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{6, " examples of ", 8, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.006688963210702341}], 
                    Row[{"Row fraction = ", 0.006160164271047228}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "9", "\" misclassified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004459308807134894`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003964321110009911`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 9, " misclassified as ", 5}], 
                    Row[{"Column fraction = ", 0.004459308807134894}], 
                    Row[{"Row fraction = ", 0.003964321110009911}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "0", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010559662090813093`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010204081632653062`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 0, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.0010559662090813093`}], 
                    Row[{"Row fraction = ", 0.0010204081632653062`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "1", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0031678986272439284`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0026431718061674008`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 1, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.0031678986272439284`}], 
                    Row[{"Row fraction = ", 0.0026431718061674008`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "2", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 2, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "3", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 3, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "4", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004223864836325237`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004073319755600814`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 4, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.004223864836325237}], 
                    Row[{"Row fraction = ", 0.004073319755600814}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "5", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0021119324181626186`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002242152466367713`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 5, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.0021119324181626186`}], 
                    Row[{"Row fraction = ", 0.002242152466367713}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["935", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "935", "\" examples of \"", "6", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9873284054910243`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.975991649269311`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9816272965879266`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{935, " examples of ", 6, " correctly classified"}], 
                    Row[{"Precision = ", 0.9873284054910243}], 
                    Row[{"Recall = ", 0.975991649269311}], 
                    Row[{"FScore = ", 0.9816272965879266}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "7", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 7, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "8", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0021119324181626186`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002053388090349076`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 8, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.0021119324181626186`}], 
                    Row[{"Row fraction = ", 0.002053388090349076}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "9", "\" misclassified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 9, " misclassified as ", 6}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "0", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019138755980861245`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020408163265306124`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 0, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019138755980861245`}], 
                    Row[{"Row fraction = ", 0.0020408163265306124`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "1", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019138755980861245`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.001762114537444934`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 1, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019138755980861245`}], 
                    Row[{"Row fraction = ", 0.001762114537444934}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "2", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0066985645933014355`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.006782945736434108`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 2, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0066985645933014355`}], 
                    Row[{"Row fraction = ", 0.006782945736434108}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "3", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004784688995215311`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0049504950495049506`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " examples of ", 3, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.004784688995215311}], 
                    Row[{"Row fraction = ", 0.0049504950495049506`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "4", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 4, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "5", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019138755980861245`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002242152466367713`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 5, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019138755980861245`}], 
                    Row[{"Row fraction = ", 0.002242152466367713}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "6", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 6, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1016", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1016", "\" examples of \"", "7", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9722488038277513`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9883268482490273`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9802219006271105`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1016, " examples of ", 7, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9722488038277513}], 
                    Row[{"Recall = ", 0.9883268482490273}], 
                    Row[{"FScore = ", 0.9802219006271105}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "8", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0019138755980861245`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002053388090349076`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 8, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.0019138755980861245`}], 
                    Row[{"Row fraction = ", 0.002053388090349076}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "9", "\" misclassified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00861244019138756`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.008919722497522299`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{9, " examples of ", 9, " misclassified as ", 7}], 
                    Row[{"Column fraction = ", 0.00861244019138756}], 
                    Row[{"Row fraction = ", 0.008919722497522299}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "0", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010204081632653062`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 0, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0010204081632653062`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "1", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0020833333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.001762114537444934`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 1, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0020833333333333333`}], 
                    Row[{"Row fraction = ", 0.001762114537444934}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "2", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009689922480620155`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 2, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0009689922480620155}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "3", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0020833333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019801980198019802`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 3, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0020833333333333333`}], 
                    Row[{"Row fraction = ", 0.0019801980198019802`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "4", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010183299389002036`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 4, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0010183299389002036`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "5", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0020833333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.002242152466367713`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 5, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0020833333333333333`}], 
                    Row[{"Row fraction = ", 0.002242152466367713}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "6", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0010438413361169101`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 6, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0010438413361169101`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "7", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009727626459143969`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 7, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0009727626459143969}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["948", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "948", "\" examples of \"", "8", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9875`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.973305954825462`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9803516028955535`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{948, " examples of ", 8, " correctly classified"}], 
                    Row[{"Precision = ", 0.9875}], 
                    Row[{"Recall = ", 0.973305954825462}], 
                    Row[{"FScore = ", 0.9803516028955535}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "9", "\" misclassified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0010416666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0009910802775024777`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", 9, " misclassified as ", 8}], 
                    Row[{"Column fraction = ", 0.0010416666666666667`}], 
                    Row[{"Row fraction = ", 0.0009910802775024777}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 9.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "0", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00199203187250996`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0020408163265306124`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 0, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.00199203187250996}], 
                    Row[{"Row fraction = ", 0.0020408163265306124`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 8.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 7.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "2", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 2, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 6.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "3", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00199203187250996`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0019801980198019802`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 3, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.00199203187250996}], 
                    Row[{"Row fraction = ", 0.0019801980198019802`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 5.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "4", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0069721115537848604`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007128309572301426`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 4, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.0069721115537848604`}], 
                    Row[{"Row fraction = ", 0.007128309572301426}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 4.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "5", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 5, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "6", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 6, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4", "\" examples of \"", "7", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0038910505836575876`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4, " examples of ", 7, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.00398406374501992}], 
                    Row[{"Row fraction = ", 0.0038910505836575876`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["7", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "7", "\" examples of \"", "8", "\" misclassified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0069721115537848604`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007186858316221766`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{7, " examples of ", 8, " misclassified as ", 9}], 
                    Row[{"Column fraction = ", 0.0069721115537848604`}], 
                    Row[{"Row fraction = ", 0.007186858316221766}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["982", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    9.894839181882503], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "982", "\" examples of \"", "9", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9780876494023905`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9732408325074331`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9756582215598609`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{982, " examples of ", 9, " correctly classified"}], 
                    Row[{"Precision = ", 0.9780876494023905}], 
                    Row[{"Recall = ", 0.9732408325074331}], 
                    Row[{"FScore = ", 0.9756582215598609}]}], "Tooltip"]& ]}, 
                  
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 9.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "980", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9908163265306122`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{980, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9908163265306122}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 8.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1135", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9876651982378855`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1135, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9876651982378855}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 7.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1032", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9835271317829457`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1032, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.9835271317829457}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 6.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1010", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9772277227722772`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1010, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.9772277227722772}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 5.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "982", "\" example\"", "\"s\"", "\" of class \"", "4"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9837067209775967`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{982, " example", "s", " of class ", 4}], 
                    Row[{"Recall = ", 0.9837067209775967}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 4.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "892", "\" example\"", "\"s\"", "\" of class \"", "5"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9775784753363229`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{892, " example", "s", " of class ", 5}], 
                    Row[{"Recall = ", 0.9775784753363229}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "958", "\" example\"", "\"s\"", "\" of class \"", "6"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.975991649269311`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{958, " example", "s", " of class ", 6}], 
                    Row[{"Recall = ", 0.975991649269311}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1028", "\" example\"", "\"s\"", "\" of class \"", "7"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9883268482490273`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1028, " example", "s", " of class ", 7}], 
                    Row[{"Recall = ", 0.9883268482490273}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "974", "\" example\"", "\"s\"", "\" of class \"", "8"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.973305954825462`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{974, " example", "s", " of class ", 8}], 
                    Row[{"Recall = ", 0.973305954825462}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {10.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1009", "\" example\"", "\"s\"", "\" of class \"", "9"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9732408325074331`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1009, " example", "s", " of class ", 9}], 
                    Row[{"Recall = ", 0.9732408325074331}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "982", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9887983706720977`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{982, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.9887983706720977}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1129", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9929140832595217`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1129, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.9929140832595217}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1037", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9787849566055931`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1037, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.9787849566055931}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1011", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9762611275964391`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1011, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.9762611275964391}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "988", "\" example\"", "\"s\"", "\" classified as \"", 
                    "4"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9777327935222672`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{988, " example", "s", " classified as ", 4}], 
                    Row[{"Precision = ", 0.9777327935222672}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {5.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "897", "\" example\"", "\"s\"", "\" classified as \"", 
                    "5"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9721293199554069`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{897, " example", "s", " classified as ", 5}], 
                    Row[{"Precision = ", 0.9721293199554069}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {6.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "947", "\" example\"", "\"s\"", "\" classified as \"", 
                    "6"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9873284054910243`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{947, " example", "s", " classified as ", 6}], 
                    Row[{"Precision = ", 0.9873284054910243}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {7.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1045", "\" example\"", "\"s\"", "\" classified as \"", 
                    "7"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9722488038277513`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1045, " example", "s", " classified as ", 7}], 
                    Row[{"Precision = ", 0.9722488038277513}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {8.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "960", "\" example\"", "\"s\"", "\" classified as \"", 
                    "8"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{960, " example", "s", " classified as ", 8}], 
                    Row[{"Precision = ", 0.9875}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {9.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1004", "\" example\"", "\"s\"", "\" classified as \"", 
                    "9"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9780876494023905`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1004, " example", "s", " classified as ", 9}], 
                    Row[{"Precision = ", 0.9780876494023905}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{9.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    8.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    7.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    6.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {
                    5.5, 
                    FormBox[
                    RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {
                    4.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {
                    3.5, 
                    FormBox[
                    RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["9", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{9.5, 
                    FormBox["980", TraditionalForm]}, {8.5, 
                    FormBox["1135", TraditionalForm]}, {7.5, 
                    FormBox["1032", TraditionalForm]}, {6.5, 
                    FormBox["1010", TraditionalForm]}, {5.5, 
                    FormBox["982", TraditionalForm]}, {4.5, 
                    FormBox["892", TraditionalForm]}, {3.5, 
                    FormBox["958", TraditionalForm]}, {2.5, 
                    FormBox["1028", TraditionalForm]}, {1.5, 
                    FormBox["974", TraditionalForm]}, {0.5, 
                    FormBox["1009", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["982", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1129", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["1037", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["1011", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox["988", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {5.5, 
                    FormBox[
                    RotationBox["897", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {6.5, 
                    FormBox[
                    RotationBox["947", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {7.5, 
                    FormBox[
                    RotationBox["1045", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {8.5, 
                    FormBox[
                    RotationBox["960", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {9.5, 
                    FormBox[
                    RotationBox["1004", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {4.5, 
                    FormBox[
                    RotationBox["4", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {5.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {6.5, 
                    FormBox[
                    RotationBox["6", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {7.5, 
                    FormBox[
                    RotationBox["7", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {8.5, 
                    FormBox[
                    RotationBox["8", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {9.5, 
                    FormBox[
                    RotationBox["9", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->12.894839181882503`,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->304.73807018259004`,
                
                Method->{
                 "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                  "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899909545318164*^9, {3.899963549647146*^9, 3.899963562006198*^9}, 
   3.899964109498166*^9, 3.8999869194296556`*^9, {3.899986967838189*^9, 
   3.89998698386523*^9}, 3.899987107344101*^9, {3.8999871763982077`*^9, 
   3.899987185602916*^9}, 3.899987273393281*^9, 3.899987437125777*^9, 
   3.8999877062911077`*^9, 3.899988513168095*^9, 3.8999895083191133`*^9, 
   3.899990131774054*^9, 3.8999906296498036`*^9, 3.899993787409674*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"4608ca52-0cfb-4a0d-bfec-1ed366b6175b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"measurements", "[", "\"\<Accuracy\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"measurements", "[", "\"\<WorstClassifiedExamples\>\"", 
  "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8999095654988213`*^9, 3.8999095831821127`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"7c6d8178-e953-4db5-a435-722848b322c4"],

Cell[BoxData["0.9813`"], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899909576792054*^9, 3.899909583452985*^9}, 
   3.8999635820189047`*^9, 3.8999872822039585`*^9, 3.899990693001899*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"acef38d8-61bd-4633-acf9-a4e66250cc04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cGuCC2HZfU1UxmmUU45PKZmDkXY5X598qQiVn4IFa5bczMTMwaWKUW
yoDkZLdhM3GPOEiOmbn9F6YcUBgsx5RwDU1qgwMTEDBA8GRUOS+QNl3veY4g
veIoUl8cQHJA9V8CxNHt3MYMlft/8EI20M4OJDlVoEXeCDaDzgOEnBpQlw+U
vV2CmUkXTU4i/j2EMxfonh0IuUqwfY5506fl5x1UQpVLZmKC+y8URCPF42kJ
Zni4ALGizxkkh27XQMgZ7UALtX9hYHEJR4fJD/4PMQAAkkxnNg==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9C4M2Nx39xyTno58zDJWfBFMvehUNuJiMjI5ftnV83HmPKXZQDSjKq
pzGqlGwHCxyegJC8HsbMCAG1e/jMpPk4s5G17nFVEAXJ5Z0N2KXIyHgRzeSr
LQ6aLS0J3oyMDBhy//9/fv///06Q7pTfWFz87vkKJgkWkctYpG5qMDJyNIks
xubRNqB506sZF/8/uhNdahkHSK5GynotPxea1PZqsBcdRBkYJU+gyeULgaS0
Wqtv3mxCN/IBCzNHyOIH2Bzy///mmdjFBwMAAKKsqvI=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8hYL8Dw35cUsBgwCFXD5RywC1VjzCjvr4eYQaygSDTkU1BCnMGGIAJ
OMDV1WPIgc2pBwEHBjQjwb5DBgh3wRznANWN3S+jAA4A/HDBcA==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8mIKcdtxwjc9IRXHIMTEwSdmDg0wMkTqPoY0IBDshyJqhyJchyT3Yn
KSoqsoAluDt2f8W0VQAsp9KMzUUQOSZmCQmZjR/R5LY7S7LArEzENLejDghc
QZKBWD37Kw2sE0307/svX94fDQDJsBagSk2sZtLRhtpXj92dTEyCrjd/oMmV
cgLF2bi4AnZhccXbvLy8LVjdNwgAAD/ljiY=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8A8OPTp9+45EyZmb2PvMUux8QMBHJHbmHTnMXMZSwIlPbvx5T7vWbK
/3UgSWb/Qy+wGXzxcIwOMxOz5RHs9r46P0GdmecoLiffV2fejktuCw9Ouc8c
zFI3scr83MnAxCRZXS3BVIAWEt+eeTODQwEMUKQOOAFFRHPT5jd5zddClnvw
tEIMKGV4HcL1Q8j9qZNTBcqYr4EG6Cs55ii4TUpAGYm136DcOxbMzNfhRs6L
yD9/F8Z51c7D3PwHq0f2OTAzh2GP6rflBQUFD7BKDSgAAJEIrIk=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4NXpBzhkrsUoMIkXvsYqN5ORiZGJQWstVjkmZhDkWYfNTE0meR6g
Xi0MmbUzZ35dUsgD0okutZ2JEQbF0OXSmZmgUOwsutwrD6iuGmzOPFsTDNKH
pKsv/RVc62KQvgyEHBOzgslMEPAwUQDbhySXjnAfGJoghdnDJUzMCGg/AS04
14KMNGmdORNrSA5pAAAk6p8b
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+W4M2jR6d65v/CED88I0qbnxEE2lDEv+/JluAxK9vxHMQ5hxIo94PZ
jBe8hvFKPRAyn2q4Um8iuPONXsHZH+1lNiGZcSgU4ZTnFh5vkc3/iND1f6HW
eyD54S42L3nXgUhfPp95H/6iy5kYg6lH080Y/R+hyV1lzXwJZvze5Mu3G01y
mqBQ2mEIs0TyObqxPV48LO5AYMCYgcVBr07PmZM0Z85lDNcMaQAA9HXf7A==

       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8B4P2WhoY8cZ+GhvqGhlkvX778gpAKE2dmZmZiRhC6c27B5JCFoYQI
TO6tmzgTEyMTE5Owto6OjhSIpYow9f6BAwdCmZllbwPZU5mYuYqQbASBH682
MPPueW3Fx8TciOncV8FM8jpA+xp/YPOMHsgtgV+wSf1vATnoEvZAADk/B7sU
WI77G245ZuOrWOXAbmGagl1jAisTEwNTA3bJNFB4aj/GKvdlSahmYyN2G2kO
ALNjl7Y=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "8"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8GOvAwNT2S8sMk/bXZmZmZiZL2FK7VdkZgbL1WFoqmQHCjOH6zAz
x6PLBYK0lL/8+0KHmfsVqtRtRSYmiasg1mwmppUoUh9UmJkhUv/f6TGXocg9
B1o1FcL8lIkmF8/MrPoRxLiSosHM7LMKWc4M6rorkiDHMrMk3UfIlTAxxQGp
c2JMDExAwADhQkApWN83K2ZmNrfFiwvEmZlVbsPkTjAzy5z/fwFoXA+Ie96a
mVkJ2Q/iYDkI/6EMjAUEy5WAKpfDfbKAkzkH4ZpwNogzuPc9f745i4mJaxuS
N6qYmaDxACZKkL34rE0RSU7sHkrY/H/W4QaTE+n6jw5+vHy5sgwItrzFkKIL
AABNq17q
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cUXFiWfKvqCVapPba7cela6X8fh8ylLNVDuHStMVpOktuwmv8Fm+jh
ve3ZhpLsopp1P9Bk1kkzMzIae3t7qzMyPkeTe23ovvTrn///96sy5v3DMPPX
yiVLUhkZGRQ+Y0hdU2AEAj4hFsb8D+hyd22k/PP2vft/yosx6C8uX3yWYnyP
S+6/Im65r9J8nxC834tKGr7COBcCGJuQVC4BOlC0d+8voMTeYjbG6j9Icjeq
tUDuFxAUYGNktF2A5srf55dWhiiaB/cufYrT/YMWAAC3bsQu
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "3"}]}], "}"}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899909576792054*^9, 3.899909583452985*^9}, 
   3.8999635820189047`*^9, 3.8999872822039585`*^9, 3.8999906930503707`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"38b1d76e-6a5a-4d8c-837e-5e5ac297524d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "[", "\"\<LeastCertainExamples\>\"", "]"}]], "Input",\

 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8999096079460917`*^9, 3.899909607966549*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"f25a77b4-5974-4767-b348-045c3ed84c68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cS+K3xAqdc7FScUm9TcRsZ8gqn1NkZuLWFrcEp9Qq3Q/6nr8QtF/4D
p9RJT9za2ltwy7mdxS1n/hOn1HE81m2rvn8ap5y2S1rRWxxyPp/+z8rEIScL
JKJnYZX7xVD6508vjgi8FyBgWPEHt2MHKwAAH9//4A==
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0oJqh5y8uOXsmpiu45DyYSt/gknsU/Ay3hY9wasMLXuKRC2nBLedX
gltu/4nbuKTOb3r7GZfcgbm4jWxehVPqQvwhnHIzmXDLrWldiUtq25r/OF0Z
aIXTxJf1s3DK/Q902ItbkloAAABxA7w=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cHmF6FXfxcfWLaB2wSV85lz9747i82qU+OfbgtSjmDU+qhIW5tq3fi
lnN9j1vO2Kn1873f2OW+bNiwtsRkD27N/x+kJX3BKfl3qv9n3FpVLuOWK8Yj
Z4BbbgXvTZxyurMwhH7/gdDtId8w5D7lrfz2ec+teYLnsBm2PZglksHiBm5H
DigAAGrZ+1g=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4F/8qg+45C4JTk76h13qQ2De/7snscvdZLz6/3/IX6xyXw3W/P8v
+wy7xmd60y4L7sLhmC91SowmP3A59QTHDVxS/09Y45T6v8sTt5zXTpxS01kf
4ZL6KmfwG5fcBcb1uKTWi4Tj1Kbn+AeX1ET+OzhkvjVKncIh9V2XsQyH1EcT
/XM4opyqAADfo/bt
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "9"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4OQiLIK/IFT2BUypDzZg6pn3b0y5ohVgqnIiFm3yb0DUH51vmHLL
ysDU7IVYXJI6HUT+tv6AKfVVEmzkxgYs2t65gqkJa7DIbUsDUyYvsMi1LgeR
9wU/YZFz3Qoi56Vgkfqv1wcMtDwJbD74r9f8f4/9cudL2OS8GHmdb/7XweK7
///v5e/88/+FBjYpCLiog1tuXjxuufw63HJx53DL0RwAADfM9Xs=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcEH6BU65bUy38citwynXz5T+///N+k2/scjNAZp5T9qM/yQ2My3+
f5ZmeBuv/wpTLsny/xumyr9XmLZjysVY/r/P9On/TwPscpOYgLQFdrkiXHJO
Fv/NGYG0eTmmnKjlK0ncZt5iCvj//xIXDrnY/7/NxN9jytUC5eb+X8HUjyn1
fxvjFpXaC3zGr7HIHWOTkOTQ4LuLRer//z4mJibJbVil/n/e484U9xG73P//
P8uVJuOSowMAABQnzgY=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cLaOOai0sqndnzKXaZDxP4tR/jkIpl1HmEw8A4xs53OKTWscb/wiG1
XojzHg6pr/ps63FJuTBOwiH1P5KlApdUMEM8LqkC4flPcMl17oexTt/FpeZL
IJvdA1ShkzOhJhozMjLOQJGawzv9G4h+GcbGyJjwBUVOExJllyQY2bXnogb2
rjCwiZ9MGBkr0R1g2PQVSP42YmSU34EuJ7QCRH5jZAj4icv9Aw0AE7rdZA==

       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4J0Ig06f9ep/WCUPbXj//7iB21mcus8whuCRi8Up18fYh0vqlznj
OVxyxxm1f+CSkmF0xi7z3pmLkfMSVqtOFzIyMppgd8ZUn6Y8xjhcLvk/A7cr
X4lp/sIldxOPkVU8e3BJvRbVxqntGGMVTrkwntu4pB4xq+PU9hCPK6kHAJ46
6iI=
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "7"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cKiGZ4jEvq13Tu57jkXs52xmlkZPdcXFJfXGfi1LZK9R1OOV+z1zjl
1v7CKfUf5pAvOFUcT4vBJXUujJHjAlaZr792rvUT248meuMOiPR7/Or/OX90
HXvAZM5XOBMBdk4DWvXq/4//f99jWHTV78t/t1v/f31u2ojpisaF9y+9Oplu
NxuLC6dtVE6Zyqbu+gqLXJEAE7dC0ZTfWKT+F3HKiW/HJjH4AQAMWO/j
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4BqH6V8cUs/0+FbjkDrgwbgGm/j7//8mCNYrTsIi9Tp+t53slv82
2OQamBm8b/3/X4VN7mLP9T9AqmoCDqcAwUbbfzjlPoq+x61RZh1uuUIjHOFy
ri43iFFmHzapxSyMjK6sbI+xyf1Yter9v3qOP7htZNmAWy5NA7fcc+7LOOV+
W7nh1vhC7hFuyey3uOWIAgCRqu2n
       "], {{0, 28.}, {28., 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28., 28.},
     PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "7"}]}], "}"}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899909609209907*^9, 3.899963584726383*^9, 3.8999872935398617`*^9, {
   3.899990695678672*^9, 3.8999907161087246`*^9}},
 CellLabel->
  "Out[335]=",ExpressionUUID->"0a29397f-776e-4920-823b-158b467a47f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "[", "\"\<TopConfusions\>\"", "]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899909622136644*^9, 3.8999096221535053`*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"7c02fe2f-c8ce-4484-ac92-873d0def9c4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "\[Rule]", "7"}], ",", 
   RowBox[{"3", "\[Rule]", "5"}], ",", 
   RowBox[{"4", "\[Rule]", "9"}], ",", 
   RowBox[{"8", "\[Rule]", "9"}], ",", 
   RowBox[{"2", "\[Rule]", "4"}], ",", 
   RowBox[{"3", "\[Rule]", "7"}], ",", 
   RowBox[{"4", "\[Rule]", "6"}], ",", 
   RowBox[{"7", "\[Rule]", "9"}], ",", 
   RowBox[{"1", "\[Rule]", "3"}], ",", 
   RowBox[{"1", "\[Rule]", "6"}]}], "}"}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.899909622691147*^9, 3.899963587812405*^9, 
  3.899987305034621*^9, 3.8999907199214387`*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"65611b4c-47f6-4ee5-84ec-17f31b3c74bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding Hidden Features", "Section",
 CellFrame->{{0, 0}, {0, 1}},
 CellChangeTimes->{{3.899909526315485*^9, 3.8999095339702168`*^9}, {
  3.899911482792962*^9, 
  3.899911490609777*^9}},ExpressionUUID->"265cf13c-abfc-42b8-bd87-\
513cbaab6935"],

Cell[TextData[{
 StyleBox["NetMeasurements",
  FontWeight->"Bold"],
 StyleBox[" can also plot the mean activation of the results after a certain \
number of layers. Here are the mean activations after the first convolutional \
layer with 6 channels.",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.899908335106683*^9, 
   3.8999083478077602`*^9}, {3.8999349137578506`*^9, 3.899934922396121*^9}, {
   3.899963518445606*^9, 3.899963573144479*^9}, {3.899963613584235*^9, 
   3.899963618726877*^9}, {3.899963959742036*^9, 3.8999639782802153`*^9}, {
   3.899964248885151*^9, 
   3.899964263813781*^9}},ExpressionUUID->"13d45ae9-64cf-4981-8d2a-\
be20218175b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"activations1", "=", 
   RowBox[{"NetMeasurements", "[", 
    RowBox[{"tdNet", ",", "testData", ",", 
     RowBox[{"NetPort", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "\"\<Output\>\""}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"ArrayFlatten", "@", 
    RowBox[{"Partition", "[", 
     RowBox[{"activations1", ",", "3"}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
   RowBox[{"FrameTicks", "->", "None"}]}], "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899909653370782*^9, 3.899909656623279*^9}, {
  3.899911599042798*^9, 3.899911607426876*^9}, {3.8999116478402233`*^9, 
  3.8999116504103537`*^9}, {3.899964184699546*^9, 3.89996418556161*^9}, {
  3.899964216180044*^9, 3.899964238496663*^9}, {3.899964287897092*^9, 
  3.899964289735824*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"a901ff96-8a4e-4a6f-988d-f2dfc6a550e8"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
sf3KzVNJzjY9zfo0WsQE/x83yLdJgJWWqp5lhOfFVGxZCPHUa6KQmGEIEPPk
teJach5Smzc2LnzBwlWjHY2BH5kYqZkuu4kWQypp6aPnmUIIty7eOlGehUaf
iabqw2I4jJcXye8Voujp1hm8TBYULp/IPa9BoyV4Q+JcaSG2lahsC9/FRm9H
YfmKfTT0aq9lXyE9QTMr6VyfG+GA/Lliv1wa+7uS7s56Q6FLfYzHf2S+On0u
ueuR+eq0e67vS+ZLQS3c//14Lsa7Tlgxs5YGe+bWX1d9KdRFzDgyfwcbwjMq
yq+I/wR0wWA58R+jDytRepeJ62GXr+4j3N6yxmFZRYUQ7zE5/sYWBnxLJsnH
kn3suim1WbZGhAG2m5V/URdW7rg6fE5bDA2Jk+KgZTeWXk+bryTfBf0LEb3a
Q90YKLJvX3+nGxZH4m+96O2E004ZwwnEk09/D1lk0dINlf0HPItnEg9PHSh+
P9qNLP0tI06l3ah9UGH/O6cLGQHUx2YtMfIqAhWmru2G1pqFAbp/u5DG+L12
r70YhYKttQZDpF/Uf3t235iByBkT4455iXFCDkcbW0Q4Jfun+2oWA0OBHxzr
Y8QYunnXeO9REV7Ml+VYyDKxyXssU+OyGPJy8dliPRHKwgw6/fyZmDf8fMvM
Z2JYb/Qw49FCvPS2VGCVkL5p11fq0EZD6VrZ4tL/f881mUtXT+dhY8SujOnd
hM8KBcf6k/kIovZNx27iU/ZSCwfIvA+0B/SmqfNxIDdZV52sq0SEzvtC1leO
Xj19naxr/hf2rvYvF380dpj4UzRmN+TkaBbxwQjW+i9yOxdvY+p2RD+nkadx
eEz+Mgq+QbO//vpFeCg3zymX+HBjmNgqMZCC+wzjkuQALiKrRy/GkX7KSnNf
/U+bQmO/S/7dcC42q1I7JxBuD9QMLP+uTsGrdc6K3zZccMatfuH1jOS4wa01
RhYUrr4cFzVnIxenTXTsxQ00tPQPyTasoOAMH9e+L1xMbHqcuItL47VKhMO2
Kj4anr6rm+jHg9PF4FOK5LlmbPqk+WgxHzpnI/MOP+Rh3c65CZ+JH9IaVmzH
eh4kxsLmBCs+nHsLk3JmkPnSM6rcMo9wr3LtNNNBPgRLTWcXGEuQfVywZbUd
F19ck1wvEK47pxXV3nOXoHdHYvivdRxk+MyXUWim4G0c7MTcI0E9XRvvfo4N
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
f9Ljzu58tGtSWQ+u3ZGYMzmhF05Bd6NSl1DI33xbJ+l1D95EKXuqsXtRqW9a
EbuGQpK29ZN61x70eF20LFBl4iHv18I7phSUToi8msLrBu/loRlBh5mwvzSl
096RgrvJi8CgTd24cTJmfn4oE0E+wRqmhFfX5Iyuucp2Y5J34uwb85m4/vuU
h+ZGCvcTvvcq/e5G8WnGoSLdXsyfNePeT7KvU8fEnw1rMPDBV+2OqX0v9usG
EgmhEHjx9w4PUQZSzZiiYiFM1PN6Om+6El99aXc+Zl43lJXnmkRsYeEQlRz0
lPiwptcqKuhNF+CfXO2bxoKMypV5I6QHi64XVZdX6IKWosmCzmYWtv01U+sj
Xj37XuT5kI+dGGU05SpXs0CVPbI/S3xP70jRgROtndBZvS4kypt8T9WmDDnC
7RXdhTXjfl048253ZNBXJsLHVhyx9abwzvmpt4otHf+k2kW2lzMhNUepX4T0
qxkVv4KdU+jo0rnmHVPGhKOP2DL+YQqdmWrVj1PpGEmIv2D5lomvxpNPkZuA
Dj2idlsu4bPCzH6v2gHQLu05wHjHxo+nLeKrq2vwcuOMfSuvDKByePdSc1ey
bguizsu51ULv1rsNz7r68SJFZrSGeJTgxlqPgPo6XLXet8/0aR8uVWy7krSS
9PSSDfufPG7Ay8VXmvKIN8o6ZwRIEm9khAWzpYg3/otbq9LQKITBYU+l8mo+
forQs5d4NsIgX0Y3UK8PQtl3LuLn+TjMqIjSXtyISPa1e/R9fQiuPFwc7s5H
zGdfm8/ijRifeob9bUyIwcrkWGTxMVj0JqjGqhFyD+quOegIoa7SUFmrQqEp
RMplDbMRA49LnmhuFGDq04OLikmPsJc0V5LMoeGU/3hkMVnHvkIqqTOFeMX7
ibl56U24HdWQ6PeWD8Wtj8I+F1D4WX1n9IxoM3g+VmrBZB1ree2KiyF53TKY
9GHofhM2+h56vnudAMZB9e23yfo8s7Sdp/Oehgz/SpNbXkLcstN92ChLcmHl
yLb3rxpxOVKTbmvYh1yHBbVfQ/jYt+9FtpYKyZ0d8XOerO1HaZqV4fnPPOxx
le7uZdejW9bC6DCjH6LDN07MFHKx/sG8r+c/1WFDdfa61PkDcPh7tXGRPRfP
1RNjkk3qcM9hIHHygxbo/ha7N3iUg77ewc0t5XxUt5SNp3BaoVK9M9Fbn4sD
+nH5E895UClmbl9o0I4ka6Vx82k8vFWlfZgfxcU5U+PTI2c6oBAf/XT9KR6c
nKe867/LwYLaab13rDphf3mN28UCHjJla6S1/rCR+D3o9UL9TrQ1/i2emcOD
kdHepX8kOPjbbv9tdEonMqe5sPMfEp5r7dOwWsnBNPFyFxP1Toi07KM+PyN+
zDRdsn0OB87T/xjttOzCt8rDdPVZfMwMrNo/qscGbaly++yvdDSPaHbfv8KH
fbjAXWc6C9H5d1f+/17Fe9NOy/7/XsXwu+N//3+v4tedWcremzpBf6dnH5jH
wxEFqTlqE2z0+X1ePUm7DY2rPLa3e3IRM+vep9BjPMBid/BdkRaYLbxZfFiU
g+ezk8yUt1PIFvv6KTOG9LBn9sxtgSwoRmcIFAIF2DWH6pPMpmFpWjG+7WPi
2EORUxYrhLgwMC8qiPSqkH1uNz5oMbH7VEbx1a1C7Aw9V7i3n4YUo0KHRc+Z
iJ1s/rtzVIDS7QYa97Y1Ye7aXxpv1Fgo6cm705UtAEe01sSCjNcFDqtak/F9
B+dKzX8hQKRowqhgERNbDvSsHDWh8Daip8pJ2I1NOY25B+t7kTZ3OcdEk3Am
Z+c3B/8eJCnIJwRJMPFyoCm8XI/02XM+c8qX9+D2YI3cJHMmcqTfHSon97lk
tfjWF3HduL5m25/Jr5go74lzsT1IQdY+Ya3+BzrSROe83riLha4rQ87fiLfs
7l2uvyW9C/cmd6Vtq2LhgkdSnBvhm8yPHwd62zpRptr36AXJIe71etnEMxTY
QZoL6joJJ+s1/AvVmaDf1m24u4lCiYy/Ob2nG8vH8z7cesjAzcsiAmqMD52z
9bSaLgbG+miT+1f3Ym9MZFAD2Ud5U5KjFNcwEHSNoWU+hZznzdvoKfoUXp0M
mcHU6EHmAdawmwsT3fEN/Yl2xL9mT7/5y7Ub2rEeFuYtTLzViRc7R3w4K1ts
c3UYHVLD51tZx1hIW6F6K4r068aipLC9wV0o2iI9vfkg8eo/H//WnSccPlQS
rHWxC3M3GiyIXUHymBt10CKAwsG1Vn3Zwi6IdZXoNgwxUfVjgSmNcPu88elP
u6zpOHnN89EIk4w/4Bk5eVHo1paIyvCkozFY2XJ6PfHn7eGBt4+S+b+et/3x
NTrmS6dfN20dgPUJMdGKBDZmlGw9cuZFDRbP4ko8fzUA5tOy9fdG2Jh38vkS
G9FavF4cTAllBtA3pXqf4DgXXo/69Fz21IFJp0eZ9/Uh8lTOAeVxHtQ9t/po
bG3A13UbV6cnCnGmodms9xvZR47pW7piGjFd73KJvasQswRaTqcVKMyteZBe
VdyIsjMJyYu6hci6ttfpbBkfmdn7x1btJ9xuYSvJifXhX+Xsc9sf8yFz6NU5
6c2N2L5twkL5ghAP+M3HTcWIh99cGnH5YSP0eCvE50wVoDjl9q+V5H594/Z5
KXNo2CM34/2vXj4mQtMy5V5S4L5SfPGJ2YRnIvN880ifvlE9zlP9RPy8MWV2
kE0Lno/PGR5YSPjonfok5jMF7QcLI2z4LaidLHo4kcHDH0uPD04VxCtOLixM
Hm9G4nr+01/2FMqDC/sdblHYe5z3aiywCTaTPDKmzSC9QPfN2RXE50PjhKFb
ic/vUDnL3bi+D2fq6tL2Ep7M9/J5cFqtEVa/1y08YdGPlpKcGxWEe09P+130
qazHQ/NkpWOzBohP+3yqC+Li1qUNz5Q86tBpGv+Y7TyAh/dmPqos40Bsx4jp
5Xe1yKmIunvgKrkPD+mxYicOttUMiKzo4MNu8IbR3fZW7NOfXP9qDfHjoL8/
nPN5KJ4fcXLWrHZ45e0Pf/eHi3tCu0ndz7mwf/OnaNGqDniGOQxOduIhJu6l
xxXit6uNG2ti73Sg8uGDlTPO8mCQaLTa9wIHCo3nvOx2dyBzrvOy3EM89M5f
NSn8DQfejGyV4Q/tmNsRyX5P+pfJGjnmySVcOB09E9Vc0Y5OzQX7X+rycPP2
d+0JFS721fnM5NV0YM6ErFtZNA+T8tybBx3Jfdyc9kVPgY49Gy/94e7kg8P8
eoOWwML7y7qh9wO6oam33jw3mY9OkROX9fJJL43VxKbqLozXPjLarcfHMxXa
cYs2Fu56vrp+vLAdfZO+/TJcx4P0leGVPA0uXtKO9aK3BbRrtw4M3+QgWz2y
xSCaj+n3ZmfYvSU+PGlgc3wmC60abx6UOwrwWTH5L+MQDaV7mw3PTCV9dx7P
M3S/ECp/AhelTiZ8ztlTM0+CeOLSwLuiL4V45NWvGn6Ehsdlas4XpjOx/6vY
nXUeQkyczwrzIL3t5tRbFzd8ZpI+saXFpE8AZ+W/ssZbmuB78c7bzyRvMidz
eHkvBXgWrRoRYsaEdU+QbjzhapCm8y/BnW4s+xfYvVKKCf3cHxA3In3cap99
mmwPjqQ+SE9SYcIjPpcTSXguHnKk0XegG3M/sIZsLEkfr5x9kWlNQZj0cMPn
691QXKSwziaJCTlDz78nPIj3RnV5R7Ho+KIcmvRqMQu/C6+lj/hTSKPZHVQf
6cId3wK6cQELBkvHf4tdo7Cn5cyOtu+dKKmwU3Q9wMK7+2WG8YRvq1tbxAsv
d6Gxc2j3L0cm4o4sPVNnS8HUU8Iyb383WLcXOX34zMCeiGPfl0wmnlkdoBuc
zYCGn7DbaQ8DMhkPvyoNkj7+YHBL1vpejEYaSOgcYcBnojBB6fv/z2vyD3VX
6UXJH/vCW8EMWPu4rXX+xce30RbG1mm9kF+Y+SrVpxdm7dcu2i+goP/x+Uo7
fg8ccjeOHgoj3humXe5M/GqulnjvSplu2Bxz+vP/ezaGpUPu//WlcEnd6/yF
dXT8Ksy/sXwyCzHdt9x1SO++079utGkNHTtGfpz9O8zEoowf1fk+FH7/nEiP
2URHm+3YKiMuE7tOSPi0ED7XqG8NGTlIh4+X7uFBBhPmaTsrZpFxacUKv/U+
dHxdtE17L+HznEkxg19usfHecodF6NMaBM4+HCxoGoDLqfnxmVlsrI+Y02df
VINN6tlzX5gPoCsif7TjNwfHpds6B4W1MPu3bkJGqh+uD/Ofn2PxkBevqPVT
rgHf1lrOu2gmBC2tSPOIMgXLkYhfs1oacfdffaqVjgBDQzaD88g8FJ2d73S5
kIYo/uFzmvcEYG3SeextQeHo6EI0kXU/c0rxuZICAdz2L1V/aEx4m2TQ2r+V
hlnIOTxrjgARk64IpEkvuOyzUl2kg4avF5O4/nv4GKFdfDlcTtah3mvK1bMZ
/uOOB0p/cJET+DRcppKCSek3I935rbD2De0vVOAi80qSXXI1BRRciHuj0YYP
o/Lyl+kcyEvcemNTQyGkhNLSOtkGm3bp3Qu5xF+XC5s3kvPoT6v9u1WrFR9+
zH5b8Y6PZKPda/7mU1iUpfTgwaRm6OdfXRbcQPZZTeIab5LvbUt0aq31aHiw
8xy3BX34IOok+ziQjyblI2Niyo24ybww+ejWfqj63t/ZS3zPyWxlUWdZPQzu
RH9fSfLx6dP+c498uDix41zJoH0dZos8/J0YOIDI7c290mc5mPToxJdpwbV4
/G6o86JlCyrkY/aJr+FAMk/NZpoUBbe183a9SmrF4Aszdb+ZXHxJaFuj38fD
5lHFzriGNjz+1texhsaF2tphgxo2F4UpL2/GVLbDMmTK8F09Hg6f+xDUv4DM
V01gkD+vHSevWvZomxLvZJgY/JnKxZnrb0/sWdUO1bbZCRLiPGz4mFnQdJuL
Sre5DV5Kbaij37n83IUL29Md9vXneBhfKBc73b4VtQmG20R7OajTql0jvZSP
Pq8fq8WzW3Fgh+3Fn/Jc7NSsjVnWzUMGrXs+w4dct/MFFs3jIeHu0q9bPLhY
6XYyYP2FToiib8C2hofaXpF8vwY21iDUKiqqE93Lur941/NwwDgswLWSjcKK
obdPy9qhu1jJ9pEOD6L7dHcdUuUidFb2uahDreR8WX/HBBxUvLyh/3YuH7eV
HIeOTm9GMYNp2irNxsjBEQl1RQGmHNrPkfajQf5n6cpeRSYYwtjPso5C1LQz
B5/3NMI603Qfay3hzStew95CIUxirdInjzVCrDZ/9BPxwpOUoYTzayHcdBu2
Sz+k4cC2Xcem7iJ8Xrk74cO6/8dFiwO1m5B2r4EZIs5CeN1bhddlAjzcm2pk
d5L0fa8avroLhWX3A929V3YjfP6Bfe9NifdGDEmI/O/DNrrLZRO6UTYUmTpn
DhPbx564ZW2gMD8jJXtwCvHnz79HAr/04tEq1dlBaylMm5axf5tND8Tnnr/L
EGfip6idcgzx7bM9XbK6K3two8hzW+VuJoy1D/i820XhaazvIt+T3Ti1YZt7
TTYTWkYDG/9//q2lsqOqfDkdh8yiwbvPBC/S1VmBcL5a5n5PKY8OseWDkqTU
YWDfIq1BbQpOHh+Ml9j+/x4LvSixBgZUmIHhbqIUZue/t2x8zEC9r8f9tsMM
VLId4qYTDjeNx29qJhyWoB5ztZQZKFcNVg/j8XGG0jVpDuyF8/LTe8Nu9qDa
/gl/Rj0fXyODz6wiubVV0Sr41kIG7PIXdlPk+A6Vuvmjp3uxZHtncdSjXjit
OX1fcinhxh/tEz5PeiD06ZQpv8yEkaJ6ltpeMg8NLuvbpnajeK/299K3pI/Q
vxnsJPwpOQvdMzl0mJhHK1j2MnFVoaRUifA2VDD5631vOmrVA6iLv5gIKNtr
40K4PZ59WLF7Mx3eFaVSR8n4nPRuIwcy7uBw+95MSzqm+fxQM6wZwOLWPX5Z
79lgbmCJv6+twYKcL1OaCLcnl09YnPdjwyKY//HmzRokmVc+P3hyAIs8FvPG
r3Ow3Fj0y8nIWpic1ZU0Me1HhCirq6WIB2uOp4ttfT3y95ZW038KcPCY35Tg
1eS6Aet1tyoSrg6c2tJPeG1l+Pul8QMKLuHPLudkNcHg+mfv2aoURPSVq0RT
KazYd+uXVUYTznYXGugEUXg43L97SRTJX9ckvzSXJiS/nLrkuATpGyHTShjp
FNQ/Jlk1f2iCeHgCxymSh42jhc62xIfXmt5Q9z3QApFws/pxSS6aH7w0f0M4
7LZ3wk2D9FtPt+mnZiZx0CnQrZlWS2FB0fBur+I2LCq1LDZ7xMGm+AnXYcJn
jsmHDa15bbhz0ej5xWLCL7mlhi8Jnwv7Zp3SdG3F5wVlllpFfDTbdyY9Jnye
ZNpBeU40AfOvPKTGBFB+5TuvhvTN6B85EiYyNExXy2MKAvqg9CloxjMbPnxd
Vs9Q7m/ATg3GJr5zP57XP5dSzOSBnZTpaJRZj0uvn+tk/+mH/MfJq45ncVG0
YYaER3QdbtTtvvn3+AAe5dcW293lwGPtI13GrVqY3mVJhIi24MUO0Q/JYhwk
6HI6QrZRSP1qvNnKrRUOc9OUszkcmH3f6UZT4WODrkvuIXJ/ExMco4kSLq68
PXoomHi06xHZU/LEM13G9osvJJ55ufrAnqXLuBj7JGt8/Fs7nGynFLSb8yCb
lXr50SQuAgr65mz92Ya//Cr9OgEX3zb0O2qVk/ES1w9t51uRaNX3bOMIB3m/
5Du/ivLhfdvnElXfjEMS2k51bDY2P/9W95H04BvrjntaH2xGwPjD7soLbNxm
KLxwaST7u4KvOn13C96lvkyu0uVggZIsf4SsA8NcNKbRWuFeJ/W3ZxUXYt/U
+MHveeCsWtyRHt8GvXKZbXqkD4jED174LcPDlMg0/fOubXhi1CFOu8LFgdyT
gTPIfZQMNHwRkrzV8mdxOio4qD7Iciq35CNjXuGvuceb4Wdt8ebMNTZYfw4k
rSPriPEi+JAyjYa22NVR568x0dmwxDBeUoi5VQ9fTh5qxBFJR3/mAwZWZfct
834jRGPJ9m/l/EZQJVTabcKb/D6TxNv5QsTqvj5yYQ8Nlqmx+hYCwp21TZFe
vkJcaTQ03CzbBDHLE/L5xLNqGRN1dnQBlu9YtdE9iolP2xd/pBFuSB1deap6
Ujd+O0rFDzkx4aZP115Mev2ZJ+sqXdyJlyY7vJWbwoR277DFMOHtpmcPkncv
60HguJjcQudeCDTnUDwlCltPnmr6/K8HcW/uZtZ9ZaDkU8GsN1Mp6A60Leg/
z0Dz5eaZcxb2wu6X+PNGkvc3vJmLXCwYyGaubS9f3Yu4E+H8SlkKt5XTjTev
YYAlN+Pq3j4GxgWFd35PobDLxsF47SUGst73pkeZMKAXtmxLYj/pJ744GWTd
i3kh7S5b5zOwydbzvhPhp7yyJcUN6sXlZJczOxMZeJFv2NQ1yketS7GMKZuB
p2PV8i9ZDOyMOqsVRtZB3/1tktExDPy0jyg/cYEBrc0OJy785iOPK/tFSaQX
6XUB6Rnk+ndatM/MHObjneMZqc3jDEQ7ixyzyumFknNgR+4ywpnTwvSMuB4c
7qtZdOsAE5LPmTvdHChsTjbjHtzajYak7vh1d5jI3PDh+uH/f65Xm0f78oUO
+1u+RXKEz89y8oxkCZ/Pfq478vP/99ryor3HpFmoLNY0uHKKgsS+SafN5OkQ
3+12SnwBC3d6NoZtJX1EOBF+easIHTZXXK0+ZQ3g0D77MZ8pHPAfnzzSJ1mL
zXv/nVZvJnyu9zSaS/zZwKMmqrmwBvERv2x4oQO4lvexedyTA5cFsUEhnrWA
Tmj35pB+WEo/cfOJ5WF6ou7BpyH1uPmp1XWCcGnNriKvCsKlY5Ouvl5JuGQw
e+cKlw98fIm7N8J+S8Hm5O3bOX+bsPhF2wyXy6SXvr1Q9f9zHTX6w3f2rW7G
jXTHvlRXCifj6F7jNym0yrRdVfFvwokmMVP6OQpTCmjJUyMpBByZPfDUoQle
Zxs1n1zg40d9XKnf/8+HpO5P8lnfDKMrf/0SFMm+5PzY8/9zzPy/mlYZD7Zg
7/id4To/Lk6l6SRGVpHcNLcIXfy2FVN19b63ZRPfnvvzOYNwuGm7l7eNbyv6
24V9d2N4GKG+NpsR/jt/Z5ye7tYC48MRu086UnjC6q4Yj6XwvSAu6c2ZJijY
zJp157wQqo36O+eR9RN14dv49rRG7JH+oHie3ofcyW3/BFP4MJc9NvjDrQHR
SlUTdmn9WFXrdFXvBA8X3/1MCTOtx9dG34U+g/24us1Rc34pF+6JekqLHtZh
ZKalkZHNAIoKTiYpMYh/Jnw/eLi5Fr8yolScG5thGPPMuYjDxvLWjMqLAaSH
iaS/W7Sildx36KWKMg4sPH2SWFZ8OO2y3zw3uQ07IpPrXF9x8ff5Ba2js3gI
aPvoeIrdjsvXq/5pm/Aw9+5CbZMZXPTtvcrlX+xAiq2p2soAHv4ctvXqjuHA
aqnjGZvEdjwJ00/hLeMh7VGb0ZWNXFB7Ek10/rXiyVET7YitXESeXm2pFM/D
iUz/+jfzW/Bw9VbtDjkOPgbduli+nkKOhp2aUKUZvEkGWtWr2KgxfefjLiGA
Veej+BsWzfhb+kkmzoUNXtKBDWkCCgpOzUctRpuxa6vjodf/2KjkTtby3E2B
XnhmhzO7BZn7Ev/9vkW8ok+x8XoUH8HXjGYe3dgK2p1OGf9GDrZbaAVFG/Dx
fnLMjtYfLeD8vXd1XQoHOWPOrNAQPiqOSYeYVDVDO0fSekUvG092Yt7DsxTM
c1a5adk1IW+/9b/k1SyEHg3eZJkhgMPiv49l3WmoPt3AMxMhPiyX/VP2iBDj
O56pGsyhwfxqRrG4RS8crus1jT0S4pLl3g93bGhYdz1fN6azFwn/+u/P9Rdi
XukLb8m/NFA3D5b3lDIxOEl6zbMvArTs+/yam8hEhe0zYw+P/58z5l1swSYc
4AiT/Y8wYdD+weEZWY+C3rjExSbd8O/WilKWZWLZ5RWSk4k//3Al/W5mD/xH
C1LGDXqRvNj4SugcCocz87bJLyF8u2DzxySQcLRwccjwTz4sh06VzZ7Zi9LI
zhf3ZBk4GrjzH5fDh+7BM1oml3rxs0SnzaaoB1cuy3gZtfLBP9Hww4Z4+Tvd
HqUzu3pg/XlRs385H8MiZmMl65lYcnZg9VRGN6LeTOmjXvDxjTH50bLg/58/
9eD88d09cJq0eloKOV6oFJijSY4/br1qR2AbA56R7dIpYqQXHDB+OEB4LaK0
0ebSNCYWrG2UqiL91EVOeucF1R6YiP9+c3YlE4ru4aNXzClcGOqbotLYDUzV
EnXdyIRGNfVynRWFn4c6y96ndqPKuGlqTjQTlx8lrbHeR2FpelaryBgdfapq
Y99rmHixVkvR4ijJu0faY1tu0CEdduwxt4CJqfNubn5A/Hm536rnH17QiY8o
qOzkE09Oljuz+Djx/4G1QgcPOkZWe1quWs5CyTX6EhmyD1MLZzyeP9AFy+zs
ll+bWFgcg+QO4qFPMqbqr/7QheU0nefd5wfwOtz6+DFvDhoqnR++Ol6L8NXO
m8IeD8BmtEugKk/2b5i8tLVyLdauZfygTgwgihFeqEb2IX/GMq/zUbXIlc6L
60nvx99VO/lbPHl49PXVU6UN9Zj5d1+sjosQh0Td7hYqkPyNuu1a+qERl8TO
RTt/5UPmHZQfPqOgJjTZd6KlCcuiWopd7/Dx4Po8Wk4phRiKWkdb2AzN9d8S
qhoIl8tf5WacJtxjzHPfQ3yiwtH2yDGOABuOvDN+so5C+NJqa8OlNNjJjoiG
XxSgVONIpjvxxaJz10cvn6Gh9dbE82X2FB5FXyu/eotCyuOR45lBTXApHy39
asTHLE3JnZs+kry7Pf/TxchmND5jW9El+Zg/S5JeScZHD64/dbm0GSkBl68t
iOAjqY8Ve4DwP22Wxs2Pms0wV3Cb+meYQl3T6qyp5Hv5rBn/pe8bDQ62y1Qj
2EKwA4JXN77nQ3Ig/Nszt0b8kE6XSljfj93ZZk9kPvEQtW9/3CJmPT7PfdiN
un5MlGhHWUjzsNMoa2JRfx3OCV+90/jdD9cnEew9hJ9qvufOf7xVh7r3Uoum
6g1Ao6b9e7c8F/zSj/EKU+qQH85D6btm/OJwcttb2TBWkxRfSHLsdoOa1Gmx
VniZuDnxn3IgCHs/Tcubj98LbycER7fB/fF48q4MLk4m7xbSlXiQeVa5MGND
B+bNaVQO3cvD3dA8+ijxymD3H34v1DsxNc0leOAZD0fX2VwaIXzNF0s9NpTb
gaUFLw0XX+Hht/uUWjeS51filDXbDduRf3vP4o5pPGh0pz2ov8rFAvG8vqay
Vhw8u7rHTo38ud5KFdU8LH+T8mjoZgs0ZuwXGO/jILvBrL2ukY+VmcMXB1xa
oLggZM4SYw7sgqI+n/7Hh8WKoGt6l1rwcW/gDCkHDkrvJFaX0fl4wzD/Zj/c
gmaD6RdOP+Bgkav9RFAg6cGzDSf17WpF0pJj7527OQi5rKqYspxwJWQfT47k
l8fki2bvSX5VZmRkDpD8envmnaBrYwsWG1SEK6zkoOReAPVQnkLCFIMFd4VN
SBFrd5kpZOEhEkqktQXYsWH4YqJkEy4xzKOXdZH+2i6mbcgQIPCFcpzUbRpS
fn7JeUA4sb2uv64eQtw4/eUaFU1D2ccjUnoGTMTw7dXZm4Q4rn/SuGByEzrV
C28sqWYidNH370cEApzdtfWVfBUTmmP9jK4jxBvl57PM4+joPH8glh7JhNXh
LWuKiVeLaW12zRHpxrTSZZHUaibScm6dFt1MwWBgfPr9im6Ezh+MHY/sxd+A
CcHgYgqrZIWsNxU9eJeib/mgi4Hg2zdKdopTGNt1YumfeAYmhw55tCUxENab
tXj+GB/c4VWHTzIZWPFreVxKRw9sM4Te4518RAQttL5Z04trk9ROpB7twdNN
vl6On/kYVbgo/WMp4fC8GtGDVDf+Htb0CXrFxxGNB8zb/kw8H17+WPQJOd7u
ZGIzjY9HZ3OulU1m4tF35yeuIb3w4C9aFqxCoV7VynNJew+uMtokfV8yccKy
q9P4IIUMbb/l+iV0mMZtTnEm3HtN0aeVEe6JLzQUGJV0IdFSr6wulgXW1hki
By5T6Dg8zm5c34W1VxwGXmSykPCz0IRzlUK7jrtw7cwuxM8fErsTyoKM/lGV
gnAK9zSnFkTbdaH+9JUi0bksWEppt0b7UXh+bGOe6HQ6Xr6qM18nykKA9NEt
ricoyHgrS4itpsP8y6EaszUs3DvEG51H+qFtme2h0t4ujC+ryHppw0J+tW3V
mxAK40fV1k1+2gXpNQb76q0HSB5vi/NjccA00nrr11aLygrxWQ7uA3iy9kny
2BviFZwdoozsWtxISV7+fuMA6p4fenliMuFAhcKe8z9r8aXywEgy4fPZdQMF
3YTP68UM9qYSPqs9MVk3mivE9vlV7Yq9fJQemXqz8FwjVC9q2ywlPqyY1hKp
RDxT+MsgN4L4cOXp3dN8R/iIP5rydfQphfl7k5J/VDfh062VLktOCSD21FYj
cgcFuctvVxy+QoPE4bgGfZE+jNQUyezP4GOpjOpR2S2NaJYPr9lp2AerW6+n
DhHvyTm+rG2NSiO2Ndy++cpTCGbu6WcSchSYux+mnHvdiLHQ1RULR0k/9CmP
vkj6SCC422UGaegtsDu4l/QfhQGEB2ZSUF212z+/tol8frW8CxV8bDQ1/XU0
j8zzFlaD93AT9vzmynU8oPDl2PIfGWGkP57Y4vnKoAmLVPgHIx4LUSEt8ti9
j4/7CUP8e1cbcX5Ea8sX1X60PjFxHW/i4UP5lE2iI/VgVyGrkd6PpYXaOgsG
udBhB7IlauswvcRAUkd0AMN75HULY7k4/oLWww2ow1GdunmVqwfw2eONX89S
LkLCHHBLvg6bjQdFzuY0Y6GjtskKGhs3LphNcb9B8mRhT9nenhY88gu6V3aD
A6mHlts6YvhIn9jA8fNtw+Ul1SWTb3NhVLsz7u06Hmwt1T3CDnTgeXbciyNe
PFwN7vwe8ISDzTq/h1fkdeL0/k+373YTnm72P/83gw3dPCfz7c87EbDrjUZ6
Jw/WestNC7LZuCSM2c9gd+DH0MjBA3d4OBhXdjHEkoNi/65iue52KPut2TAH
PNTtO1SmIMXFVKnqKSvU2uFYPvJqVISHeb2M0qoELj4rpm7iNrUhWiPVaFcz
FwXlz3d87+UicWPTm71JbVBYfO4U/yUXDQmn/k2dzYNZls2y4tA2DJXLWock
czGedUb2lToPDtNEuhNt28COnaGndIGLPeZRC15b8aB8gD822NAKnd1eUypW
cmGGevmfxTzkP9xpd+NRC5bdkJp1m+RNy/U+6welfKxZ1nE7i/j8tf66xDzi
83mnIwaiic83b901WhLehDXZdwVnj7Eg/Sc6NfSCALZfxfZmT2pCtuHemoTP
THi57xeK9xFuL1cyj+ii4eFCn4tr7zKx+++vxUunCnHx7Ls394iPHHDZHreA
9ObgrO6ncnQBkmb25u6VZcF5U/eBQtKX72aav2mXpSO84OGCy2VMpDv+quEe
plCWVSSal0qHZ9RWMdVdhPsz+gdX7qIw1c/zocvpbtJnxVQNJZkIP2AnmWtI
gXuyPY87pwfxFnaMXHEm/OqOzw3To3A+80Hs/ZU98BMU7LDcwsQZmcZ7a8l+
VLmjfiwwqhvrIzUXOy1mQnWfj6aKKYW8K79HrQTd+I2+zM+nemEdYTN1+v/v
QU5rZ7uzenD41qVYWgYD3rNWb6z6y8eS205zrrUwYOtX9IVPPP2ngYV0+SwK
f/w3Nk91Icf5Tv+drstEu0xI5uYtxGOrr6mFv+nGzV3lK4/rEr4ds6ydHEjO
n1BcJ9HahYodn+qTalgo3OIe9yaaAi1bU6OlqRO/WvP7l+izMe2F+rYPyRT0
c94//ivbiS/lxS6f7Nl4f+LvDsNHJL+OPaVSGB0YVH8gslSMjaHioaq/dyg4
JQX17vLtxFvewXPnfVg45Fp4V4/s97xly9NtT3Xh7SOfYQcNwvkIj1t1xCdX
FbQlWg124YrD7AxqAwtHiyUe/SKfM3/DieXvq7qQ9Wik9IEBC46T1/wIIuNn
NUSlTzR0Ybb2RK+e/ACaYmatUD/EhcalFv9tO+rQGirGuyM5gNSC9ZK5/lyc
/iOV6O9ah/P8x7Nrh/oRK3f5xs1CLkQ67+vPSarD+l1HFO7t7QfHXGHzgQwe
Buw3fZzyuB6ZBWep2aWES+MF2uZtxItvbV9reLoRRZaDig4JZB6/LfDQCf//
eXS8OtONTVDOmn9BlXBzQeXT9XfI/IS9ub1FLrcJ9+JcjrLfCyCc9qs1jfSy
9L9nE90303Bnec8K2sE+GCoELOG68pFbup7aMrkRCTZ6Q2qCPkzP2Lw96x8P
jpOkBtS3NyB3vu6dgYV9SMmtVf//ect+a5bPC1xLPs/X8okp6QLofBcdd9pE
clPyplejMw1Z6aez64f4iPvknVGfReGx6jdWCK0J28wPT3YQ8jDHPfyHQQXh
8K22+kvfmhHW+Hbg50Y+qo9oHNQlvr038UJGwqVmRPffV3xvIkBq/ESBmzOF
U/ratQWvaNjQKyZx4FgfnBfYPr/mxEe9MGJA9V8D/ux1Nb+T349DYowphSY8
xCvNNDdVqEfoA63Kb1IDmD4z4EvESS4+KRUNxTrVYeeUosFhkwHcUkq/EjPB
wZuUmoW9Q7V4vP3QRG9YM6oU5A5vSWeja1P0qdoCCueOzdwWTfzT12Y8SLCB
g6VVXwY+E//M/jipf5BqRcHdyJR1RlysMKqctiWTh38mtICOinZcbqKLv9bl
YdeGFP8xFS4c48uGJ53sRCXDMPl7BQ+D247Wl9PZOL7eKGW0vBNfS48OabKI
f+flZJ1PYmOV/DQZ90edGP5gp+3UxoPvB0aBaR4be+18pdf4dOJPa5uPKDlP
rt7BFH4PG6Lx8QrbMjrhHuQ0P6OdB/ss6eQtOWwcZJ0fs/3UiZtLk2SGyfk3
1+5YnJfAxh81/sKOhE7czk3f2dnMQ/u8HP5YIRn3aJsb2dIBlScrHz24yYP8
w85Ot90cmJ9RDc+MaIchr8fPTZVwvCuafmoHF8u+vavdbdMGQ+pcisN5LoYf
H+V42PDATl6ofiy5BV8XTRiaHeFg9tSYMKlPfDBi/BwMljSD8Xh30tK1bBTu
V7/+Z7IAmvQ7ci+9m3BmLF/LhvhR7kOFPtVbAlhwr1cWjdNwxDjf5kc5EzMT
big4DpAeqKcruo1Fw3aZOdvvpzIxmj5nXeNkIfYYzVL3/UvDNa23P+wId2U6
9Ov3fhGgTVEi75QVC04afgPyxLsEQUm3DrzsQnpW/94po0z8XFnnJO5L+txb
n8RJG+mQlajnZnowUfGyxfYd6ZHvPmXO/m7dDaF3S/q3mUy8mRstM2hAoVS4
Wc15Xg+Yl+80iTsS397nKHHWlgJLm+sydLAbX128ajgmLFSFmkyOIl56b8ae
dzVlXXhnGju3lceCQf9Xs2vEuzb6131Wf9yJf0dvLPZ6wsLQ5maXaOKlZ3zl
lNSlupBcvCwxeYQJyeDPor99KES1ZS55Sz6nTVex6v4nTJgtq54jfYD0vV6F
SRvr6ViVFdl28QMTGaemafiR3HnTJOX2/TEdSbRcG0llFvh2kgHq/hQklhbt
G55MB12gOWTlz0LnwoS5Mhco5NzrCtE72gWpzUarL39mYZvc6tXzCbcHrxie
+dXZiRdC7rxnUmwsWvNWvukuhYCx18EXnDpBeTM3P+tkIW32nuCPxG8s1we4
73nXiZIVy+gOe1mQPyG15v9/Z31yIjfhTEwXOj45iNIVWbhumMeIIF5ttSI0
cyvx6mGfnLUc4tvRlqnXX5DxZZ9ync9NpcPk2OOtqlNZqLz4Uk/+JIVd2QZH
PZfSIRF4IlyU0Y+qlXesfgu5SO9P5Np+rkNNj9U5rXf96HyVsndsAw9JY2qO
HbL1yG176fYypB/7VkuIqsbycNGr1lo+pB6LquR3zKvpg1mp8j22LB+m91av
Ej/dAJ+k7aUa+4UQeW9IkyY9UOq2qEZ9QSOsYp5Wp20lORTaq3GV5JHC+wcf
919qwrsB6lyIPx/R02w+JZQTHk66cy7MvBk5dw2+xHwiPuK3am0P6QVqrT6e
G+Y1YfPmBTfNiJdu0dy37tb/v/eRX/CwinhpNeeZbIxRH/pN9XWnEX/2y+iM
2bWwEfnRB6/6Xyc+ousa8If0Mgk5sU+R9xtRKycdPfqWwo/eC6rOZJ37dR88
Xbi0iXjib7WeBB52S/eFqJDrj8/76CWzowVOXpprWqaS/p/ffLa6mvC2RGWI
Z9CGb0+fX41X4GK6+KHS//8fyEFFwzGWRhvqtZ7eOWLMx8edBUPGhNsrvtrn
vo1oRlDwwZnNjkLQ7kaJWysSnz/SsrautBEh0zVbvY7048KQv/5QKsmX5nLn
hLv1GDrpLaRUB1Cr8slS0oJcv3DPORntOvCUDARj3gPYkX3p5784DnjHtg8U
3awF42qixAf1ZsyKkU2dvp6NM1M/xVaICHCpJ7zZ+UYzZviGzt2STzjI0JFw
yaZwLMDGsbmsBd1HGxxfnOfg00g43qTzsVy/vD9kaxvufvRcFh/MBU8zYeMx
Ox5+bKlD8pN27Hd7P//vKh7UI9RLNHW5cK278ufA5g7M9E94XuTBwxmRq/du
F3NgVVXjIb21A44PuNKp+3lQ5V4vulbEgeE/DbmCsA70VsuUKZ/mgWs5+ZZF
LAcpP2rfL3fsRGOe0ZLX73lYcqzL/sFXNpghNec5ll1otg49ZT+Lj4arBtui
9NjQuL5qxffsLtgZD7RBi4/X6omaEv0sLFAZSlMj3rQ10uEph8dD0IV1J97H
ssFuKG2Wo9oxPMuju8iUB5G+I++LpnCx0mz99rsTrXg06iTw3MYFa8jFQxjH
wxeJbbu/fWqGx9eguuckP44/bxxIPU/hckLOFb4XWb/xrvEK1iwcV1yy5fpt
AQYLzwsEL2gokJo/1Wg/E75KC9mNy4TI/vm8aMYJGlIemKopz2Ei/+zxtQHO
QgwwdT8/C6Bh64czM5yUmWBkxbIN9ghx7M8NKj2dht8lke3v7Am34/NyVNYI
UaDfWjNiwcK4UUX6lmAKW2lJawYLuuCcF1BcL0b6dWPC/nukX08dPd+ut4oO
pVV7ROzdmEjq2a5rsYfCR5HBd5scuzGoSWtI//85+mNWC0qWEt+4G+0Y+agH
RQ1G35UWMLGjiS+Ws5FCdP7Xrce/d2Plyfxg9zNkXjv8Yi4R7kXVT9zq2t+F
11Ms9MOEbNQXx7Nv5lPofmd9NY/ZjiQfu/4+Lw5WnbapaaihEFS9Z8mHMdJn
3D0bHpPv89izhqe7iDfwRxfHl7S3wyiAJa8+nY3YQLuYnngKBVmqhsyDnfg9
VytYS4cF1VuVm1sIB6gDDXar24knh8R9nRXFhL/axI2K/39Oyk5PdhbpRulw
+T1rbZJT2x2kQjZTqP4zxDEp60am5NMKFTIPVx3nTFpH5sFpXsCMCjIP8v17
REyYTLifll4H0qP3K34yEnrRYRW5tipAmoWIzKs/TpGe4pZl37pMgY6nGfZi
DSIslJ/+NaJB5llnpXfISW06RNbp0EK+MbH6qe+bFG8K4gqpHqk2dFyToQt1
vzBhmlC6fAkZv3pjQcyuPXT4r8/bYNLCxEdTj+Nnj1H4rLvVmhZGx/Kgnzqr
X/XDkC5dJLebB/2QIXXJpfV4+fymdqhlP3YLXp82y+dBTH5lztWKerhLfPr5
qrYPDcWnQgpk+JCZa9JVeaoBxhFKxmZT+1C4tHWJ8UM+zLpXiS80a0REwLKV
BaECDMT0crZY/f/7j2dKK4JpcLzzVO0J8d3Fr2rc2ITD8yddrInzaEbl3t9v
9OVIv5Rbtuv1ZwqRbnJP438SHp5YKLKAcOqg+GKOLOGkzbyobNaWFihlmFun
/v/cK6FY4O8kkl8vIzJ/pTQhIPLfDxpFQdJXJZpP/EHELUWv5B8Nv4Sb616Q
7ymX13XMmHzv+r/DdQauNOGKosZnr0AezLWehV8m5/972FFxbmALDqo8ktD1
5uDFBxmvSbUU6kPDQkNG2rD/cvCL8DEWpq62nlQQR0GM11+y93wnLFLZt5JU
2JBasf/NUtIPXDVSlxUad+LQnIYnMr5ccMRLUu9WUTji8TdTUET6s2pdWvta
AWahKfK1G4ULV44vefCeBkl/2dOL1Psh7jex1J3Gw1hbgYHwVz2MnFQm2jYP
wOVw+fvqIQ7adI9vsOPVwiRg9PWCFwMIr3R9Ej/BhkM+L6xiai0+VS2KDia+
nzuhUzqH9Lzfl4SN880FqN+nIP12ogkzxmY9v0p6G9tJXPOeigARp5upJJIb
jpOfrsrMZsNi+to9gbkUXgclDzncbYF++mFT1wMc+G6/Onfr/89J8d5hvvdS
K5bFpL5v+MvBK2eP38snCMeeOpza0d2Kc68f4t06Lj64aO2yyiV+qpI8d/2z
VqgcFp1SPYeL+1JpBgU9POw00It7FdYK6RuWsidHOchIjfpiN5mPoksOfq/7
W2Fp8/h1ijEX0lbmC2aSfhZsPbe9or8Numazf+3icNGQOfztYjUXm/edPSLb
344V22YlSJnxYPOiXTRXjIukwYddQTeJJ/+m5lmp86B7ynVSmSUX9ioJgWmG
bWhOWNMynfSRwGWPFq0lebKoaZrbY/8WTF0wnDDDmgPjsN7glUI+LksOjvyK
asKDogf1L/2IH+0LNRMPEcBj8UkXu1U0jHxISh0M68XMUmna0A0h7Bp62OEl
xAtK51/+er0H7+q9g+0/CvE1frl7dGEjLPZ70/NO9GD/CWZLT4UQivsqPk4S
kPED2qdSvBm4Yf119dp8IZ5Vn4u/ZkTDwNe6qhLC0bFntu5fLgohVumQITab
9PenomnfiXdNXnfv+kplOoroj8Lau5ngOT/e/sGTQtUv1ZX0k3RcSKmUn21C
csKlerkv2Y8jbL2rCind2K5RsSrAvhd98ZHvLJUoqBcGJ6qKMmATpOA5cq0X
8+19tM1VyTrn1ns5lPcgviEp6uskFsokaPOmEi69MCuIH1lLR1hPkZtdARud
I8/0Lr6i8GlHYnfaug7MsjjLOf2SA0dPVYtGwue35UaMd+lt0FamXrrf4OD6
pfGdWmR/UXVVIay6NrxgOJeb3GXj26Gpe589I5zfGmFv4U3yu7DwiMMMFmLK
H52KJvebfkG0uGURHdXLPdSsdHqBguySPNK/xXWk3mYvZ0Au/YPVWfsefF/0
9sn2j3w8NCtklBFevzy+YoWPbw/EFA8rnqvk49AeCz2uKhNxfaGmrJcMGM6R
plmTPhk9ZfqV4ioGfi0eEMucwcTDt2quYaRfWCvF/zm4oAcF1FL1FWeY6OJ/
SRNxpZAU++PMpsXd0DGMkvF4wYSX64WdCgcp8rkv35Yso4Mz7m++s4SJgjmS
CrHE/xWPP1kZnUYH1eU8U+4dE7Q/B/WeHCLcM/s25/gLOg6+ZCtVpfZjoq9i
X3kAD1kaC3Mst9TjU8CdkiHRftj+VD3r3MfD87zdsRLqDfj7/vz0raSP+3Vq
Pk0hffx6gcQ5S9LH7SibTKnbQmi++dOtNkw8UXvHG24c4bPFpz7+CIXQwyUr
YkkeRdx3ENk0SMOzW/N/BjfyMPut/r3/nyO3XWGLgD67BVlfRerT5f+j6MzD
oezCMF5SEUKLUCFps5clSe4WStH2iURKEVqUKEJpoSQqRCXKkqUSJRRlSWTL
MmbMWMYy+xhbVEoqfae/XNfjXOc97znPcz+/e5Z3eHgkuHMjpe5ff+GUTddk
wKhm/tNP77m41nWOl0TO9z3zkFRDDAPapjeHJAJ5+G58YWEQ0b03rMKb71/S
ccXMKmBcho+0+V9plUTn5fbuNln9uwVb/COmer3mISEr2LCmRoihkh+XZnrQ
Mbd0dWNOKBdn3E6O7yZ5kr3gkubyTgZO+3ANIcPBqo7XL3cTv7MPuvsCXdrB
jv8zWdeEDdXAAAnVALL+zbepr2kdGHZtrLHoIj7F49Um62iStwpzImflt2OR
TtGVxKs8+N/91OxA1rnKX3tOciodyouDrsV69yL76eRTy3YJ4XXMjRof3oxh
Zk93Smw/lk+JjEq7xIfysqBQV8dGjNctmDbz0QA2c63DEpdxYWemqbxapx5P
xKMXJbUOwMPmutbW72z8COosDlj5CYKu/NKzb6iw0PFbUfbvuZJdU7c+29eL
6JY9F7oKqBhIsaFVEN85afa6ogHHXijOZW2KG6JCcf8mf3xmw2BQW36Rbi9e
bN/3ZN9BGrpkb0gfDuLgremaz3J0IaQ+xbbo0Wi476vtf4vPgU5QWM4c4i+v
aPK69tfTYO440q3J5qAkRHbxKPHBR4z2zbtpSoNA+qJm5nYO7s4Sblj0RQgF
38p9lg+p+DxxNsPgBhsFhsqu+072wrzCbe3JI1TY6ofrN1mwceyTTaLvg16M
29bFWZdTsTnURH7sNRtF4vn5/N29GF6xRjVoLw1T2gT3H5zmoLf61mQrphBz
kmp/qHnTwCt0bFwbxcHLYZtQCsmL0NYLzNo5NChNmLwvUiH+ouLVkW+yvYh/
s/Ki8noquqNs7E4osHH+66mXQ296Ye/a3K4r34yJwPiMsbU9SGVQz+tkEv9T
+3Mo1puCu6GjoUrVTOx44n2mv1MEm4SrpT/VKTidH37hikwH4k5Q19V8E+HG
7sb9W9ZS4K/K2Fd/rwMHXcWNdw6K8Ju1IoATS4FOY7FEVlwnIsaqu8qbCT+3
qHJWTVBgvOzv2f6Bbpw6v17aJVeELL0RB3wkfLvtL2ebpxAGoTsMfyQw4ReV
muqYwgK7b6uvpCvhFuUvipc7CL/JPxVLXUB0YInmMUPCw0tLpssPj3biV/36
Jo+JblQ99KbZSgnhkfV2426vbgQdnaebWdGNSdPE+s9OFuKBayVzf1437pfP
HfSRZcEi2bm+aq0Qnx8cfHlwbhfmWuyqzTzAxkv/0k3lxO+3felWzY7qQEr7
ApN4Rw6Ej18vS39M+GcswTu/vQ1JXU/uPz3LwaPRa8kJmaSu9z6jRT5rwx5n
MYfGbDYc/wpXONwQwlutv7ZyWgf2Tp1qIb+EhfPFhk8lNwkxzUgumMbuxLzn
qWUzZndBwzl6uLFQAHoRfVmUEws19TezzDYz8Z90UPm/7x3/yrW5MZ9wf8qy
YfMHLkzcLbVdv/mYAJsK35TOcWNjZPa49SbFLqzX/HbkRZEAyo3JJ30dWIi4
PfNjv2UPiuP0fOzn/fMF8rtnKnZDqNg/sHQ/C8tu/VK8YSfECdt1q4IOdOJ7
VYi4ahkLpR9ccITocNdvyarHGUz8mZIrncFkwaqIfieG9M1Kf4XDn88woT6r
LLGgkvSNfcqFxuQcU0xz9ISJTKQNfb0l96wfUeYuDrXEb+oJP720NG5E5zT/
Da+m92PLmb0FD4V8HPwrV1Kq1gSRGNOkwaEPjVvP33f3EGDF3MwUHymiw9dF
Oh/DRLhT6hiuNkmIGfvykiMeUfDFd9bg5fmkzobMTa65CaEctD8ugNoMD/EA
nUfrBEjYe3DrBuL393gYFOSE01C1cmE51ZWHsPU/+or/fc6t7O9J5ic61MPs
xSxOcXF86FXjMqKfK4LWt2b+YCB8dJvytD1cRO7bkKVJ9DaHO7tGZVkrqg6d
dV/kxUX+rQsfW4meq0o9MXEhfup236UcaTsuFMKoC3eT8ZkCly12S1rxJ1Xk
Mn+CA/VgbY2774TQWBq3pLm4FaX2ercfET1qdbjTF/hEiJ0ZG5u1ktswr7jL
VC2AgwRxG9+FJH5U/Mnk0LQ2XDI+Zx+TxMUmyfLdYmSd2uqeSxzeER8n9d+s
e2cFUHwd6//vdRu7W3ZyhyyJTtkvVizoFmFi2d+QhPcC9BvLCp0PUWC+0lez
X30A5+ctnDhIOM9lFR26hg1gdzx8sqJtAOkjkTYHKMRf2imvTJjzieSvzM85
nQPovj11W2kJC6MLo9JCNtXBQUzT245KhdHc9aEa9WyMOj59523Ri30bOz0V
iG7rnzv70orotiM1M3aU6Lb34V/iP19R8XS8PF0rnQ3JJP0II+deyM/QCp1K
5ll2/d2qcsLhdZ9ZHS/IPCpGe+1XjVBxUuF3X/AXNuwrxR/LafdijZL4N7di
KtpoYSOsl2yM09sTKu16MWW74ck6SSoWthW2DFJZUDN6LtvC6UWDwH2qyfRm
GD4O/Giu1oPJ1TISD3JE+Lh+1feJBxQMi4npny7shJHtJwqrSYQpQYmBQb4U
NIg88x+0MhGxp1V9OtFDz/sjLsujKHi5bO7Jj4Gd4Kfc/2JEE+GZ+eUTBfkU
fGDdsHm/rQt2bCX6WLUISrbDax1KKZhf/KA29nIX/ti/sBMjHKsza6tyQzKZ
x+vq9YD2Tvx9MNwxr1EEwdjkRXm2FAyMaHwoV2dCR15JVM8XodrS8bz05ybM
tHMxt1Box7Rva69oiPWBVUO9MzOvCT0P1o/EHW/DDq/gNGepPjz55XhaYwEF
SwJKi5IF7WgxcFfhfBchxjJn//17FLyV1XKal96J/eaGVwYoIljPvOZwcH4z
tiyaVWVt14MBszU7FyWJkOavGvo4nIU2jsqlKOLrzzk9mEWb0okDC/PeGx9k
4fWQzoFo4t+vP2s00d3bCVe5JNm3gz2Q9djaHGogxOCpzN8TO7ugOmV6dnhp
NzwP7Zz0gNTvnpk6cn5F3YgLW32mTqYb4csfm/ZzBBBbVb5Fl/B04I+bHPst
3TDOZrvEDQgwPPhWJWZLDw6yCoLO7OyByHGT/bCiEC8fcc69lO6Gq2avcgfR
1V4rO5XtRFcdV+1O+NbTCduWdYcG//0uMF+ivJ7o258uu78p+8l+q9jNuyjP
QrlHdIefGfGtja3MC3JdkCt+w9x/txtHmTeqO34KkPRl+zsnUTeGnaQXLHvT
CU70YQ+Xp4R7n2cV2sewsDjJf/7U10xMSp+cuTJYAK01K74+1GIj4I2NiffR
ToiOVG62TRQgtCZZ6xnhWuW00k1+Ad1IWOlpMWlUgKqFzUcpUj1gdDkZbLNj
IVtwQsbMVoiJwvYfrSc74Z2bVO69hA31fvMEFz8hLrJ3WTl/68CMVss23kk2
9h5hfF10mXCac4XS4TMdmFjOOWPnyMZEKN1SlfQv46Bl7wzvd+DSAr5noxIb
cTK48vyMEPGtnXGpEkyI7JLO3a7qh/G8o6bf1fi4enj2wLGfDYiJZUTzd/bj
wbk/87pe8SGoODmo9q4RgxYGG7mZfbi8KFr+kY4AV+x/3Lqb2YT1D3d+X9Mr
wtwt4tKZpO/UJ56TyXKk4Pd60xpXSi+0KOeCjdcI8ZRy+XrY6mboyFymfN4i
xAY3sXl694hPMZE9VBBGRapMf+nc13zkiyc3UglXN/wxmpil14LKrEvmpTE8
GFne6ltJdNtjbu67+Bg6/ltu6+f1g4u25cpSE/9e77WSnKO+iwF1ZyfV5Awu
ohJkTwwSfT5e9et68SsGTkRsVgpI4cIkq+DFbxI/qCu+dFoRA9aH3OetZHJR
STmYu5vEO57o9N71YeDDAckhcV8eBvYbCG6T6warSpnuKqJjUmL7S/Y1Pnp/
i2UcqBIi1aHCPNuzBT9qw7e4Owrh/G3K/ooYwhVFcWk8fyrEy9bdv0P0oHyj
+Z/LzQKoH2sZSDtNwWQHC8NpHf3obYpy2P2V+P2aEz/amxogmX9+QxxjAMiJ
vyYLDprazh7ieH7Csiba1MruAfiumBL0YjIL6tZp0+zya/FhyZ9JaqwBpPqM
ZfRY9GASM3a86Xgt3K9GGpyZoOJE+rjvmBgHRYandO4v6sWxg7fC5VlUjA0z
vxoR3r8qlf7u3ppe/G0uqXOooCLnsUpJaBEb5wrtBZt39SIzj+OZRvS28NTn
er1cNnp+FV6IIXrrPskh6Gkh0e3/8uLWPWcjoemo2RuHXuSa9q2PuEL4dmCB
+B9PNkJ6/5ifDemFQVoW67CgGXIj2xKGMliITntwrG6iFz8z0su0iD6XJPoN
j6n2QC12buNDos/Lnrzet+0qBQpLOTs+m3Xi2i7fAzcZIqg7bJmdo0fBsaLl
efV2HZAonzBiDYuwR/hwrFCWgtIzTxVHk9rxUDCnLG9chMMdO768lqbAvvVb
ZOutdmxtKAhJ/iXCivlHOuhzKIjYfoAiXdKOKmXDbYt+ihB2s/RPviqZP9l8
vWi8HWuHfl+rHRVBa2FzRrIMBeInDjhLxrZD4Vt0pgOZx1XpqWFwbxPKxKee
eDilHW60bWFLp/TB2U+mzFGCgjaNgdUSfu0oCkws+vGb9IVg1aWLXSkYS15i
HR/IhPFC9RIZtggX5hc6ZXVRoGvblUc16Ea2GeeByzsR9v/sVLt6vxn+H87K
aG0mfe1K9ORtZiRuonC/zouFKdIZTf+eS3lA/u3wccNODDfbqutbscDToAfT
dwjh118QMPdWJ07RbT18unuQb0znf9UXIuBH4mXjw134KONRvXC0Gz7y8KuU
FEI+s/Sg27luHHutYtc10YWAmvCQoyyiV2sedv582APHWnbtFP8umL0wEYuv
FWBf91axMVUWEvzAP+DahWLqEj+bKgHeS677kK3Fwp1VBZ7Fl7pw9/DQiOkn
AcYPnQ3TVmYhXGeavWdGF7Tzt4bfInXxMzH33ZspRFd3jl/7mE94uDxozhhN
gLcD3MCd34nuL/xPcfR2F/ovv91X2yDAdJmnuUpExz1rzE+Hv+wCwhSnbiTj
5/ZOHnb61YPz35pXfdzVjV2bv9M1h8h6an6U2ZqR+hgN+nOzugfj1ML8+TpC
jOt7O16+QNZ37sSmUBYL6f16MluJ3/do+CZ95gQT7n8bu/4Ws5Gjk5IdHUl0
7MYZofVAO07/Sl+kN4+DX3XvdarihTCNUxhdsbMdFat3LNWR4ICfI5t8h+jb
9lOnxHYdbceV2mmVUzPYiPyW5WEYLoSa538Re+Z0QPX4e930bWx0Cz6vogUR
3vb6cPZGXgfeutKeru3thyZ/89q/zTy82Bk9dDm3AdLnNub9Jlz9X5venaRD
fGQaC9y2GzZio52N1VGtfnx+3Oh3tYEP3cy36YFDjZitvU1y5e0+3Bffa/sU
AmgMtd11qGuCUo2d2ki7CO6J/d0KlQIEORt7FrpRYCJvEB9GdPsxb1K/DtHt
rkebOzyJbv8dfJ3mGEvWranWyQkVkrqWyMJmKl73OEvNeyRAw/o7+zvKhCgX
bztpoETDkXHXU/slBJiZXC7bQzg8WL1J5nkdDZOSbVUnV/IR+Ecs5inR+QvM
d7EKKi24TJWifR3nY3n1WM00El9ps4YnwaSBlp9vvLVAgJubg4Nt3goRGaBd
smcqDQ3f+9fu+CyEfj6rYP4pIXjVtm/sx5pB3U07e/W+CAsNGI7crwK4N2v1
l8cQXVCIP59i0o/xDzR6ZwUfX1Oc0nuYjZilcTA4yGEAKzp9blXUcWHv9eZZ
XXk9vl6Uz6toH4COo4OYugsbzz6eNl5WVgeKbcfBaPYADH2Cy54FdkO55WMt
XaUW2h7tqpk9A9DfVvVUgtaJB/7OqezzNZC2mpDJ4gzgUtOP2f6sLhxb2ja8
iFeDcHHf4A4NGq5+Ubj0chUHcWdWbLCY0osXZ4M6FsylIXXkHVdNlQOdsL62
V8TXP1lw3mj3NBr0ms9PLpXmoNZVdtdh4n98NFL1dKVoWNmft6h2FgdjvX8k
Iub1YsPbHbUhijRs+eW80mkxB0qsP7/FZHph7ec16egsGmTdFy36OJ+DaXsZ
FnT5XlyGq7J9CxXNh1c9SGlkw/bFQjpzYy/sMwQPLx+l4tkZs/qerSRPC4si
197rxYIMXtD+lmZ82xdnez2Khbs9G9qmyYgQ+uKHwRnDZuxPHlRMvdODxhNM
jf8iRKi0nCwvZFIQ+f6+0scV3ci1UcnuJ/r2R7b250nC4QsMTbjrCjqxwShb
QYZwqY2RWOoj0ifNHO4cntzARPja7vJ4wuExBtW5NJKnCimnwo1DmVg4vLbk
OksEXf9df8ucKPg78P5Q1C4mnKrPrbXlirB5n1bYJ6K3USsr3fYGM7E+ReNH
Oxkf7vPl432SF9IOMv9lXO9Eq4fF6FmqCHPOBYR/4VLg4yj3MWJvN6auuerl
UyTC6cV7Z90KIfn10uL0Qm0W/tP35rTZEG4/NT7wU48K88Mrag6JsXF4fvmx
rMpe+KmZXxEFkHV4jX3O8RHAd3W6JXMXG7Izn5d/ARNDK2t7ThwUgPZ8nivn
PBsHTkZe/T2diZITW+fRbQj37tA3cstkY9eeyv3FK5k4ufOOVL6jAJofd0zJ
CSP9dvcSam8XE4uymPd5oQLwG87nMmazId6hX+Zk24XAjL8yiRUCRP7nbbXG
iAXtXAXr3co98DOrbpkiJ4RLFtN+hk03tHuKJMvesLDh21DDLnchrDQPWl3I
Y6L39fKr9D42Tk258H7LHSH6A03aTyW2Y0xz0pFHG7gYuhZZeY7UqW6A6ir9
La2w0A0RGjTwsEje9m0o8b/qNybP2GRNh7b5e5/s2wIU+9xs3k786bdWzfGI
JTQ83/5j+antvbimWt0U7SCE4sIEmYLMZiRnSqhMzRfB40u66FMP0fkqD0nP
ixR8XuN+hOvWh6Q/ZT3RBwQwm+5pOiJGfE74H1G+fR82vXI8PeQpQLJOqOQA
6feM7R7SRx6L8H1w4e2RfgFMvn+ePT+CAiW2yU3zFb14LjdN1+wQ8ekHVIwK
qpqhsYoXG7ZOAMHeXZH/Xje4yFthVRdOg9qsFd3HZvGweW3V3BzCmQWFi8+v
0mNAJi3Rf7lRO7bX3Dz9LpePxdnXrH9JcpG2NPpdjXQbhCe1Uzft5KPcq+Wo
Uj8XvollWz1KGJj66Ir2pY88zBYefuL7hfxVfp5ueJSOFfCe+6qPCwtOQ/KJ
eQJIpfjs85zZArOe2g3pUlwU8d7lzdkohNw3lY8GhOt05vgefkK4zr3gqdwn
wnU2tZYGdEUqHt+fWJ7EZ0G37GDJF0Yvsva0VH63aEZHwcbyZ8U9UBg1nmoV
LIJ+bUKUegYF14WWBrQfnTAxt590pl4E7W2OEmt0KGhpc97fvKUDK0cNUlJG
RBjMuOWx+GkTSn9tpzrvbMNGXxNxnnQfFBTKe1V3N8Fu+zvfXU4McMomhaYQ
Lnp626tN+WgTBlSlx7a60zHjw6bRHc0i9IzVuFE2NCHpyo9d5T8YmPlitWSm
Qh8qPIavfTai4EXzbN0jAR3wfub16euQCG253iKaZjOOqF50KQjqQXLh6pMD
MSLEKTCy6Twq6lbrr1bnslF6cEK+xagXQZt/X1g43IJcNSMnSiIXce9+Ref/
e57fzqfi87sZGDN59uh6Bw+ODhry2xg8SGwZMc6OawNdsY5fep6PeVuuxqiE
cOG1+uU6E8JPaX9SRrPjhBgua46zJVxb/ShecZD0QS2vrroy0gdt16us/mBJ
xdLwwt7r7cT3riha/R/xWcxfV9m/Z1DxacbS1LG/QvjHTtJQOU54rObRbLm+
ZpjOuZrYhl7IDH97RyX8Nvt5d5NDXjNEN8pCrct7kTDbpIpG/Gnqkal5Z8n5
vb1/b/6aqyKkRIj/+D2Z+JrifRftk0mep/+gjqr3Icz9tWXJLQF0S0XL7FdS
0M7YsONwWB/sJ2c8d7YUoFJ1TbodnXDqMbVvC/P6UKbVn390CeE688KMmntN
+Dpt3X1hRR/W3kl/sURJgKmaBrLLLzWh+8tzx5GXfdjuvfTQpGUCpMgfn9r2
oAnCYKu4yYl9ENtbf9LGWIAlz9cF7ixswoXbZhNZ2X14/v6PntsKAVRrrtzw
SWpCU1pa7Xsyj3nJqq7FZJ4wmc8HFyQ04Z31a5FPVB+a1vksLTUX4Lrru5g7
NU2I+rQ2Zb9eH/5+cHicfVWAje+6xBKXU9A9sNZhYbIIh9o05uwlXBe6+urv
ozcpqD1Yt8y+qxePPvSxFxgLMe/1fU9v7WbM/p663Gp6L3J26005cFSISRbs
3npuM25WS770PMXEigeN91eeEqD5QnEy3YGNTufruxN5HZDd7W42ZwPhxq3S
Mzd9YOO6bQ/tpXcHgu5bV0cpC3Ay/kj5TmUOWBSTL3knOhDVrRO/juxbQt15
/b0LOfBTvWIQLM+EkU7S0z87BfDWuZmhlcyGQ66m3aJTnQi5deXXlocCLJve
d8eyhIXlM7Wtdp3pxiLTVYPq3wR40DxY9FW+B03rr65j+rPwg5U4MrpfiEAp
77xG9U54iFdS1jWxIbFouv+620K8cUtHSH07Nr1+X/9Kmfjf5LHuj4THti5z
MJgU0YqMHMmwxPM85GccC/IlfrZFXTI9IZuOX/P331unTe4/0KfyDNG9+0Zs
B+4jGmrvFNwW5whR+vX1mm0+QuQc2JlUOIWK58K/zUlnRHitM+vJwpnEpzOM
K8WfU7Dz8sq98Zv7gA9eVnlnBNhRMql1gyIFtzwFc4779GG6/B7tF3sE+KHr
dK/1SxNcX1/M6fwuQo3tz8jRHAG2PFnlc2AXBcELC584VPTiA2OxhD3Jf4Oy
dmbexmZIFhxXoBJ/stA48sXMDCGyQrZ96yO+dG7h3mk0oqNn5OiWc0nfydh7
ScVxIR0RV2MEYgfaMS+TqrOjjA+1ihmOX/s40BB+nWJ6tA03RzLMx7342Lck
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
1M1g/sOz398JcevUc/G9ha24tY76NyWUgxljK6rrnxIO39jp5x/Vhg9vmtnF
sRxUCY38lj8XQpzj89vjTBsebpaYX0rhQDY4N3ckX4jvsavOMqXaoMG0lJMi
/b9wWtrMBSR+Jc0ksXZuG/pmvrP8nsFBguzbWBrRpUuvJDZn7mlDqmjsjP45
DgT37+0dzxSiy3dS1ZKMNjivW/uC8oKDMvqxU6rE/6b9l+9hatmG3haVTRul
uNhvobsohNSda+IktiC9Feq6Fo5Dj0leRF7zGCX3u3HbTItp/56jWmodEEX2
JzrMENFkfw4efmvfTfZn/H1ykqUEH/MDK97RiQ5n1RUKdabQQXV3ubuZ+D/e
1RSJkyTeEqhS49fWgg1T/dcPyP/TR1+NIhJPfq39y/1HC+qHA59pLiT+74As
/R6J584dOZlD/B6tQlrI8eJjU+6jV0+Ino/l3HmrE0byYyTCjlvBx4n4jX3/
3tc+IXltyFSlBS3PazVLZAVgbt9jWEt0vpz10SSrnIYSrX2N6WRfK6xzfnJ2
8LFN+7Xb934u3AoVeFeIb9XeunxQJYGH3G2NJ1eRdQs2Ue9enMRAzgbDZ5Ns
CCdFzDRUJ761O7DWsmMj4eSeuD/ZfmQ/xPi3/5D6kAwYDZ32gOhwb/6ishwe
dm3WWtkvx8euhe+3RTAZeBK5l8Vp4wEv3SqDyV+LUonmyXta8cSl934P2Y/9
ORNevv48lPgnxdfHteJPk9L5d8v4uNFnPT/QkodVxavfxJH1611clNJF1l/Y
d+Gh2AAXe3+alE6KbQMj68YN/fN87HGcP90tlAvnnzWnaw06kJ5f92TPNAFY
q70jY6w48OTyZKW9u7A/6Y6vV40Ac8bW2KhqsHDcU/SfojgbRYfeZQefFsJi
jVaOny4T8luGXjbq8hB/Lml8H+HtKKZCyE1pBkLibFv2TxFC4p74zQck3/xq
K5b6fqDirpjbkU+0Xqw5sqHuiIkQkU2+gkTDZqwIr31uQjh5SrQ07+gvAZa8
6vGd/ICCsk64brIQIc2Tle2/UIh1tT1HLFsoWJKl6FVJzvX9R6dBmQAhmpOC
S/rnU+Hnq3Tnbj4fdLmada3k/8t37ogV6LdAXereQGh3B35dvLN4JgT45r8n
jFvFxjG7a2nWi5mght1gCO0EuBH0fTg9ho1Xe89W6u1kojLv4bfzREd0IllW
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
TBMBdkSxb8epULHWiKr+1U6A5/9O7WgPEqLkS9NI9ud2qPrN8cqO52Pr4LZZ
G4keVL+XG1O/1I5D7FrtrXv40Hf5s1pfJIKFQ9qSQSMKJihsyzhXx8ekerX1
m8fvHwpZ69lD/ErpwMbYKLYA5z7tNbrdQvgn3OKUZAYdWlZ+aVEdQhjPmX03
4CXp30Nadu2OTHzylVq4mvC4iVrnq0TC46/Vf23cvYQFn7RI6wKSe0PeWusv
d2OjrvWNSVwsG5M1jFN52mLs+Svy4BZ14UrzmWX3eCR3tUwKf0L618O4zm2b
fRcstL99G1TioNu+78PPtWJ4z2nQ1VDpwvHLVf3avziImhZhvstDDB/BTcsg
SwaGtY7MrHrMw+m8i/MCSB643hwd4mdHQ5PCo7VupwR4s6nvwiPSL8o1hieO
vqMgM3nbhzZnIVYtNrpfRnS4l8P60XCrHR+PnjJf3ifECZ/ekgUkb+Rqz7v9
S9SG88fKhlwLhZh2RY3yiYxT5X+tfLa8HVrFjSo9MQJMTbgQokvOX1cjNakk
igLTxaKg/LsM3M0MVjjjI4LbsHKO8gYuzL6Npi+cw4T+kvkHl5FcPTvyRbrt
dw7a47xtd1sx0ZbnPDYzToS9jisvmrRxcGxuadfPEgY+lyoVGlwVIWPe9Psq
ulx83BC35ODfTjx4l2uTuk2Ew4dm2xW+4OJPaHyP5NROfGx6eclrmFxfq4BT
7sTD1uOfDbITSB6IMbDUaCMcuerDt7QyHp7M+rDZsoiOqb/HJv5hCnHq1P5I
bZKr3meOZstkdsJtcktS/1IROLZbLLf94EKqSfLTKjsmWG7yCWcSSA6YY2b2
vYGDEqtDlxuzWXiaesPw3JgIOaLDIR9aWOgXZ5kW3GVD0+NvrjPZdyu1ckvr
ki4szGV9tUhl451V85vnOmLMzNC31MnuwsPa3TYvjrMwmVnaEdgnwm9RoDBW
mw2ly580zAqZ2Lds+IdJlgjro0IaedEcXEm5/Mr+eif2p0eeP6NFOML3mbKN
PA8Z9tvM6m7TsU11yGspyT8v2s5/dazmwTl0cUNMDR01VsLIIq4QkZyuw1vv
k+vl+a0IvNmJM5Q1nQu0RXhukjrnlAwPDatXqlzdykDevUz2t/9EGFbIe6Jz
kYsxNJz86yRA5dcnruPPm5rRcnFJeiPJyYGvlw6P8CE3lnj7B9GHnvT7Nfes
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
GxTA6I3dFxXSbuOK6IkudNzx+SR6rCrAicK7+FBNPLbc4rRhIgOMKyH1+7k8
LLwZ97fmghje/LbKK8UsGDzIzUox5GH5wVulEwgH5ludPNPSycaZ71O2HwUP
AQuubtWLIHlhaL3i+AY2XpTFqDgZ8jH7qsVw5DWSCzKutM6ZxYLaAstr1X4C
xEZvijpO+vOQ3XT31BgdYZJRP4NJPutSjZ1zm/A52Gj59egldLx2HHHvJzzP
D5U74Exe72uglp1xhA6T/N6s2QoCnAq3umJE6mDOK82YMJIDtT873PrgzIdP
RQWbTupgcexJOW8GEwaLr600k+Aj1uAc/Mg4n41yvaYVxsIOP9uG5SIeXtz9
eubKv/vM/aNfJ9wi/fQr9j8Y34WMAS0LmVwRGnbS5/8t4WIOHMaf/dAF5Va5
oV1lIsy4ezU7NoSLsonyxqra3Xg6oy152VMRNtgXWWfaEU/OXP7q1IUexFS7
cCb9Ij4ZSb3W+NSDLDv1AMEoFy1y605WBZG8EzFuUqIhBxUpXadGyfpxWGz3
04msn3xDZelwsv8/vzQspJ2jEDjVO8GE1N8NpzT2LLxEQ4/H7r/vuAI8c6wd
XUfGx3L+Eq2HJD+bb9h10uEsD+VSUbuD/31ecLTKXdmcjUPccyGf8npQNJZk
ffOvCI0Ko3ev0Hrgk+GSGqbJweuDiTtsdopg3DpwdGIaD6/im5fwXrKgOqsi
aiFPiNiIfInUbD6+f4mtyq9mwcXv+/LqXiE+r5gb2JjDB5e/d027Lht1jC+/
iv7tW+EEwW4bMu6XPjCmhLLA2T5JMveVEIopfzVW/Xvenb6tus5zBkxPPJ4y
n/izW9bZ8x0LKfwoNfnIInwuC07ihhMOykwIrZpL+Lx075LkoZ00SL65rW/X
I8D++Oxd43REOOVS8vLS507E/O1xUs8WQN/wu6bNCREecx/GTvKhkXVtOKGg
T4B1oc1bF6qIcJqZeiJmCuHbeTPpGMKLrZbSiskDAgw86/EaGWJgltKUylJr
IRZmWGuVEu/eHPS6ISOSAaOmx6dlNITIcKN/8dhD4f6K2Kc/zRhY1vs1mE88
3GnsWJP/aQqqD0v2No9jwiTX9+eXLeT1qZIDJUPE9x1cAsqaiBfYL3b0E/y7
n/nOHu/LfKw1XhGX789Bqu2wS1aACIqh+1oXO/Hgc2Hd0+Y+Dqb5fs55fEqE
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
5JyQl1PxohCo65oj0mLC6mBV6UZnCvOW7TKX5QjQ3yBf4OjIhmSf6W1tOTJ/
pm/dzTbi4/B8XWepPDaohzt41gtFkNq9Rfr0Nx5k14qePlzEQjCjZVxyMelD
BxT3CmQEeD/D88mOV3QcM+f9Pt8khKv25NmTP5Hj+Fn1pXUzDa/GuQ83kZzq
bbbDpdJYBA2WiZZkWRv4iSvwPkKAH/fCOSkkL2rwNRUf3WtD4uf4Lfx9Ash/
+7NsabUI5qaVsjPTSU5Jt7V6NVWIojWvVCO+UlhjZr7j7dh9hTKduQ7Ee//q
PLxZQLzXLsVspuw+Bqo2qgeeVaXQaOSUnedFvFhOqUT5MAN106WSY9UpXMrf
GRa7U4jG+0qf5E0Z6Dz+/mvyFAqVpgHlXnFCdJ6rdVu4mIHWYYXVuZMovF61
5L7OZSG6fYtfWtsIERfyqOQfmf9qz04kuYlpGKWcPzoVCKESVi77iXjODcuX
i6+H02AdPrKkhfSt1a7J9WPf6WsPsU0Y+07foaQvDdbkOixyNg/aSjxHc120
xOFQOgL2rDH4PFsAvadrIwZqxGC7TX7IO8fAw1+UZjjFx/ACweRhwvNvtMWn
XogZqNh/ILZ4kQCB6/YplNaTcWIOzl7oT3Kjr2S9nr4QXrOWVQaSfhFszV4e
pkDHDeV1HY3PSK44Nju8mOznesv6g+1uNIiOTI32PE3yJE8u0o3s543D7BjN
WzRsEfVlXdgmgEDqjc8A8TR+vv3hEn0GnkfpNyeY8BGaUf81N1OMf26OkUu1
WNgslKtdQ/q5zuV3xvOIp22zX7v7iSUbIvv3M/5q8XBmvJVbF+HAhEtZph7D
bEwr2rjHz5qHuvlxi44fEWOdRvfy0Mds1AsXpXjc4EFDV7dYifDz8YMvLve0
2HjzrMT/yQSSpz02+zWO3RfKPKr5PpQF9SqGxNAoD1cm95QpkvqtcuPIOUdY
WG8dCkkuj/SxwYCHl8WwnAOtjcUsbH3aFL11CuGElfq+Z9fFyK+Wu7fNj4XH
LqFDdSqEt2dmPLlOPPn48PIdW0504c3uyyFqsV1Yp1K9RZ14w7Muzpczbztw
R124oDCuC2nhduZ8UqfphfQqv+yAmcTb2c2zCc8ag+WtKBE4u37cjTjShW2H
y3yUf7aDIzVhjtojEf6eN565mvj0Krvnn/vPd8BxtGlyY5MIlbr6GUWKXFhs
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
pzJQnXeFktQn1+3Vp8exFkLEzsuX/jifgXDPEd/YiRTeZ/urrEshnnWE/Wbs
/Rhzryf8CZ9Goek58+XY+zEcpA+pv/zBgKN9aeR/GymMZ01e4TwqQOWW9U52
e1mwjbDf4/WcwpFfqucdu/j4L0qV3q3LgVyT5OrZ5PoMKOw1Fifw0D0rdcPr
7HZMPD6++cZtEcoFwV8LsrgQfQj/uzCoA3QtHeOMRhE+O4uVJumRdbzRjL7j
SAfMxQwLhzfEI00h2qPGxZ1/Orqjyzowb36q1/1nY/dViuc/teJCZfzfl1NL
2rF23O+Hi+6J0BpV25aUzIUW28ruq7oA8m6xq73JOleNr6HfPMXANL+jk1NJ
Dh8ePJL2h8yHUhnGNX81BtT6DQaY9wRgBQjpIrLeb7kbeE8qoSN4a5LjzQ4B
bFZphG4i9f1Fco/S9tOhk7W+Yhbxt0HXQNFkUp89pBRp4kjHxOsz1vSS/rD+
+oalfqTuNeXthrAjdPxIOPXsAcnnbo6OLdWk3uLYcFczi/DktdHrfqEAsvHc
10tJfY668Y8iXzrCjINvL7YR4syP9f1jvx8zWdV+NVJMw1Mzuf+c3wlhbHzI
8TTZ/yfTA5RmbaZBiVcdk2ZH5sEEp4Cx38n/Ttw6eW4hyadul3RXknWROiuA
/4esC/4zr+S/ZF1I5ETFLyPzdfVyFdUeUtd55fZSvKoNhStt9f2syPW+q1ag
NvY9cbWSDW6P2xC5j7asIE4Igfoy+n9kf1R8f+iEZ9BgN7wvR++NALdWOxuc
Jvtf/XhwledZOqbePRl8XVeAjU6OhafqxODe9QvaGMGAj2tOtVEdHxUW7Gv5
D8XYbj+qOqTLxAx6nnBHAR960psHI0nenB9gYz3RhuS+Ob9WbnhOeG0+tEi9
VIwTHkmXkrWYaGwqdyq7RscbmqfdrwIhpvdsGMxVpNA+Xfec5kw6StI4+ktc
hXjxR2nw1QkKn8tyw+Xv0LCfM47OkBOiqcCFMV5A4UOhqI+zk4YsvYbuSJ4A
pw2GjjfOE+GEomznaTMa5CJWu/14J8BPha+7us1FoFOL1t2xoSHNprf7F1OA
OinlWj0jERJWp413v0TDg2BKJ2WCEP4mG2uCf1LQ+bCUkSWiYb4ZFelmKsTU
SueIwAIKR28X+D7eQMfBabanzxwSgv3JYWks8YtXSlYlP+jkuMbN9P9GEyJl
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
SDX1xvLxgdahrjeXhoYnTwUlSH+t2N65oiqacHX3naAnt2jQ3Dija2sAB2dn
/py5NYAPwYcZxcp76Vgmvu1J62wObr9t9Bxy56O9fOHfawsYaFaopbcVEy5+
9+ZvcOajoHJgJi+FgdPGg5yGHUz8GGs963+P5NEli6495PXcEhOgV5xnQjfg
ffScWApmwqdkr71lo/bNpflipEccihGaVCI9ItPvYqEn6RHrhO1yFLqYGP58
VWcgi4LN8i9xL33Z8LLU2St6k4XM6ed/xNVR8HIq37ZZmo1Y58V1fjQWOGdd
DZbRSR/ftr0+oKYH52cv+uNix0LuB7Z1fAWFQcX6OyJqbBylRwgJ5zDxOLN5
U3YKmWf4/dTaaDZs58/+9cSB8P9yusAhktc5LsuuL/3AxtyXO92y5jKRe3eB
QxnJWcErMrePjpJ+t/Wy5BsVJvJUTs9YFEHWSWmi0pl+NmBwtMk3iYlSqzVb
o5MoLHOserHtMcmd+/Wt/ptY2OD9ruM94XOn3q+Lpwifg590/JRwZyH16XvD
D9UU/vzWXTW0lI17S9rPnIpnQfa8swyviYKL/rCJrBAbh9sSp1leYuGz86jH
8hoKkckHjk0tIHmp0qFsKsnC/ItLFAIKKHCj2qoeHGZDWfogX+EEE7dWvV8k
/5j0muxeYc8yNr7KbKmx7Gag9srrt+MkN+cUyey/J8WBnq5a/8brDCiI3tBJ
9SQ+z7F7zN9FPEREi1tSTcd/25+IZt8rwt3Hu2zoZlwsSu65aZ/Mgq6aasnK
sUL8mJzo+iPNwbedRTpPVndjU/ZghkxXIXh/76SYsdh4XLsz6dsgA05WdwQ4
B4qQtk7pmjfpWX7rjcTzWjoxvJ8Wc0i3GCVGqukld3monfW1Qel5K4rDpX9e
+fUOEo8FzbJ9+nBLn73WLLUZRrlyjxXmVWGqM6jTYBMfUgOPD2771Ih9pg99
5FY14cnVOWYtA/3Ib/72J8u5EW3Z8mWNHu3oNyhY2NxK/NbGtWRyfRMc0jzS
Y07QMSUgtpb5ZQCh7LJ4uZnNaOz91BOxqAdZ6p12CVkDyBqXZJ2c3wLf/EEu
k8dG633nAYmufjTEqyTsPdiCKv1o660aHIS19h1/+LwfP0X96CO5zXgwW291
8UnSX/f8ocSUB5A/7Nfw9WUTJtxvrZ6mzULt15kFLdUDuPKDmq3PbMRGvf7b
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
Vb7cdpFe7Fi2f+1HwmeuRuGKw1s64Ltvr57YCOGz5sKp2eT4tfnXh3MOdMDj
kOem3yI8xIZfdNhXzMcqjvTPhSlknX0IezNqS7xOixvrRLxu1HnrKf8qNmLO
ljEG3hBOrskVoxGe/Ng1VWWykoNr810PO5xmQMNZJ03djYIvL1ZoiQ0HPxcf
TfY9xICi+bPXA87Ek0/FMS4RLqlsqvoZdYYBhcjdv0DyMXieQulrKw44qbq8
UB4DqUvzjToDKUyvENrpLcGBZ6XFFnc24fmaEynmZLw0UjJ631wO+mUNLYcy
GfCbYX2snfjAPMuOZe7EB46uzjXUI+tw7yX/F0yyDpVlVIw9yTr80zBpfOgF
HcdXUsvz11Iw3JNyfGyAg1srgzMSl9Jx1n5GUPw0CoNHacti9nPhN2+SlypF
x+xGBfeUyT4obpT++tOei19ro68cjKbD43aRqIvKv/d1rR21/3IgnVnywEeK
AbntmpHJZhT+qD3YkBzLgaLQVHqK/7/vyV4NiPCkEDZve7028dLhR4Hbw6sY
0Gvs6F1G+uOrBVolK5ZwoLEx/fPbWUwE1BjfKCPrcHiGV+7wDzbmikclWV1k
4kykxoY2kptbqqevqcpnY91/q8XEMpkQitjxIZP01k3+apdtY8i61fu2RK+Q
iW5xJ10Jwucv3cy7FPHwhfM74m2j6LBweRJxKr4ITpsV9AuduTi3+N3o7AkG
Gszkqiv3FeHs1EYj1wbi1W19448d6ZjnHyyVk1GEUPROfbjMhfWgwRNt+3YI
cRe7zK8qhpTMYT/9+F5Edzf859rejKYvidWeXpU4d+J76u85fHjovpFV/dmI
Xp2b2v32jZAr1LVpbOvHeo3F1sURjbhosHfp/KpWvLohnXr/5gB2bJXdZ7qX
eLVgxacvrh2Y3Zz8u2tqALGzUofMDzTC5kWmcolDJ3YI3bwdJzdI7oNNptDs
Jnz4/GzLk3AaFhm8+hs8OYD19ql9e1rIeN7kijXfWYgNG6a6SwbwdGcAQ7S9
BZJutzf7N3IwR7hurqlhP0ICTq6/VtKO1f35r+4s6YXFgKvtj/o+nO1rPvDu
cye2nJjWu3N7H9aueyo5KNALm5KXspR6F/qlvu7fatOHuOfh3LRGHkxGjpWJ
eHXg5MZZ5Q/u98IwWF5yYG0fEtTnGF9IboV8t1r5mY9cxKkUXCt8yIequYHv
t+XNeBeetPCWRw/Krzo907g7AM8Lu19lRTYib6+79aU5XVBqvd56UGIQP+6q
4kd2I5o6Z9bpRbagP3z7AlgOYNPdZ0/3v2di/D130el0Cg93xpVJ3WbDbdvb
qUN7GEjiOn/e6EhBX1wi9ds5wtVTor4ut+nwS35289wyCr83Xa2YLsTFqez1
J3vv0iHTNn/oE1nnpolOfbOnSN/0t1ppQM6zrWBT1hpynq87xgIF3Tkor9B5
gAVM3NXLexFMvEJLxufXvM/Er670t40LkXVrqJnw8TaF51erYm0n2RA4OFIj
IEQ8d/BzoepuCs0Hfsr3pXCQvb/WcWETHR9frDHfTji/flpWfmszB3tmMsy+
ajHgOLY3W5bs60N3TZ02+nOgrcEYlpzPglHTxQVX3lDQSIr3WnmIDcXMretV
XneDVz52hDFF4bDz7DddFd24FSRZnrGZTXrJkrtju/iw9lC5+uIFE38t/fRy
L3LwsHxVa4Q/H8FSexN2OtCxWLvk5g07Lraf0ll6JJH4betnU4XmLsgO+wmx
PnMRbuT/zvoNH8K08WP2nZ04ecmpz5Zwmy3cNaBLuM2dUL65j3B79GSXh0g9
DxZG155eJhwOidhJZ17vwFdjFL/8zMOsFX6D88m4clWAVY11B36V5B1VsuQh
zEJXfm01H7N9zgoNqnSicNmRmZfPMFGqVi528Am5PruFFCWK2TietGt2IosB
yVGzWbQACi5rOrL/SnFAD1eU2xtOeLhn3RHmv8+rb7laJmvIgfH0wSvLCLf9
aRHnFAi3L137eMuccPvqh9eZv4oYkH/9p+vwVZLjyYtGLizn4G+svLD3XSaM
XUpPFSQQ7r3TdTiZxEaz/5fRPZ1MMF/NpVdmUZD96pGx+iobZ68+/P1bjAVt
58isuHySy82u0R/s2LA/uHVP5x0mJpneex4Rz9Qr13E5kkbWiSw1+3I5A3Zj
Lkd2+ZFcNm5xVlfi4OKr1ji3GQxkslI6Jk0oRI/85FmmcrAz4kyzURsdrsvp
JsnaFMTc155PI7waaQ+RE7BkoNs6pEDmOIVHHncuJblyoLzTJiZhmIEl6Z60
G8EUWLHte71EOegKUS395MvETsu0mV/i/n3fx34HI4cN9TUSO0brmPDbxH8l
kklh80hw+cFANjbqvLR5WMOEwNtFTxIzKFz59iS8JIiNjNw2B6UvTEybtT6w
6hWFU24FUeNn2egKdm9M6GPig2DTlNpLCk9OhSU99SLc7jY9OKuCCcHszfW5
ZJ9WpcTriN9io2b+Sd92dzre5Qc9j0wtwstS84wMTy4+LdFs11/CxMGCFau+
GhfhZHHFs/XFHOiUyq5ZXkU8arQkS/h+EXodjsjdNOfCoHHmfdM/7RhYGX//
TmIxDJ9IPPh8pBc6tKHphpotcF594HebbAVil/plKBaSnI85vaJpRhM0W3Ns
rVvr8ffqnEbvV/3w2zJ25U804Y9tYhD7eStuTaubybg+gOt2gg4dIH6oov/g
u1gnEvQOSSvJDyLX7f73dYTn9ZcfKUCsCzlj+Ycj//HKvmebCTn/6RULF8c6
0jBqsepZ/58BrLn6UVA1rwlffwXVSu1jIay0LimwagAlSwu+f3BtgUij49Tq
vRzUFK6MZUX1wziXp/JGvR1n5nquPlLJQ4Dypz6JnRSUlrtUW4R24nDkvuhB
pT40bCrUHTTphdVhx7Kjnl2wU/goK+jehyO3I/cmPeJhVLJnv6ReJ6bPsA2/
K9qHH1vC7iy40YtxBRv1ZU1tkL7Vsxo3eGAt9/XWe0Rhl/fjUypSLQikGZmF
dbOhrP07/wyjH1InvAOTdEkv6Jm+2uQ5HSv6nQKjPw3APut1xa2ARlSu6mz+
atqGCYfeK9ynA6ipky7QXsLC/ZmPxdeR667kVhcov48Nrxjnj+/iGIg+nrnG
g/RZ42XBN3u1OPC6/UKNSbxFujg6kUu8hblQcTKCeMvnhAV+E3F0cNYMeu1Y
RdZh5207p3EObITrvu0gvnH0a7WLF/GNQzP+e+VHfONl30RNlDwLd2dXUHPf
UvDWmdCde5CNQprwqEgxCy5P0v1t2ilAfJWBx6ce2LZ0PZ8vyMKBIWet3f+e
e1Cb7+/tyMaUQbXikBvhQPN5th7hj8xbacqJ8Me7xVO9TI4JxrTPl7/dIXmh
9mfZqq9kvGyfQ3ASE1cP1ebcJf3R9btNNB6zcUrn2MKJRhYWN3XcvNlFYcac
py6c9h44brmV8Z9XD6r1dYZdFvHRc9ly8ZtuFrZt3qEdPZ/07JiwGYc8+Jj2
a4FwwCwGzjIHtQf+fQ8sX4epEsfHjrGKrapzaLAUkJ+zvJsLM9UdNv15fGjp
Muf6jnYiXI9n+tmAh/xJ6kJABR/Opet/JO7oRH15/NlfsTyEBJZJCdbxQZ8S
85cs6sBQ24fY3a94yNl5u6OG8PnanoYkn8QOSB2IfPjWmoe0d2PTVAjnXcNm
zjqr0Alb6u/66U9I/n7Qi/ydSHLnxo/6oWdsGGZ0WFYpMzGmFn16PJzCgRUn
9P72s/HBVVFlbx0DzWmmQ1+IBzJgHWK5kIN7HseaPtxgQNr1xfoYLwrZdaEn
7u/ggOZZW1hG/HDe15cZ5cQPt8+OSB4gfujT1KzyUY2FauEPuReKKeQJLrMX
MmEj6MjUG7MIFlqX6RROb6BQf2fORWMJNmoXWwzki3WD1nJoSSSXzHP+5bqk
Oz3wCLHw/cNnwf3M/PmRTAr7bfcY4E0PQuevcrq9hYUVhiY4946CUabU6PRt
bHQuM/39w4KJHMMb+qH/Ps/WdF9hTgMbmmM3+51eMFDQd2oUPiSX16iyfqhx
4HKF4hVtYMLs7qk73lHEQxa7nJ7HZoPZJFfwYYiJKPpn702En8+yzp6ccGcj
JMyg49IjFgJUVd4WNFJwrLQ4oC3KhoLkgO/YVxaaSl5kSnVTOOjR/iU0qwdO
rf565wdZOF8RSZsk8+dkpXia5fXg74XClN3pLAQ+iafZt1BgJ/lo1k9jQ9ps
9N7xpSxo4gMcyH60TN9qe8KC9Fk9/d5PEUz0v0rqX0Ty7l2jbFFwChs6cVlH
b32gQ/Gy7dtHhLdBtuolyRZcpB39mGtQyYRBXn1zikoR8lyoXZe8OPgw1Cq4
8iwDAktPTfacK8LSafCUI/33WHH9LiavAwi94cM6V4zOvA8PF/zmgXlo/cWf
WS04P2o1JuD6HlbsBfIG+0gP5rbvFrJtgp5bVMjT/FqsbT9+6uaBflwS7nsd
9bARdVoGrTWnW0leBtKmvAdgtkPjotqpRgjYTdjJxnXCsN7pykmZQQRHla+t
+68JB54/TnE5QAOllbI0k3j1jzTdJPuNTQjWTV6r5UWH8Wypt4u+DKC/fTQM
n5qwVu6yR1VQN0oFK2b05Q2g+pWt8sKyFrwuy3jwLo+D6NXf7otY9CN/r8Zv
GfN2GC4OO7KWwYPqjndG61QpmH0Xiqq91YkJ88chUoTP+8K7O9tNe9Enam/o
kNqFlXudTphc74NvY26hsgcPXp5TtmPlnRC12edVtKkPp3i7mKrLeiGyUKvp
jnM7TrcxKuIHeFjg6M3vlCXr9Fh9UlVICz7phB/J9eQgPbU4ze5yP1bmqBy2
9mtCzRPPmZ2LmVDZ8WLG3K4B6D0fVj9+vBFC8yftv1xrR9q6XyelOwZg8Clr
x+JgFuadepf+7/k/Mnp7jtrKsMFfkCpktZCJi9tHq/OI3+774tbkOsxGQ9QS
rYGfdKy5+ZnVYkThRMPKZ52vODjlOr9YkfRE5ozJwP3EnzNOfJt+gvTEwyLK
ifqbGDjQ/HHjhsMUbFcqFCGAA34v8vZ8ZSJ0/H3sBFn/v9r6S7YRf9ALu6Ho
vLQbk59eHDtKUegwzHF8dL4HvsknHORduxG/qHP40wiFtlsRp0Lke6DYq+HC
W96N0KcsLVM+ue5i61UlXXvQ4JV3OYrFAkNl4nALnYKIhn1OakUPjPeMiDcn
s1Aa+GBBbTMFzVtOr9n/sWFnpaL66RsLiQX98rpkf23Zn9jlnEmOXyL7bfYl
ss8kmR/nL+ZjZOXlborGgsQb9p/lqhxEHTx38PAFPmKS0qtT++k4tORNqFEc
F6ZPGx7lZPLhGLtqQuRYF0rnKNjeMufBZ2ru3foqPphicz3dV3fiiOiLjtJQ
HkoUDyhoEg4L2rIiZZo7sMl3jqoYyfvX84yswgmHzV47hziFdGCpoubgUDQP
9Les7iXk+HtS9ZoHqzvwobpJ30qHh57MUKmcD3x8bpz/yN6sE0dn/k00/0j6
iNq3E67E36x6jK/7B7ORqvM766ILE/G2Ca8sH1PQXi6++HkpGxNx28f7fpP9
2+/Jkb1FQX167mtbAQ4aNSyzV+YxsHxfeO2/53MqbzVTvrGag482+nZLlzKR
Ynm25BDh/OPWsmOrh9jYGhDeIrycBU+qyGtVEYW3Ek/1nu8luZB2OG9vHAu7
Osw8bJsoiMp1PBuZSbzRbvb6RUe6cUq0mnbiK7mPfvP+p+i842r6wziuNIw0
RaWSqDQISZR8MoqEhpRoSSKzgRQNo6Eyi1JWoaSMIqLQ1NLed+/bloTQ+H1/
/36d17nnfM/zvJ/353bdW3nIgIkb0zfr3y1m4Pa04Lk/pgjhURuVMv6WgRPT
KztmLWNA4ex565xuAfYfmTrkuJ+JETvhD3chDcp/rh4OJv5Zr1EQmnyKBY21
P/9Ed1KxXHmGx/hFAZI9JPxmkvkqcl/OVbiZBmwzjsu9LcDxtOcZma0sxKVY
uE4dpMFEQ+PfbVKflhOhjHR/Fl4eU5/6k0fH3hK7VzKEt9z1f//Ripj4JKt2
69QJBh6dSTJ1+EHmgr2W9ce5TLSkp995tJ+Bg6sPSzl9F+CrYwevVYuJbu3l
F7QG6bDM+1CWQhfghdcSu+5cJsZ6Tj/9SjxkoXXQ/cPEQ9Tqxe/OIh7ycHSJ
xpm1NEjknRquSBRA5Ilp0hkqC0dT7RxmkZyY62mksCqsCDOcn7/RWsDB0mQV
3SIHOnY+ieVWSBZhXoMnfZMpGyv3an090E2FxNCVnX7ORfjYNpV7vY2NKQPv
nIKud0DCzB69Nh+RZvJVcyHxgOzUzgjD2S24Fqy5dOvUUnRoSFT5/+MjpHad
zt3KRojeTA1/Z1qD4EkZN7m/Qpyp3vhb/VEDesMDW0IVWxC+9PvN3sM9yB3J
PG5yqwHHzsjMejWnE4rp7XNGZHrBmLp989uljbjyvfj1VjsKxJa4HTT43gOv
U+bVyoGNMNqc1XS8jYrX54oNtGg9OBj1QP5iQBMona9vfCOcUtumW7ZjTw/a
l4W4UmNaEFARE//rBQcyR+9/3fJGiNlp0tKF/9rAeeOZ+W0LDx57Q3aY3+Fj
eeaTlmzpTkSdsV7Is+VDPoQW9IzwdV5Gvqz0t04sW7SA65fCh+vPm3xTcDE2
dC6J/aMDpeLRseNWfEw3tvs6dYKLB2nJ84cT2vDCe7WdoQQPruEKYveHyflu
SWb13GuGirNZ+2QsGxVd7+51HOtGwjvvgdr4Rtw7Kr77yUEasrE0cl1rDzZM
mX3Jya0BKvNF90Uy2qCm8MZbQdCDzPoj+9MIx7gh1XmthGOtuifn3yEcm30/
yW9rHA1GB/VzREmuXK1LW3Yuh+RinuJCNSMqpg+HWejuFUBlQlI6PYrkwcxx
c6E1BSZ9uZ+fzyJz/9+0KV9MOHiu4L98twEFVuJHM6lTSZ/+o7xfs4MD2aC+
yS+LqBi5eYB1wIl4yGhhTeQNNnotjJRZXjQs8nJRX0NyQvj7Ba8TyllI8fMz
cc0gXmG0LiKecPWWue7PT1NZYH2ILf4WwcBPetW99b9IHh+ZrykUZWJFTuzA
/O8M+PH8KErThbhs9i5dO5T0ubvonMNCBjq9DL2CJImXrnfb8iGGgQNco7nJ
GQy8mKSlJI4JIB3Z0iTSzoBr6lXOYkWSp2Xi2nPNhbj0yLusRJKOUWn3hu0X
2Zh+4pbI/EtCuN5NONxM6uuPoa2atCgXbnuaNfWKhHgoOq40lE9ylOMu59Aa
LuRyDhv8//trj7aqpY9GtWPip9FSxVHiKVvNVMZqhDiQo+y7y7Ydm/5wXt9R
44GVfHkknqwLUjqG4xe0Y83V1T4ib7nIyi2hfibnKfJ93PX7QTuUDiXtXrqA
C2FyOb2gWIivUcdfvwnvgJbebxPfbhrOKf1akEF4lddSWv7nJAs3tKc/o8TT
cOdKOceSPN/kkBP3rmSzMHwkPKZPnob+K7Myaq8IsOX4C3XzERZSr4TmHvxA
Rc66jCWDhM/ntE0qpuiykUd79SSDT4X+Yuujy6OI904M2K2RYWOVsaDzzlka
tOq2L/B8IMCQRElEez4Ljyp+lF54R8Or1ILaE1kkJxvaztG4ycJITr/ixDk6
+m47iqTUkLw/eqLmoCrJhVfjZzAsGMAW0wXhfQLsUVt3zNqWid7jWQ/Khul4
5ZJtvY/M0+FpT//55DDRuSU6Ue49DZ7GnIo8cn4Xu4MuK26wMHeVaGdhCBV6
WU1NIwGkrk5Tz5vZsbFr6+Yd025ScSy59LT2GQHexQk+y61nY/jyApXrw1So
n8647BojwP09xb1RkmzopPd76c8inqxzMqj5HeHqM2d7WQ8WZr1jxFSX05Gq
eyXtabsArzx8DplwmaCvTpCa/pmsp/Cdc0keHM1/2Sffy8SJuJdrDpyio2SR
7v6d1QIkWjIWfNNgYXdS2Gz+HRoUd6+8fJrknb8bbG9UPmIhomJS0qGfig0j
VYvtosnr6ilexkw2nj557bd3BxVSo2V3dwQXYa/BM9fbczl4eutGIteN5E3P
6bMdxIugpt4yPdSYjThjU3MlOhUmhW8j+12KEHZDV8aXwsYCSotXhU4Hbhby
537z+ogCidXeokzCnyVis8uGmqFTVxDLOV+KLQf09JaoCDAz4pPigi+N6DCK
WCFqUYOj6UtM9/wjOdLGQ+CZ0QDm8srOlSPN2HXfvkLvQA8kUrj1U+MbcDP5
7sILYx0YuRG1zl2uFwdfug4u1GvEWErHxs2rKNhXcmZj4nAPbCb8H1DONCL9
rOlp/V9UpMYs2uFJ6cETna0e0elNuBDhsjCV5ArLcve9Xit7wHN4Rb+n1wrX
gci+ajUuris2ZVbrCmG7c5n9xYx2lIw4m1S+5cGzRlVPT4KPl5v5Z8TSOnE9
MOPsxQg+LvqoOJ0P4WLTj5Xf9LZ3wUv1xrX893zklDakfPrNgavn/pDoBZ3g
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
01MMG8XqEViZFzbjQifmUm9wPpB13CiqeDZmdz3kZEM3mMf14CNNWM+tuRSX
Q4s8K8YoWOASZaP6uAcGapHOZttLsOHS2UGxjxTICJ33yvXvQUGog8ez50U4
vf7hSMIZCk5run30JdxOPl5iliBciBcxUaucFSm4crp6UdONHqza3DFXK6gQ
yddzS5dtpSD8QWdpbHoPKj5WawYvLsdekQOVM48VIu/t0KEKOeLTg8MdLdh1
2DVxkhISXgz5fu/1+6P4uJ0gNdvctgGmT54tiVYsw+Lnxy/ZE/0po6wwcPF2
M04k/VzfdpSKnpDnmwMa+fgwpPzWPbQZdnLReYUnqBA5bTW2nejtOTJFu0fS
m7FKzPnKh4tU7B3bfleX8Ll1fvS72tAWXBp1Ha8uocL4ogRvIeH/kcqDjhlf
WtGw1bjAdms57D791yZ4jtWi2dFy59pxO8hL7Nn0Ckxa3SwsFvy+qbLZc6KH
BeUeJe141UqkMUc6w6sIP72S+6/nEL12sv8ovbwSg2IeuhdI+7nBXfvfTGNj
0fnZ+17rVOJRsPenl618lP+OnR04px087edaC3LL8bkvok2miI/qI4HH2uyb
kKx5x8e4pwzv1zMfUk7x0fjGb7n5e6K3khOzU6RLob9+vUSYCRd+huciBL9H
L+k/v/pBPw0Ntvkqx7dwIdXj/FTw/nZwdGPNIhE6DGqDJn2Xc8G2MLS5TeI3
7MRfFMsTfaI/vi6J8HnhVYdsAZ9Djs0xZhE+i6+tUi6t5OCk4e5jtwhP7Fbq
nTjtR0ehvk+6Kcn3ZVU1gYJ816w+XuhE8v3yy4bRxnE2mkrnb5cnOlYyX/G/
64UM/FthcCl2Dxsau8K+zI7nITrp/swffCZcGmtCn2WykPVH1bTsLg81A99s
Pg01gJPipadjwcLbpmz1n9d5kLNYKuL3sRGjrDsD5yRZWJrglh7hTtorLHb1
lmnCdOFbqbayLCznBH3ZS/Kx2WHZo06xJqTET26MJfkYLPWsvIrko1OPx51D
VxsxPehJbGQ1C/ldTfMsiE4+aB97l1XZgODJf2qxumwsluTcMhRwwHjSuH9e
A7IGzbv+lbJx6VjSel/CjayO3R+Y8kwcgOayrY4ciL4MN3Qi8yZtoj4rUYyB
RcMj+VlkPut9TvkI5vNst31sBZlP/ymd5tQbXFB2xVpfJPkeKfp2755UGp74
vLxt8pmLH/bCMZVEj+1RluVdPkPDZxlbl0DiC5JCvr7aRObzY9SIsSWFgcUq
O5T/kyLrIpZ9LTOfB/kM1fSwCAYi9hld5q/gICSB82YZ0e1/W8879F5jQOyG
jca9bRysXDL82ZXUi+hWxy0++xk4c6p/1Qk9DmqDz4k0knjaY8v9YbsZmBB6
1jddnYPP8VMJqoTbHYtuXg69wEDSUprUoX9sGI6Nn/Qi/dFTy1BXyWfgZWKL
G22QjWNBurIV2cTvv7/rtaGOgflnSge9uUSvuOxzoRMOt94Q0T7/kwHd6hOu
PSw2/Berhl4m8e06T6t6CZ/Flj72V2piY/0+Tz3PDLKOk6GyBWMMZH2ebuNO
Y+Nvrpx6/Gcezn367vtqGhNR6iOO/X1sXPvZ5WpH/u7zeacdDRgMtM0NaHho
wsGXNZG3tIheDR93kw/RZ6Avb4tpqgwXizeUXEwg6/Jw26SntjodaZcPbnY3
6kCPkI7HCuLj2P0z7fKzf8BkVo5uS3Qn7l0+6L2qgIefaWb6Bkvq8TJ9w7rd
ZP99q3yWVnWPhyq9wfGQE3VYqaHKOhFE6vENP7U7AWTffrlVn7CnDrYJPnUP
BjtxoPrRp5Y3PJTduJLzsbYOkgbPrae/6oHCqK3t3QdlqHr6bbbC4kJUwY93
L6YHl27tdk0/XQpXjURN+w4KnG+Iyp4m3C4a2iNSZ14C04gut2PpFIxZ/35b
E9SD1tP2Nwcni9DXuLj7phcFVnLP7PsDelA9L75iXXERNE9ETm5xpaDhvOa8
wMQePLG0m7XMoQzcifJjU/ML8UUZ8Y78HizZqN5dPK0GH61q91s9LkL9gEiu
+y4+Cv3Z1IAjNMy2fsIKDynB7COPf7Ni+BBZuG70zn8NWLlgpnuiRhnCJGbR
Yyr5+KPd6pnxvQlr+1r3UBZSgRrLqG+Ew811YQvPGLZAVd2q7PErKkZctCWz
CYffO8V49zu1Ysahyv4HC8vRbbRToYPoWOm8Zmn5k22IsK8PlblKdOyK2xQf
wmevTcNbYw+34+myxAazkXKoTE6MfiH14ojdOst0Bxb8B7j5NgUV+CR8YOoO
4bDX44BrGf9YaJMNO7R8SyX2FYgHaZE6Yv3zSnClIQtfc81niydXQElzlQKd
6PZFO/aGarBa4ZuSsqDZuBwSRqdkopL5eLr9/Tz6zEZQm4rCLJ3K8HcoQDTD
gg+/+W/m8vbSoLR382B1cAmSV8kKxxzmQmWGmZrgno0n3uEiVkwasvIqJo7t
42L77JbngvN1O2+9vKbComHfkuWr83Zwka8wMi4nuMeSxiuc9psGkbovWy8o
c6Gw9G3lJRIfFVd0KV1Ix6is6p99hDPbgobfcUh8g6k8w8SYjsf9cgd1Kzgw
rZnk3yHcVkj0GTINoGNA4tpcZ2+i34qLY48RbttY7Hpjx6KD2pW/fckyDkZr
h/84k30+6JNfuv8OA5llVZZ3sthwP+Vz5eQHHvwjfVolNzPxpdQvW8uDjZlv
KHlOr3j4nH7i7+I0Jt7o/Bj+coCN1TVGS/sJ59X3Cj9XYzOhdVztidV5Nlze
ZLWcSOIhyFHy1sJsJka6K++5fmVjwL9k6MxHHt7LjwpPU2NCsSN2+Pgqwrfi
oc0HCceGLdcddrrKgHXc+KOQcA4W7QwVXUr6v1VvwT6bUuIXHB0fbprPRefa
6y8+Cc63VBdYcdfTcTChT0fYkwtvX19Zwe966438V7p/omH8oI/Oyh9cPCzs
UL9IeCszm2pfuZ0GzkG9lMy/XHyet613nHCgzvMr/5YkDT8rW8JvjXNxivI1
aFLwf8Tib32dkKIhquDc65JvbLRc1Trs84kHS7mi07MWMJH2ziEvh8GGdPKS
iBHCq1Nmr8TeTTHgrf1otQHRpW4Xf4/cJtxLuvdo7RHCvb6i84FtE2wEGvzi
niZcLYs5cnmEcNU4bMViXTEOtDIWZrz6woNLmurjDQkMvDEd5G6Q5yB+0YDh
5FdSl8tqdRwCGVB9uHJRzjoOkpTD5BoJtyvjxpKOnmJAWU5hZbc22Q/P1SYO
Ec7zrw4ERVszIC4rNe0+id/PsDi8k8Q1f2t/0z/AwNhRh+VaWzhwi/oq+Yvo
SdG9PtsOH2bAtHDxuOA+LqvmRLrgPq7khjcajRoMbOJPelzN42B97dNPqWS/
OTnLrZF+Ske3HI1Xf5OLl5HB3S5k/g+/HDXivaZBK1S/nXutA63Xr6r6ED5X
ZnWu2O35A75/Phg/iujEio3Z6WfJur+QVphPVaiHmEprrqIn6cdft2NsohNS
vIvyzezrMDMJ+l2Lu3BFT8iqy4mHqc5wP2Z9LTovXNKcua4LdwcbExvsefCY
P95eQKmFl/M/KQkyjyGKwnkriK64+7D/nMOKOnxgn5i7mtaJVHvdztdkH6qt
Hv42s7sOaVtWdUm87cFn7d9/M89RMf4Z716gEB0/d5udJtz2FxspjI0qI50Q
6d0mV4ivbs+D7j3vwdEZo8e7/Evxsnfc70c3BfP6kpNECLdVmieXP9ArQdKL
lvPaHygQor79Oi+MtDcuyV3NKobVYV+p+XEU+NzkS+x50YPC367/eF9K8efQ
MTX3PxTMN9FNuUjtwcpXdy0kEyoR2LvVtqa6EKkmPee7pvMxM8qZzvWpxVXT
J9aHlhSDqVM2bwnhkpK8UPiEGQ0XzDIHPwWUYOLJYdbP+3yYpLmUzCZ5O0c/
1tSA+AMvqR030sr5OKfS997vcxMSva1PtYlRodUs1PiMzUf8lrJx1s8WqEQP
5GXyqMhsVVm3lXBSf+VoX/yWNny2jB8oOVUO4/W7zNOJvv13MU7HSLQdVTPd
e2szy/HFXFZGnHBbfvb3LyFeRFfrX/B8JlGBTdQZjoxmPor2xtsGBLYjuETc
d2pJBbS0FdjTBe9PlB+dz9rfBkoNjXXFrRz+RjLmkURvG24sO+vf1ISHs3Tm
U+WoiArpO/PYlY+2k9tEe5UY2O5GVX1pWIoqjTsjK5T4ODGn2LhqYz1kXNa9
5mcU438WQq8i
   "], {{0, 0}, {60, 140}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899911599980442*^9, 3.899911607690187*^9}, 
   3.899911650714118*^9, 3.899963982454208*^9, 3.899964119542658*^9, 
   3.8999641859632998`*^9, {3.8999642297468557`*^9, 3.899964238744321*^9}, 
   3.8999642900322533`*^9, 3.899989385401513*^9, 3.8999907366705275`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"268f83b3-380b-4340-836d-1277c3ab9a45"]
}, Open  ]],

Cell[TextData[StyleBox["Activations after the fourth layer. At this level the \
output is a convolution with three channels.",
 FontWeight->"Regular"]], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.899879273632566*^9, {3.899908206546857*^9, 3.899908224759359*^9}, {
   3.899908268428074*^9, 3.899908280345195*^9}, {3.899908335106683*^9, 
   3.8999083478077602`*^9}, {3.8999349137578506`*^9, 3.899934922396121*^9}, {
   3.899963518445606*^9, 3.899963573144479*^9}, {3.899963613584235*^9, 
   3.899963618726877*^9}, {3.899963959742036*^9, 3.8999639782802153`*^9}, {
   3.899964248885151*^9, 3.899964263813781*^9}, {3.8999643715466557`*^9, 
   3.899964428052596*^9}},ExpressionUUID->"9677fb0c-edfd-4671-b02b-\
86d4b720cdef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"activations4", "=", 
   RowBox[{"NetMeasurements", "[", 
    RowBox[{"tdNet", ",", "testData", ",", 
     RowBox[{"NetPort", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "\"\<Output\>\""}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"activations4", ",", "1"}], "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
   RowBox[{"FrameTicks", "->", "None"}]}], "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899964270348881*^9, 3.89996431856929*^9}, {
  3.899964349987677*^9, 3.8999643955774*^9}, {3.8999908039061174`*^9, 
  3.899990803987214*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"16d13f6a-e2c5-48b1-b476-c229f47d5ffb"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
eZB5oVG+NPH1j2Z8d9h2Uy+rH2ez9KTjnxM+JC5WfGjXiiS9vzcivPphfrcw
8E8WhWK/W+yv71qReqxp6ZZX/bjyY9orPuFJk9S+4IZtrXiy/+TJZ+P9OB3a
yr1MdDVzqdbxuHct+JAz0ThHjQOVPX8PBJJ55y63NmvCqwWoTNFZ7ceBT8oc
3mVyHtdVF1Wjv5HzWMk0v83mYM1rodxnUq85LY++3HnZjJGYX2us44ku5dNS
VpHnzbljU81qm3E+N2OPVTUHq7fl3okkzz9csmttWmQzlAY0LoaZDmDCvJot
TeZghLcFX/1zEy7cfnapUERy3YwqVxWC5yPtTkuGchMmdZ70WkDmxYlnxZ76
pI67/noJtZ0acalYRtd+JxfB5Z97lxCci3++X7ClsBFvCnlejZ8HcK6/VEaZ
7OMtFeh5SqkJlVlGyuPrB/A+5XaQLXlvSdIkX7kZzTjzD2KjxM9YbZIqOknO
fyitbcs24mdCE3/5fFzIQfDxk+12ZUSvMoLt5WNbcNbXcbpGG5mDhdaH1Yl/
yG+05SqOE19xfvtCbnY/fLRfzGGRen3yerX50/5WHEqs1FV/248tNlW/M/II
ngz5yaobW+Gw9nW1FcGfZf6o6yLBP33n6NkYgn9yMFWRn8XBoVaj1V8JbnnO
R3925jfDOyxFXu34ABTaqkzvEP6UuC6rnlTahI6JjzulnYlf7Um500LweSc+
w/3S7UbcUTix/agCD9fnxncmEH1IOOj5fOmzBnw/fNnL8gUP9Iwgw2DCB8a7
TIkkyQb8eLjwB+ceF6JX4ZcXkn1UteOErrsbYfX4lmnUDh4ebfCvWkf28Xwx
pqEb0oB5Mb+H3E14uMDbtUuFrPt/l/4zeqEBXYlBd+Y0cfGCtlHiNOnHaFMx
/g7JRqQYrTPoXE/qOOOOnyupV4Cn0bVudiMOel94VOI/gNe8YEYUuZf06M00
rddNoM20zv/EIj6zWiPFh+AgKS8TPf9CM0wH7nyKTuXgiNDHdAap1/vddw9I
En9lMGnvUjuZAXx7/MYkj9TXTTxkInQD8fmJPqKlJEf7U5EL1xM+LLmwpmxM
pQleO5t2VE8ieW3OjbCf5PyT3VjZwoYGtOnGGDjPoGAwodmQS/pL9+KTpKRi
NhKiTmk9JPlkTGd4buMFCt/2Zn6K30DmlEtwikkH0Zcfny5SRLendsktvijJ
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
8naVejuumN6aOE/6sut5hdFnXTqo6Yl9Gscasf3i/W55DQb4zKTPvkIciN3/
UrZlpA5Sx28Hz1dow6i4+OZb03nwWqVYGKhUD+sT48le+0uxzefsNWY5G+07
C9tOLatH1fs/BfWepZDcMm2NSz0bklrH5U5f/L8/DzaubemAuhDtlCSZ0wPi
Dz7d/9wIztE93x6QPP38rMhbnxdsjJ4s12fdbMHm1Q/Or5Bn4XL13Y89R5ig
nbOvXqHVgoyz62wTZrFQpf03aj7hdWZ/ebYJtxm9snkfP/UxEXovbetzChP+
FWNVvS9bQR+2U6m6zUJkrPag8EUG8NSoxXthJ+rE9Laqh/+/74k3uSQPxSgG
Dh/x7gE/6rXYM3kOLKYlbp9q6sJmobPdK68TXyodLjh/nIOT5x4FyMp1Yu5u
5WpGdze6VMGcKcZBhQVzJjOqGz/WvTWvjGtFTO3WYxe8WSTPzDP3v8WAkufy
u93z62HJjJm2vbsX3bLi19M7+vH1XQ596HUdYgT2NM3geqg8TyzxJ/zYoh9e
2zrSj0XzCmblb+JAXiZprpIsDZuC3S365nKxbOd769J1hPdsJ/YZTaPB9pAr
u8iQi/U7HnFPLuNAS3DJ1Y1KhZ0P801tLhdqaiqPd/awsZ1yW7X9JvG/8MEV
907wEOzuz/hoz8ZZWT3XKVEqPCb5q5cc4KPiml2+x1sW8mY+0EBBLajGTbmn
uviQyLGyPcP///uyt9nPKmrwU0Yzp3aAj4RzfYWCb0zkzKS6JDyrwSNd8+dN
+/nQShHU2eYSXX3+fXBGUS2Cy02XaadyMfvBP9+DfDY+NPfzfUOp+N3iHRi0
hINWF/Frc55w0K7+oyMhux6N2w+6Hopj4tqi8SOrKznwe79ykdDdJmRul64L
WMBADznsD4RDjrx/2e0b14L8HYIU3RY6KleqrGXnceDw41PszWmtMFs8vyfw
az+UxIXule7m4LCdS4cOyT0JG7q3jKT04/iHpXMk9TjwqHMw6rOnwchOkd1x
sx9cYYpKgQkHm7XL42y9adBW9XfqTuiHWLeq+gx9Dm7UntI7cYqGALt5L08t
5eJVH/e1tiIHdut0hA1IzjhnZCSyaBUPFuoQfUb67fo+HYrWZipOMO1N33vy
Md1s9vJZ9wlvHP5QlHWrFpo3hlMoGwR4LWvC7FBlQmFpc/7Qshp0BjwqHDwu
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
UwfnvOWCnumk4dvLRqegN2+hL5nrd8ZlM1I4CJHo+hBJ6vy07N2nUc165Fdf
tKd8Z8GFe6BRsZTkfPnQM8/6G9AqdTW+PY0Fw6nI8Smy/m5B65fz2o2Il565
6NZ2DiSMNDKsEzl4u8Nic2psPS65S/QVn+SS+55PfkV0+/kKqRa3D1R8eTXQ
npnDQ9qhww5X17Jxbm2zPPVBHTQ6Vorx9fjY9aApVPEjqdvDAayvrMWJg3UL
g9X4+CgSlBRbzgJb2po1m1GLyF8mOwKoPGy94DBtUIoNv9uzHzq51WHpfKnF
q87zkHjCssPyCBsDozP9JMfqUBX2+FW5Genbl5VTOq5s5B0T/7hoHhXHHeVv
yRL/qtDnluQT/yo6HeIxd38tcmXannLH+TB8QVNUz2Ki26GMJnqvBua/I+ha
X/g4vd5Nq3QjC9+8c8ARq0X3rPPBPt48/HXhfok1YeMe/YAfGHXolWpOPRRI
dMMswXl4HwdxoTsmJ67QcHt+iEvrazbuBA/l2HwienKbE6Qg3oBrro9utB5l
Y5m0WOxICQf5S1ZuznJuwHexZ39yPEh+PbfnxMa7HPDki+b9cKzHyW+dfQmi
XNRP6N7yJL6pcXF1+5A4DRXSW9fXruHB9PSPZS/C2Dj1Zizx8Ebim6vt+o4W
8RC0dpKzTY6NY85GDb+DyD5rVjul9PCwOitohCVCOC5tefZayzqIJ9xtGiN1
VijsmEogdRbzd39X5lqHeWWpiS2VXFTLJWxrr2PjoMS1ktnnqQjxWmaoa82H
HePZmoiXLBh/iCpYmVGLMw//RPVpCMBuuz+9WZKJqT8rlvX8pWDDh7p9658K
EKra1Za4lIE/ztN/GCpQ0BfmEr3Zl/ivy6TFU1cGTgUEH5o6R4F0fP4Ksx4+
tB1u7OexmRhXbowJ/1aD00UJ97f68LDm2RHXo8ZsFOUXnGztrcPvvXddY2xJ
/2+KCVRexEFm4VKHj4VUOEnUCEUpE55lyCWkrOJATe1NqgGPCsXhgnOl77nw
Hb2lP4fwouPchTrfblDxVfG3fTC5/+1aZ7Ul5P5Uta2XHMj9Kf+U/7pq8LGK
usSC9pWFKxf27fzeUovkk3o2gc/4aHxsXenmxsLMyLWp46hFUqaqxYP3fFyM
Gdwyey8LW7M+e9jK1sJY2uNqCqUfK3Vcnsipc5C+Nd6tWJ0Gbt2GxXSitx69
PToLiN7WdNY7xhO9HZnbP5k5yMfUCxVPRjETrv9Wvv/8tAY0C1WhyGoBuhXz
FtML6BC/55cmSqlGTs9NvnqHAEoFr565TvZC1Tpk4Of5Kigu5KnakvU7l5yy
y773onbO8oRE5yqUHDP8UE7yz3Lf7OqDV+mIDBzueR9djaO5nRaHjgiQs0L0
bH0dA0v7vFpPlVFgqu7r/ITo50ypPavKiH5+CTeKPUU46JzpyYuH2vkQC3HZ
kjTMxOFXR6Ztq6uBzl/7Sz4cPhYN2cZ/aGCi/uiurgVva1BkjJ+7Fwrwo1h8
6NIZJnBj16VTB2tg9DVSeT7hU55vrnn8CAO9dgH3J9kUWHmt7HtlK4DkkHrm
9gIG9B6fvBeaS/pqsdXE9MRuGAwYeT0hvDmWekSqntENam7drzk1vTCPScty
d+ZgyUdXJevwDoh36IVLp9Lx9tbfiNPZHFBtlj/OtGyFzyl672IKE7TVlGnB
FRysWNntkmTSBLMBseqDJL+G9QVsTk7jYOeLoYQbxfXgRVt8Xc/vh7pT0EPK
FnJ/1tmK+/I0yFbe7HSe5CLqi4TZ4iw2ev7xq6NMqfjWYDRqrcbDP597P7/6
sbFkzIJevYYKg3vBTaxkLs4PquePfifza+NnORlOxcQhObeQnxwoD1RLdBBf
u+a1JaxjhIbFflopcQYsDG9TXPP/8/oEJ1oL+/MaIRxbpX/qTx8K62z9/93n
YCxzQfriG20Ql7/rOUuvG4LnERFbBGz0L9345MC+Hgg/j1l9xqIdaQ8ey6mQ
vKRbcvl+9UY6otZPKLl492J8+fN9Zcc52N1++sYK2U6sFy26fFqG/Jy3cyj9
AQdtbuHtAWZtCA1ZtWkqhIHIL6v1dCgcrInSLnrV1Ix1D+aE3BRjwXN48l87
2af84RhtS9EmKCxJfPzYi41NQjrBYUT3Xux03aiOBuxqH3X4QOOgYapOY/MV
DipjzcOy59UjTOtSU3Z2P/zshdIN93Awv79y/WkLGkzz50u69fTDeCjyXtI2
DlrvcK2eKdNwYyNlWNa6H0JxP2aZHOZg+SPez3+JNHgkD3zW2cBB6Ql1g6hk
DtZ/m78rIqUeAQ9nqEpsZsFISXXYhuyTf7aPfo7WiBLdxqNuiXS89h21XJVF
OCXcOazoTCvCt52QaFjXi+LFya+e7OUgYiiw+npzJ87ZCR0U8uqEY97910sf
srHVbp175bte7Kmd+lP8pA+N2U3rPwZz8OvDq+nCS9phEhv6sU6MAU79qnOd
BRy8op+Lf57VggaROlOnvwzELvJw5FZxUMYYFnlk0IySksTw6jAmpu24F6Jb
ycHMxy29HQ+ayLyH/VKaYuLb/IDkSbL/5aE3U0fnNWHQLrnKNpmFpXrnxJaV
kZy/V42msb8RmV1iCg5L2XiqLZ/3nOSoVQXhQZffNkBzxC/2HvEJszuvtB6R
dfsdkhKU1w1ozoK/SAnRu23Hb2b+//w3/1PN+1Y04oSZ57MXP5lQFzxo+P97
xHuixWhLlzZhqZ2VtmMqA+1x2yR/VnPgz5dMvprXjOg1V+46NvaBM+OE898I
DgxT9prcKWkDvdZANEu2FxoR95W2g5yjcvDsP1OdeHAxZv3D611I8Kybb1dF
6tkRObFTrhcfPh0x3DeNjkPnT4uci+UgyakiUvJqG35UUNYxdpPcfMHbpZzs
f8wmNdrtQAuKu39G/ZtgIM6qyXGS1HOvHOfEDlNSzyMjtuuVmPCfGn7sStYv
mJX+fibdjBmbNoTE7WTC5MzQn91kPfTViaakac0YlO7/3pTARCNHdkiW1P/y
qoHH+cFNUNEqOqO1m4W37wQlGqT+rOlfp76WNML0emXFehMyp6+SImeT9Xu+
PssPvm7EyHJ+Pfc3E1WqKcd+kfVo67E8nflNWKzYNMFey8QZmZ+nPMjrttqz
5qnJNOPK7R1NxY10UN5/Mg/O46BjcaFUh0grfvvF5Q2u6YMc7+bsi2Re3m9D
462RdlSmLrtUr92DX4wQjesypP4HjYIUlnfjgZBo/asNXYiJfHnFsJANyZ9y
0tmEzxZOl/tXFtWH0WVRwo6BZO4WrM/o3NYOfUuKuV0xHXNznMVb3pD3tWZK
ibW6Fbf6DEqbHzBwPObq/gVk3hPiVGYcLW7GBZ1fH89NZ6Kof5NrL9m/rbL/
1KAuWX/lHSVznAnnR/3dVFK3ltmsKwsam2D3zOyr6yIW2ke+NKb//39g91z5
mf2jEWIyKrL5hPMnk9Mr/39eN2Xtvra0iAY8mhCtlm1gQ9/AuV/pLTnHD0Xx
Vfx6sLpko8cJJx/6Pbz9YyEHHCd2cfy8BsCRcfNdOgu/hJed+0X69uVqxzMn
0QjGDg2NpaVkvsSXrYgm/bnra5Bl6N1miEytiy8P6EPELJ/a6/4cIMl9jZ9J
O958Wl4kMtQN09psI2lxDsza6yQMvLvxmK7TU2TZiUkXt8TXD0iO+lg2KFLV
i52qC1z5M/qgp588a84FDorfeH2mKHZg96K4hKtEX71L7JwtiP7o2kp/bF/d
Bp9rMyiZmxh4d0nm2Z9i0rcx9PK8k6RvRz8e0x5noGpT8b2/pJ5JagsVLM2a
4RAoKrXoIxMx40GWhWTuuieS6+47NCGgcfGho5UsNDnFFz8g79ctacep6EWN
8E+Q5RQd5MA6Tqu+Keb/5w/ssDb1qcfF9ItH61P7cfTJGYVnuhxI8adnt9nQ
8Hy2+7USYS4e3k39j6LrjqeyDcMtKUIhEoXSUuorhNCFhpSQSlEZkRQNZYSi
oZJV0iAyUhpGRBEiVNZZji377JGUEpX6nv59fs/vPc9739d9jTPe4yYgPlNp
9cpnl6Ubcd/gdjffkI9vk3M/hRz4p4/iQavXjbipVbDmxnQumLV/wz6Sfv04
t+CcXl0TNh0efp76cwB7IpnxCsT3Hpx1vmagqg3hhhPZ++X6MK0481CFMbnO
k9nGt2Z3o9teIt9Mswsx1ew23RtcaGpvEeaL+rC08P6xpuo+3Hz2LnG2Fw+b
Vjdt9k35iPO+VxDL78ejb+N7v94kfO7ZouqV1oHWVBxTns4CzSuJtZrg4Yjw
3d2cp214tj0q9pkEG0ejDnU1kXrOrRn7Urm+Fbl1C19WfGGjlRboP4fU06pX
R/nZ/Baky9sfmUHykbJ4qow2qWcF5VTWdQHJm4sPy9Yf5mG51YyEWMJjUsY6
rj4+THx7fOC28QIBLM125N5fxIPXCGWyzxcGesd3rN8zjeTrnI4N/z3g4k+U
TuasjQws51k6XuMIsO32nRUppSS/HNHMuL6fgY9yR0Yq1fnAi7f5F9xJLpOM
vt5Ca8Tnb5c//tdJ8qr5DLN/z0GtlciMP2LcgpuNk7eK1vUjxd+/6HIQD6cj
Zg0P0TqR4rbp7NyeLlR8ifotfM5Fjen60vkhfdjkd8S4va8Puzbn7d3tw8Nk
3+sV/d4fca5cze+/0X4UBEfuNyH+IdZ0H1v7cgdsVx1V3vtjAEvV1j1MKOFh
84Hah4m1bUiQGvm5qpMFClc+axeZI9HVbU8Zp1vh1za+71ccyVGn+cv1yLzr
RByJuRrfAo8UmdgwAw5iqT+YVmTemyM9QqLrmqG1ZXOgwVYuupftG1El+Gnb
OaHHJrgJfqEZSwc7eJhgvmPMyI+H4oiNizOlmLjVe8Fs5zYB9M33NXxQ5cHD
5Hy1IY2B3yrzti99K8CXb6HPP7VyQe/yCe4OYKDMaIyzoYoPywmS2xNMeNiz
dtvntA2NyBvxV46ZysXZ3z4+bPK6TnXJQf2UJmzvXevAtxtAicN7jtEDHhIr
LMbvCNtx6EvH4kNTenAmZ2zLnn4uHjP1+G53e/HbcP1OXS/Cn/UsmSXnSd00
RjOkz3dC5aHBy0GfAehMC3bflcnDlB0r31e9bkf7/OlFE5axkOQxUa6nkuRE
O8GAwqk24GGB07xcFr4wdE3aSD1Z5x6LE5624qd2idV+JguLpip89Cbrlu6V
NQfOtWLF4If8mcSXX5QlrSfrupZqRu4XWiGtT9Hu1WIjZyX7SCDBeefLhR45
c1pR+uTYVs21HNgIH/RtJ/Wf4eYuMGhohu++q8xbj7n4Hj16/da//1OrKJST
J/z53j/yv/fpPAzv1w/KvsBDadKSe5XrmGAvalltSfx0KHPybl2C/4x7EaxF
3kzkj+/LkY/hQKXmpM2/z9e+njmioO5GdPDWEwbjzADmS4UyZz0hdcjpcpF9
1I7aG1vC0tN64Lz817pbv7i4HazdNq+7Bzo/9gYaHh/AWZp+djip28fdFIPw
onbY1cgs7fJjoankXud5ojuOydq6gZ9b8bx2S52iJBuVHy2z6P90Z7eUUNK0
FZbpc3nXLNhYftvsijpZ5w2vPhv0jeis5r5oAy4LeSurJFeTurkN8x8uONSK
N//dSz9Mcqnl+DbHvgoe9FZZa76/1gbP9GeuM2IH4HfX7pVOFg+ayl2Vcufb
MSS18tGcggH8qczzuZdH9GvvM95FtOO65dAynXgWbli5SS0h5wy00/Y4U9+K
YyeChgevsZHtOTjZmsxFxP2Ofsf7LfhuNl39BJMNb5fOdf5krgfnZ9X2bWxB
eyxjrQ6FBXbdzxWh5JxHRx/dF4QTPPTx1J8W9YM/5hpbF0VySQnbJPF7BxYu
Pnt3+EQPwm9Kehwe5uLgcxfZJcq96HlgPbTekQVns4tHBsn1i4zbYiTmt+HC
UrBGKthYq+XxNYusv/tWkHN0H9Fl5jK1H+EceO1z2elB+mj9NpA32bsZIp9M
feUeDmZ9GLXaT/iwpHnfRvM/TfB5GuvDTuDgqcfNrcvI/skdmWUv7JuxazW7
7MgNNqScXzcakvv17dj32Pd2C+7ES32tt2Zh29CsFFWCw1PDWguKddvwjnJD
oprgpPKDP1WO4CR1kanXYoKTxbAyX+k5gOav77bveUR8bMvqXVfet8N+Ubxx
T9oAhgw/LvlM/HmMvZTnJpd2fBn3v3b66QC6U5TZ/z3nofzVrSE7u3ZoiFyp
StIDGK3YSJuQwMObdbeaTDw6YLimbkYF8ekUirf9ck8esmQ3bjd++RFtlILQ
QxN7cFXj9oHWPi4Wc5Pmfb/XiwHr96MmYSxE/ChUPUj6e9FaXp460AoVq+xj
P45wMHrU17bw3/Of69w2j0Q1o7GJ/Q1ZXBzZxs4rID5/nsPPO59kmrChKTpU
EMPDHPuiN8eI7+JvObr33TYmAiwvGXRO4OPLtpUa/KM8BLO/ttoIiM7uOmS7
6CkPj24udOGH8aBcamh4Uo+JyVZ2ndsSuHCvsr5gSvikrUBueNn8JpRby+Q4
LeXA8syevABSZynLywGSXc1gOh1eFiPPRsZpnbwcMhcnHN8/mLaqFY9H5q4b
2MjCirMKS4ZJf32nn2GFmbeBtmWDT1rMADbEFPHmEfy3SIx2NBD8l2ordxhl
9mPQ/7OkyTUe7G2iKGMKnVi8q0VT4nwf/FfdGl7iTHJf8BqP24pdeE4df2Ps
3INbr2c9OjbERdnG4PLNK0gOPXuS/qpiAM7v+B6nic/8Xjal48qydvyw7Wu/
R/xheoO27T9/yF5Y8ymQ+EMbXzuDWVziA42irFNIfs+/WO8R9ZGJSSOLjAd9
+Yie9elxsy0POV6dz30jGpE4+MTK7oUAeb9fK0gT3nafv+5k0nkGbl+QW/XL
WIjvlg82+Z/l4sXIuwcl6gwsbTs8gaMoxCPn/OVTiK97/r1T2cSYAdWe6Tq3
tvz7fDlC64QaD56iq1PjGf+eD3bf6y6P+EirupvfTpI6n/ru/PVPI94KJjps
2M/FxAUdYVySc/+8vq5v5UH6UrP9Z3UuG8+4i7g9ZO5cZ2neOnyyBVOSHy/x
k2Vhq40Z6yfh4WcTVzXvTmuDtdaTr8du9eOt980vaQQn5+g/3/xa04mOJ+t+
0YiPWlH3qohDfNT81Kr/whW78d+Cam8tq36UqpzquhfCww7Z1valrzpxTy6h
63QeC5ryqrYMwicO/Pbr5ZmtiOu/LmU9gYuplneGR4gOnvnkgEvNTaidtMNd
YiEfduONj18fJLk+bO+n6ZRGqKTFrL70XQDZ+et+fiG+op3fEbdjBwNhH15P
Pq0mwq7FEhP92jkY+lB+6tpkOiSfKU9++VCE3Y9cXzue5MBC81PRK3Magr5d
jGu/IoLHSw39okgOPJKSSuuP0dA88vdZQYMQ8bXOlqcVuLCIMStf6U/H6B33
28vDBfgg94ZVOYmHvlvq2orpDNjSVyisPctDkyf13bNIHvYPDU0YdGIit2xs
+TF9Dnpj14/YEvyc3W35SoHSjLna7L3qCiwUXp7LflrOg4/WMw/dBOJLDzWh
elY/yk2MJoSd5mH6laeOmUofMXQ7+eQyez6Kz06ccnIPD8y/NXZPMhrBnPG1
hyktgEd/mO0vbR6C9t5bmDKlERuWB536ekAAu+O5tjuUSX78uHbhpnIGNE/M
c8t8IMB61oWes2IufvqOmKVHMfD86LDJdz0hug8Giu5c4GKP5q2eLC0Gzg2s
T+z/KITezxdT0yW5UMtYsf2IMx23c8a5csNCzJGJWJM/woFezw6TOlM6ChM+
/mj6T4iUzHrPpHAuePG5/fFLGMgotnKey+Wj6rhS+GQ9kkOjvP980mqEj9ID
7Up7goP0lb/uklxwo3mChm8oE/GVMq+l5Lgo7hzb2EDw0FEW+jO8qgn8tV4T
P0ZzEJ3mPPxP34/2LpvsTvQ99+0Fm6vDHFCD7GrUCG+YrVZRncNuwnXpRUeK
NAlPKeaJdqfxsPBWQsOpJ0x8UfjG2XCVj6J3IQPFWwlfPdy1fHlAI2Q8np2M
0hKgnJI1Ikf88/4ttlN9PzMwemOl+pvDAoSFBaiMKZLcfWM9p/8lAwuLdxoN
Fwggqj37u72XCxaVk+YXxkDSSYUN+seEOBF36tW5vVycXniodcVPOk4P+MwJ
2COCzcm81Q45HHB1A7xD8miYvVk4a+4zEQJ/60kVuHMgL/3BdfVaGtb5hdxp
Ingu8U731SF4LqrxujqR4LncYcaH3/0CTJ0QNXltORcrbvZPknNhQF7/yMOf
Wny8fCBKNyfzcnGiafT+epKnrtEWTNrOxaE36vkKpJ7+rUvecgOaoNW3eJqv
BAdzbrjP7yH43MtX0Hwwleh+jtd3C+IHMh8+f/PPD7ySnJCjtKkFZ5Ch+oec
4+FyVw9vUuflIQvYQVOaccD296t7TwUwmRqn5MXjIndD5pGyKwxI/9yg6qMs
xLbqiS7L73LhN/1rkZ8RA5eXb9XYbSREJ7f5uUcoF6sHG+vvajJQcsZHMBRO
8JZ8LHmxJRclVbGt79vpMHwYe+TkWhFUJsjXBLznoNj6oN33Hhoy7mye2yUW
EX/4K31RDRuBUQ0haY+pcM87fGrLMjFcMtv1ThuR+zjVQb+zmIqBw7XcCp4I
8t8OBmg2sTG9iWIc+YKKLZwXl64OCdH1euXnyFEOJClu9Y7mdJjJz56tRObI
8L9khStkjr4eCOZNrGDApugux3o24aMfOyfYZhD/UJIUObuAidAzxucGVTgI
WHH9aDqpZ9NitZnpn4jezfBwm7qSjZr8Gdb7id7Na+sYviDTimWud7zKiP+p
XZmRmk3q7LkvTOoF8T9nDH367UeE+BB5UNP2Gwcx2dWz1hjRUcP7NpS4TgST
smELnyoOxuX9n6l00BC80q72pIEIExaXBZS+4yDS1Tw0upsGx8Nrzm30FWH8
YIxtyD0OpLOfn1wWTcP5FX8vf2KJsKhIoUW5iw2+GT+1oISKXU4JUgHOYkie
fGZTXsbCpJgSxakvKVghs2W+0V0xmn60t6UbEL//yn8izZiCusTDS96R/V+0
MjUkyf6CXYYbXQopeOJw5mTDexFGpCcNVS7goPNc5nWZX1QYZa+7/maPEFNz
V8zW8SI8o/OYunoGA28nT1rfYMTH9QsmrzeRXH8l2WZKRHEjNHMr0zf3ctDI
k6/ZS/B21iL/L+13EwrvC7cH7GJDN3DUR0h8nfjdqXX3eloQ7KgnEWjFhvFy
h4nSpM6/Ej6XSYhbUFEc02vDEGHwv/f2c6U4kNgX3JTIpqLh6vBf8VsR/J1D
B1es5MDNY/PR0xI05D19OOwfKcKrWFslhQgO8hzm7Sr0osFGNas5N1OEzbEp
kUXeHJhed70YakrDuMhBnaMshs5vB47RQTYeN3Xwi7dRoUqrE517JIaX0Khi
uRILM/P19XbPo8BpdZ+7VKsYH94rKssfGoDFR/sfzMsNWNtwJItfIsbed35b
v7IGsFiccDzhcwP2jX07uExbjKHeykJ3AzZ+nzE++UqLih9eu2WXzCJz0fvi
Z2Ef8X11Uo9PKNDBFEzb2LNaAPHjD+a9hP8SuEssJdkMtM1t3pDWxMXdy9Ev
pxXwsPXmfK89IiZ6F5msU59McBsaM84muE04/OxtwPQWlHq5FG4/zcb5o/dk
r5M666+19/5R3IJp1z+ualURg1YsuT77ABtzktYdirekgjprVEOlVoQdSTvl
983jICXtiumCESr+aNc41E0Vofl374Aln4MVyUPRUxfQ4bT3cULqFyGsj5Zs
K//BQenETwl00LHQyj9yBk0EqUMusZ5yZN6PZrJ9BFTMMCqwPnNbjAM/tuwr
N2ZBckrb2WhQcE2yIMD13/PGA6vcT0oOYEp+ovK19Q1Q8GY9zCN1RiHcbhgM
QLlado2OewOc9JZQ5/iI0Tn8bO27ZBbud8ru5t0leLZorus/THh4dy3DIZ0D
NWUfGZdEGg4eX7K2MFqAjUqxRZd/czFoFtEon8SA+7HvszYQf7mjXDmxNY6H
T/23H9z2YyLM0a5vIplP3XkJZ58T3GK5hf8VjWYY3dd9Fj3ORhmrLuw7qfMU
+9yEDTNb0HlD5TnTQgw/3lB07DgL20WnxqSHKKikFuavfimCr3o0/7kVB8/n
m6+4MJ8Gf7lZfYrzhcgX2FK33+Sip29E5r0eAz+VRs1NLpFzMmXenpzMQ/HO
p7fKiD9J2no13PSeEOZvH5bcMeDinuyB1w0ldCya/CPHYIEY6dMquVO2snFV
uysmR5+KRWPcsvIWMcknTjo1QQOoFcXPunu7Acrml5bIt4vBvVBsRW3tx6bA
ydoXVBrgE/cwcW2mGCmH5j0NVmThNNuIXq9KwSG/9KJuMi/Hxt/fsSLzMm3c
3G0umRfPJnX/+AgBYmvcmdf+cvEhrCDw530GvM/frVlkR/zo99xag9s8PJbP
ZWSfZ6Iulvvdl/iMHRa7FiqSes5Xjfke0deEVDFtv8CFg8kHVqswiR+wScr1
MU5oxsi4bmFeGOF/27aoxuMs/NU4HSl3nIIpzvL6L5kEhzt/PA2awsHvjKl9
Qb1U3DQN8Mv89zski4x310l/ZXtqw9RIf+Mf5rX3kFw3SfXr2w+hPGSv8pvv
8R8Tl4rCrM5V87H1lcBiu8m//+NLCrll0Ygk6VXeiRYizNPs2XarjIOxvIQJ
7VQajr1vXv6D4FY8YWvLrXUsmKy5GHVuPQXvs/YtEZN6elKqcjWT+pF+I7RM
XlyPamfFcjWC5/5rEaVjKgOgUcdnZlo3wChzF/3sTxF+jO50+u8xG/+NOc+/
EknFnEmP7j0pFeDFKH2pQScXHafuDkkGMzDtfVov7Q+5nyJGaT7Js2mfckWO
H5h4+kDueBHxUQPe1fu3k7r1TRf5xBIfpXk7YkOCEQcnwoeTNxB8plMcIsY/
NOO/CA6TR/Awp6l2bcTxAUw/+HGuZEwDpqpUhXvaiTFlral/UTcL11nXVWSa
KMiRDvy0XUDqefzi0e5iLgJc7Dr5jgw0Pw+rGf3IxfbEY5rT83lItDiI1Wwm
qt29J9T94sItMWOaN8mXJSXPm4ZqmSj2/yIwHBCAwXkl/+95tnsV0/LYzgx0
WX/VaTYU4+1u3xN/FNlYVObX7C5BeEY+bpFvpxiDK3ebPfmvH31/rmdPTKrH
zuuafl7dYrz/dHgj07UPSuGyc979rkP6oPzKbUli/PfkoKbSShZyj+jdV9Ml
c1fzmT+X+DctvRM/bhD/dtlc9tMO4t8Wrdq/dSrx/SaNP+PEj3lYcq7jZkI1
ycund6dq97Hx8rR8tDXR8exrhxvm67WgfHHZ5J1xbCw59WD+WsKf5Zpyv3fd
aoGUW4ZOwUcxhEWDny629+H8/XWynD31cJdnxggJHgTytTVxBA/dbSmzvQge
Vgu3Ol31FuGS9bui7BQOdjvYLzC9RcOV3HcHN5Ic1X1Ij1IWSM5jIZOlr8zE
+Qxb/8nEf/sfeV92kuQ+p2/WhjW6TZjXahWfV8eH7OJNqxvX8WCcwWzYaNqI
qUsmbDzdK8LZjCj23X/fc5iQF7HhHRXLA20VZnURnboW5k4v78PY+vc3d26s
R631bbEdqefu7wdiswu7kPDSPW70ZC0KjqboupH9y1TiqX1P+rB6iVxtmm49
Rj471uCeCBEVB8auneXgxkOXDyH2xJ9Uzv+7NZqHNb+SxxkkV1reueC1ZDsT
VW1jdWeI7szoG4mNJXV7W8NsqyK6484MSvfIZ4HBbbxMJfftKhquSHjUivtd
V3T+9IhR9bmfG8HqRUnjV6+1T+owS7aD3z4gxqSmhfT9Nd0ILd4dHd9ZC3+N
9hGJp2LUV+e8YMmw0OvueL1+NgU8y7OR/TJCfDxeMEErhYu6+6Pxy80Y2JP3
eeIwwevDcXEp5RwPkuyluZwVhJeSrsvvTeTjyuXwPI/NPIS/NUnP9WyErYWP
rddNEdS2TH+58SLxCQsmal4+QMNQXsipwI//vhfn5NHF74OmXvzbPR71cDnv
p5qSSvRozafHsvEd6Fqjv+fc2hpcMb71Zx/BQ/DJsYmb/bowUketKNxTi/EX
h1sO7xLD5JDflJ3NLMzRqz8TVk/BmQpbiaZoPoJy+tQ9rHjo0aSoevk2Yl7h
rgyEsLFwzeTLgaSeh51uH9r0vAVrctcpNE1hYbnnky9xZaTO243b1fLbcG70
uk8Z6aP5um3P+df7cN3V9e99jXq4qp44bfRajDNHP3W87e2E/KXg/ZNek9Z+
c3FoJ/WflET/g9FejCxNMVLJq8OzNbzpc4dFmG16wOliMRuHTbf93naPikeb
C9b/KROg23ZplGkHFxtkplxRDiL51GGdtOFOAUYONYgHVHjYkl5X6l/DQEXB
qXR5ExFiA/KnO/77H7MemwuSbTSMVuYqShKelFq7L4mnPgCbH79Ll+1owLRm
w00y5WIUbjE0CJr/EW5Z647eb6yBzafvc/XI+d0s5TxDyPlVQi3n8Ypr8FAi
5mFGrRhTFXcerageQBpOj21iNuCw79hTk3gBxn2PVlX84GK2tAMn6A4DA6Xh
d84RHf+1wy/7n47XXsz5s5vouPTDVTlLaAPoNZEtuFHIw880yYwDM9txjket
+0muf2Wen8xwFeHP+Bs9UY0NMCmiirsIPquC+tlvfnchr3Oy1/qYWpRtL7d+
x/r3nM/Z7uc3d2P0QLbN5ae1CK902j9IE+P2Lv1lfwqJb5SfsLL1XQOOiV67
tmwlvkVittaNVxyE16wyMK+i4S7NdK63qhBPvx4cxC0u1q/b0vRwLQOZQ84G
oz1CSDrwnF0kuJi0viRuphMd1JmVR2UJrpKmVxRqtbAwVmp1bH0DBesGbA0/
Ejwk0D5XBV/tw8iJqMm6c4lO2f83+1CfGJzNNnmy6r2o7I6IO3qgDkeeNtkl
kfna+03d//IMFtTEi5OjFCnwktQ49mhYgFLmcRnbfC6O70msSbdn4Ezl4Dbp
+xxYHqsZ//c9gfCy7sL07c04+8IlznwSCxNFF7NW/3vfcl7JqTsv22D9NEkU
2SPCudbLVcV8Nho9/hbrfqBi58JXzRaE/zM6LJ7vNu3HacXQJ08e1qPvkFNf
CDnn9SWptrfke2F11/jSs711WHlC99NTMl9KAQUOFjn9eFRpNLFvjOwPeJqy
Y1QE9aeFdpuzSZ+rrlUvuU5FZGRjf8RDIcSzdI1n/ceF4WveY5tsOqoPd83K
dBNCO/sN/bMrF64HzrUYSjCgbLba28ZRhPiG8jnjWRywTE48Hcihwf6C6o84
UzE+z7Cc0jed5EJe/csNvygIX/uo4HSCGGrLFNTf6rEQt37h6pVGFBiwOdvD
/4pwOW9c8VASG921bXdqw6jwkT0o++KFAIkmdQ+r+7gItUCGw3kGFgRTImZO
5SJM/3g3h+T9uK/zgoKoTXDpvWE/4s5C5Fc11fMkH92YMTPDUboNtjGNDbUa
AtzS6ggYWcQD2+rqg6dfGZj7JTAreJSPi9LZyvdXEZw7G63/b3YjWieFTmy1
5+NvkcyLzXt4aMw+HqqY0YglM407/7jwYHZczcGH+OH2TWlnVU4zESu7UKsq
hOS9pmurrxE9un7KZV6naRMGXqnxFUs4qMsJ/vGB+LpNKVt81mg3Y2/QtZ6I
mRxU7tti/obMl7O51pM5Y834tKAnvecqG65Rypr2hMdaO1vv9qS2QFlpwODW
Bjb+VG/xVSP3tVKcEqY33IJFuS4LvpWy8UV2ZXMR0WW3x6J0W1eSr5umXTRj
caCdevuv9b/3i5rL+r79aMJSkz3ajkd4oJX6Sq66zkNqYH6okjcTZ7RTNKyN
BTiQSt94X50H86d7Ioc/MiCcrP71c7EQnYwquWWaXDhJl927e52ORN0ZJWmK
Ikx2yB3W7uGg5mjtxShZOvpRnndnTIi6tHw/8RcOfpbdLk3Uo+OL0e7JY75C
/E1RDZ+0mwu1GRsXnBmm4/UfwW5OngArd4RvUBzgglEm2XnvAgMzW879t2GQ
D+n3gfvk1vDQ+fl43tC8RgR3fT929CwfgrD2zzu286C+1sY1IKwRveVBapc0
+XgQx1yk5E767l3L2EVtxGGm0+fAjzycmZv8/ONpHuzno3XXdCbkHYJSy1/w
sGdN4c8konf9NQILA6J36Zm1519O4iP2uLx9wFEeMh8dLyziNeLJQyt9rXw+
pogTv+Wb8ZD85ru0tX0jRFkuItUAAeR+z/giKcND25ib1dgzBgKkJiSaWwjR
Hhd/ozeQC8vZPqvsVBlYFpI7q3eFCFsazu33o5D8qH3qpo+Yhvu/CuU1Pojw
dJ5c4C9N4ts1Rxv3/qQiedG5XFGOCDydzMByJw6Su/NSp6+kgV60V7/EVIS5
AVaxC99yEPXAxqmgmYZZlOcVsvlCBI4r8YSLuRi+GpuZe4+OPXsuVDMchYhX
GR554snFfQmz8VIpBpoiLSpq9woh73i++8hhLqJkmDX+0gxsrIp3+HpSiErv
/BNVpF+Tu0abBN/oyBjuObMmmPCA2udVE2y5CMxK7mbz6Ph82Eap4rIQwV4F
o9c3c+Fw5/7TjDY6vs9jjMZThSgRvXBUlCf791PeRp6iY7902S1lond94mrv
3UTvGl8WXJtA9G7rT6lC6i0RDrYNXgs/z8HR+3FNi5xoWDyw/3V3gwheP35K
XFbkQOd+xBalQSoezoxxmy8lRqv0AeeIi2y8u/kqTOsIFfr++eXbM0Tg3Igy
fniag8jLM7+/3EiD6eG0b2luIhSaD/vyH3HgobRFZcUDGhaytfuNJUXQ8Wxc
843HgYzvrz2HNOnYcWlTz/xaIUL1cjVmKXFxO0d+llEwHfmhlz9n9ZP+TnYf
OzSZC/kWB8kNDnTImszSeWAnQsFV7607X3AQG3U7WLmEBtdD6hOcy0WQu2L+
bYUeB65zH+gLpWiwNFo5coglgq2jRtnubjamH9bVaCmlYoXs2whHws8a510r
dQk/L9ib36VE+HlXm63ooooYS10+XTzhzMYDVXXDTVuoaEjNv/WC5BTeVmUl
CZJTfjV+e3qUScGaCZoP3M+JIbt04shaP6J3HogcO0VBWtFsZ2GKGNv4LrS7
i1gEn2ujXJdTELF2t35rtRgXXf5cnUQfAEHtpatdDXggFR1zX5r0Jczs6Vs2
qb+zQc46VTp6T1R1XXsrxJHPP6yTVLlw1DTrZ4fT0aLEC7weK0TIlmgXdTMu
pPZW/DJuoIN/1s01M57UM8/Q+7AJF0bi+evl39FxrnSRyqG5Iry+ttLiWwcH
o993Pjg2lY6eYxv25ZO5kDYoqc7U4CDCjxa7YIyKrQlxe4yMxMj7Fa87i+Sj
jhUu9VFTqPhIW3ZH/4QY3de25QfeZmGNQ1a5eRwFrzYYMxJJXr7ZJTCSPMHC
RV+ajxnJywfPb9T+mijGV7tdBljNQt/8iKPj+hSUXdx62+aDGK7jiTcM6gYw
7UbfNPO2BlhkrZw7kfgxyxyTiEjNAYSq2+R72Tcg6HTABJ8OMS4Y6mktPNOP
s6/Lvh5rrIfkljtSX4kfdtzjMcGmpg/LLRI2NGytxwJx2gFxghDDPrkzYwy5
mLpouWlmGR19RZ6Hgz2E+LGv7XaPMxf0R2/UjCczsHC2tEEtyWudMt175Ele
C67EZOcxOqTyP7CtSf31qivba0j9da5a5K27TMfy7c9PZxJ/3uDYuV2Z+PNp
x12zdIg/V/+Yu0FjlRgqy/96VixnQ91k5iG1uVT8umw34ccLMdbEmx2KHxlA
/8CcwOsTKDhsf85VtpX4sYqPJT/dB+Bs0LzxT3gDJGZPbYsneVnUNXfe5csD
WLDxY+HVlAZU5GiuDCXrQWnXO05FDSBP8tNG6YwG9DrTVnqT65w65vw4fusA
9JLXTHzs24DzbaUy+cSf1L0/OWiT1Q+/BXLv3Ufr0Wv01Fyb+LG2reALi/qg
fcZ4kSLqsbLtwRF74nOSnRmrLJf1wvS2zgMbtzocWpEwMCVZiPqglRJb13Kx
RiuieWsxHUUzPsf3nBViQUmo04ztXETbHZFawKZD/mtx94KXQuJLuyWHFnLh
M2yw8MstOsLCq7zjCa9WtRhyQHhVcMr7i4Dw6qC0Vm7CNxEmPnwkOfElG0rC
Tc1z71Ih82rRi+jHYsg4ZXrvncXCGQbddGgOBfKJS1rmE59W4/5q0X+W/bjh
t3b1sux6hH/67tFC7ss26dao/LU+vDttwjiiWo/GI5SiX2S/iW7LjhKpfmiv
N6dohNaDWl92Q47gymT+xZ0n4/pBv9ARls+uR9Pii0H+pG5WLeNl90v7YX0s
2Ik2pQFf2LJaV8h+1Wr9iF8n+zFQpnfkV0M9Zljy1Hnkdc006m8ZhvfhyyMb
dpFyPa6H/unq7xdD7nVR5T2bHmyetj9TTrYORzUpotaJIqQf+qrDEZG5e671
+fdSOmLTzlTGsoSY8Gy2vsQkLjZtswtL2klH3jKlV0mqIvSskLebReZ3yfRz
Z4qn0DF6ef6ZmLsiqD5euediKAerllJ2WTrQsMrd7ozJXDF2JYe7le1nQ97n
7kjxZiqGf9vaetAJj/16d11QMADrz1lbO6sbIJO9UdWb5PE59bKuc1z78B13
r6/9XYei7jvnZ5Lzz/Q+t9egsgfRwVz9fKM6RNCO7rLvFWNfelJM4MtelJoM
tmXfqYP6jok9/qQOG7QpJYYZffiWMtPCflU9Zh4fVPlN6p/ddNY/ldR/pUHD
3hmk/vN7bBqpZD1A9m7GVuV+1DtF3c+/Wo96vSvBg+Q6TfG6m/Uv9sGWNjdm
lRLJuSE7pWPIebpTXBKmn+uB0veztDL1Oswt1fWnZorwduxn0QlvDh6v8Zxr
akqD4H6cq3mACF+jZzu33uFAPCxlr3WZhqDhxAMcTxHux9etl3vAgUGj7Y6q
ezQELn9z4RHZH/H3on4M2b9ppsuhu+E0bG4oyZIiPJndnfVYZwEHs/48v3KF
+IfXnpJ/o2zE2Nx8HzMHWNh1ekvQpDYKakcViowIjyXe2BAnLT+AtX9ynJI3
N0BY7/C+idzXNN1PpeEEn0e9vx17S/D5lJ3bnkzqP7x22uQQ+z48vR3Lbf9S
h/2PaZ13/70fclNdW5TYh4L3A39NltYjyl50/QxZLwrYygp50Icc54fBVSvr
kT01QHo+WU/qzLhnUdoHCWXrzFTzepy5H7FtnKx/TreSWxLaB6ecjbNVFEhO
0bDrtiDz3nzj1NL61b1w2eqwMNqjDnddG84eFogg/KCubkZnY/dci4yJz6no
efxmdkyRCNzk44KlGzmYsSH27hkVGk6pzt4TbSbCDYmdQwrlHFzs2DGplEGD
w2KJWKNHQlz+ULHoxiqSL668m+CQRUf4qzef83YK0XTrQfACb+JXTQ2tpOUY
CFbYrC1RQHSNdbIxZBEXe40mRYru0qFqfjozj/g0lzmXuFv2cXCh5lTeVeLT
msKHP9gRnbpwN359pwIbPw23lTsSnTraad8dRXLQJPU1/ldJDnoWvPbuT0MK
sp6sirtD+HPX/dTJH8IHcEXLTX/kfgNyCpA9l8y11p7kiZ6x/eBbH+e7DtQj
ZPbJMwyCT7yvqrih1I+tpkGztQg+tzQbT6gkukOpN3MqaSZ9SbieNHk3wbOT
9wCb9NHsRJ1O9fo+dP/ySGkZqMPoYSHHSihCSN7wch0qG7Tm0+rzc6gYXLCl
XeOhCB0ho6te+nKQPjV34bAFDU4u94cD04XQt1hfarOGiyCG+cHUPDqGYka7
/G0F8Docb1c3lwfd995fc+oZsDTkOsiKeMhtz9bVOMlDxKlpKT9/NcLX+/Wv
NVdJjmqTNZ4ewcNGt50nw3cwkcFKj/7gzYfhEbWv23fwoNh19HhRTCMum+0w
5b4SIDezaU9+NxepR1h2bucYCD94yL9GTPi/baP7ll8cBDu7/0nbTMeTFlkn
KluE990Lh6Q6CU4qW1NbiqngDe8I0rlGcJ4sw43by4L+rC9vKI4UDLuEGYcQ
nfqqJDtt1eYBTA4LrbA53oCYDKMbDwnfpnbELCrJ7YfijXML/vysB35WN1uR
+nu8btf2Nu6Hd7Xyat2Meky16jwvphI8XHr7PF+Og4awYtt8ARXqoT+8tpG8
rOhxfttfkpcjjwVyuCQvP9Q1jzsuK8TL9xkjZfe5UJCf5VALBrJ3tkaLf/Ew
vK/bSMmHh8jN5xOufmqEdWdD8pZuDu5nSOQ6k3z3YtpPV9O/TThpw/TwKWfD
21P5Uh7JgxWxvxWtD7Tg0C57LYEjB4abtvWxPvAwNePF7NjUZgQfEqof6CX6
pxinb5THw121OUet+pk4fVdBs72Wj4QJf6ZI/Pv+8MBbvT+mjSjoE84eDBdi
7+MZOUstuWB9b2HUtdPxpuTYu1xSZ0kN/af2pM6vHl4dUnpNhUnYgTYJ4j9v
HZQWyPuzkKfMbK08TUGuy7fN64jPvDF4S/ckYwDJszMvNXc3YGTdzsMTSP17
tmh2Uw8P4KaZTiXvagOKqYq1j1pFOBZpH2Lyiw3Hv5f+yrURP9ztZexG+PDU
g3blCsKHHl3lZ38QPiwVm/a06ZFcIyt2zb7AhfrM+GtvtRhoHds0tH0JH+xj
x5QL3Hi4zTqV7FzbCMu6wT26Axw4K/5RsyP1NFhou8d0rAl3d/bYrAhno90+
SfEAyeOe0iqebg9b4KDqOBjexcaLA8uc9pA6f3m/YtVNwxacTz65V2ELFyYy
K20WvOOht3JCuehsE9SXItlmMR+3LketGyKvG6Qt3GlU1wjq2RCFD8MCLLsQ
tsYgn/hkZik10p6BB61eGrMCRQh+MRS/ntyX5aTRT38v0RD9fZXqK00xxs+9
qtLbxkZkBIlqa6noflut9tVbDIPjul/m32fBoD7im1ECBZvGC90UCc8E9Z96
nKrPwrtZypVjRhQ4yW2gKc8T42q0xN7pDmzUcssXpZpRYUE74xdJcseMbNtp
lVlsfJHxd8+NpWKvMCSzyluEGvVIjwspHHzZdShHEE/DF/6aew4rhBjcLLuC
dZULxY7ugjJtBk5VbzzRUcLHmRq1fuf1PNTke+r8smqENoMZeIXUpcLyhpxT
EA/Prdao/lZj4vZSiRsak/n4xYx4vp/k7stj6n/3kdy9ry7+zJM/fFg8cnFY
sJKHbYEF5hy5RtSsCCh4rkzm/S7319gdLsLWURZvMmLg0x/l2nnyIrx0sHk1
oY/o7Ifmw4rydNw7ZPpJupPoqe6cTxuG2fDk95VT6VRU9D2MW2Eohv+ltNCr
SmxQBkbf102lYo39MV83LzGiEncbhjxiITF2p0RbKgUKk935d2PF2FF3Nqln
Gwu7H5aIjG0oWFf6svc58d+JXAbtEbm/Z188nyoVNOFTzZoPUiTvlQQvnbmr
hodZB6JWvaM2w85QeWpRKBuf6+eaHSO4enX03iWprBaM3eAV/NVjQ1Ht5wPL
eoK3cx22f6e0okvit3yAKxv6nyr7PpD9ri9Wl3ynt6DVf6+nYRUb29xDNzwi
OIwrq//8dG8L3hgOcw4pczCcKyn+970+XvqXyOKhZmj/LinbZ83BS+NLU//9
XualbQhTOa8Zm7feTKU85qD84YjG+L/PHy3eUi+YNePLKfN1yWpcLHRPls8g
93XMrNtkJL8JVbs7f6be5CLiERYnVvFwL3NXhsTCJkidPFI1ZsPDu7W7U8Nu
kz6OVzByLjAxvyxwbOUtPnK8jSTSLXnw6UvaNte7EW3G07N2jQtw3j831fgZ
FyMn9qg1bmOgLvfAtc0LhAicrbjX9DoXIq2vFxpXM7BVxmfqPG0hFsYU7rx0
jYvZkisub1/BwLjL/oQTO4RYxDtvU+vDReYMo7j0mQxM8doxlpgqhEYZ7XuW
LuHVyDgVswI6ql/O6mkZF2L5m+PqzEEOUpRb7qeupIO92OuU+b//j4tJFAY3
cRBqn6D2fYyGiyvLzhY1CKHK/nv2pAIX/+VoOy/zpyN5a9nxz6MCnFwcUe2b
w8WjP6eH+TYMHO5wXx41UYDSs8n+vjo87E4aDvaRacRSx+funzUIrzr2hxu5
8/BZd8q+JmojOp9J/PCM58FWeqH+vMs8XGyiHp5pycTn1OoPFlk8HLhoX+wZ
xsMmwyGPtDVMeHLr/Que8yGS0jSTMudhglao6OrORqyVm5xdvFAI/6wi/spY
Ln7UKElR/2NgudtBGf58McId72fW7mDj3NyuogoT4rdnOM92NSB5f66F5OE5
bKR46wSGTqPid8naTxEOYqw4/q50F52FI0rV7sPvKah7MaWLT/j8hfvCa39O
sfDwbffUbl8KVBgWFnuSxHBPHaOO6bBgE/mgcZIuBaMBO/bF3xZDqrCdF2rM
wqW6O4X2oEDqXVTFkU1iPJwQdj/kBwuH8ka+XRISXxq9qqLogQglfhvHJ/tz
cGvDW6uRTTQwKb73K6yFGElrkdU/ycV+z7iJgwqEzyuKFEPnCiCjcFnrzBIe
FDKy3GVGGXjVqpraYsTHC7+JphsOkLnbp68RVtyIRHbW1gfL+LASLrHWIjx8
zlv4zuVDI/QKFfXl5wnQLiev2LmYB/2eJaK27wy8jbzn2BIihPSWpIU0kh9b
WaM773Lo2LbNcl9nNOHhtbv9h21ZcBqv9hneQYFvsdrjjINiLDSZPv7lBQs5
U4SdKtnE17Fs7W//R/LvrxWxu5aycaV1oPCvEhV1p7NTZsqLEemi+Ylzgo2K
NGes2EtF/Z2FX33HiU84MkQ3S2NjylsvPf1wKgxqVK+UfxZhhXb9T7e3bPSa
W14LTKfCtahsoleNCL077p34OZ8D05w/ock/qLjam95LVxchKnSG5N8WDho/
On2k/iF+OIbzrVhOiHivK3ENyVx0SJxp7V1PdCfoZvLVSQLEqnpN1ie4vaHi
bnJrRiOUXkleEXnx0bA75vdv4sfSP957sOxGI2wuzmZl5/Dhr5fhfYXgsE8v
eMHG3Y1oFt67k1EhwMYbcZk2bVz0umX2rAtkYIEHRV9GU4ToGXuXK5PzLJg7
1VhunOSXfW0iX+KT5XN6w6OJT9ZXMRuRJz753tS0XbbFIugnLvNwsyA82nXh
XYcyDSHLbV2/lwlxuy9VZDifi1eKStWD1+ig0G8trRQJ4BClvlChiIsVCwsD
Vu1lIF/2g733ZQGOzozY3D6Rh64UiWW6aQys2OLjZZ8oQPZgWfL2YS6uPe3O
X32TAX+X9sFnfAGSZt68sOs1F2dMa2P2OTHg8CbbIn+KEJs9dbI6H3Ixy2IJ
78FmBlgqc7uFpQLoVnlUTO0kPNb2ybYjiIHbiuM6W/cKUFyYppw9h4fAU51l
86oZaPLe3De6UYAFM/4aWs/j4VEQb/BpEwPWHoJv49UCbDnieFqjmYuJPeY5
2n4MmFnMW/yGIoTeW7FNvjwXzqsvqbw+TYfMY5nLagQPESvXsrsr2UjNKrnQ
+ICKL4ccFP5rEKFNe8J6NSUOrsyWVr/2mQrOmM8a2hshosvLzt/797+9oXfv
vYmg45owJH3VVgFWay1LnaHGg07167g1dAYyPXpGakt5qE9dwPQN4WEvR/XD
GS0m3qelz6r7ysWzaSsLbhJ+2u01ciiTwcRmu5T2URMemjZm6NETCX4s5D6q
xDFR5fpVdd0ePsQPSyOMHHgof34yfkdqIzivtFr0SF/MB58qTZjEw0jSlQuO
pC/O9+YpzJgjBO+ZROgrou/aA3mLphB9D/VmbJ+9TYinbeeu+fgSHl4RPHHu
bAY+3BJMnHFdiPuFu93egQue487C6Ho6OAqraU8VRDD5kb2/t4eD89/DpvHk
6HCcvzQ6uEME9RNfOhK+sWFyynvtlEYqdO0oFR+ukPxe7BKk68xC2qHvVz45
UyBe8ePGKZKDond4Rn0/yQHLVCdlI8lBH5tXVVFLheiYNMyfqU70hanMjI2i
w2Hf/WvuwQLUWn45yZtOcs2PdquRxwxsT3qvZi0mutvfqNZ8gvhDq89ewp+N
eLSmUm8NweVD9m4n9Sc8pJRvgc07JpR4OCtrzcOUsaqYNXd4WJAtO6QTzoTR
njHPX6/5WMyykL5F/JURxcnl9dZGGF/r6vPfLMSSG4dXU/24KHp0ucFpDgOv
QxfZr9gnwh4TO3HqMw74WXtlLLLI3P3+3nu2XITUN8ti2LocMJsDNj+RouHV
rIUmo8TPa/cVu2R2sHGf5yMdTHJTSaf53qkzxVj+2K4g148NZ3pR4tX9xC/F
MWVkCe/F18yg2xWyEFBvs9sxh4ITi5Muh5M8e22YEfTq2gDa050/F6c34IL+
uPtRMtc7b4wNapK5zux++jOVzLVI+Mld67IIyf57ON+jOLAwv5Dy30ka1DXT
5A/2CpHtsURSXoKLQ1uf3A5xpENyR+LsubOFaO/gH+xO4MIv60+ZkjEDMVFK
UfVBAniePm+0R4qHv3pvh92eMHBmVZPqrFgBnJmPKVd+cSF9r3TbvHsMrH6n
y+u8LETDVN6jkM1czCi4dOlsGx2d877tGyG8avu5Nyl7Hgcut41DfUaoED4e
iNx7SAwTOx21xGwWpg/katlnUrBoc355a6oYapEfQo4tZGHo/rXyw8uIrrlO
/1ifKIbikv2eSatZ2DZl3YEdaylY8DJXvC5UjKHlUFpP9HRTTtB7HaKn0Rek
g9KIzs6iPbF6cpqFB5q/kwNPUUBlf958oECML65SMRnfBzBtg+uMl38bMN2X
6aNHE4HJ2j51OsmbYwblRcokbyonFjcVjImwbYV+tuRTNjJWP9+lG00F7eDn
J5smi1HhFp1+5ybR/eV/o6sDqbitpXVXmi/CnRaXH/9+L7XLwSaBn09ygSbD
O65EhBxR2evZphzIjUQaSCrQsKQmM/gZWa+TChjpNCE+arVxYaM8DS8u6G34
qSBGWuTxnCPebMwL2HZbaRcVL2+qXF6VLkaiQuP3jRrEP0zZ7Xd1MQWTygIW
fW7797mDz/6Dff1wZ3K7KRoN8GS8C9hAcrf/0WIFm7p+5NZOC1gn14AnY8su
LCD50SnUYPgxyY+M9+ZbJHsaQG/ktmbaiJHlet26sZ+FDuqXRXWtFOwY6Lh7
7o8Imv+9X0q9z4a9pU3a2AUq3s6YariJrJ/JO7t/RwobBzyPTTl1kYqhoqhQ
n0ciFH2g+GYd56DadUv/SjMa7OabHXEi+Yimx3+xOpuN/d/MxxWvUxF+cf8L
E2MxhF2/Hu+VY+Omj68BJlBRVv3ba+8eMZiu1suPU1mQNQzfZviOgvmlTPb3
bWJoTkj+pMFn4XwP70REFwVWY1M7l5M8EtpvqHON5JExFRWbBpJHpGQsUxk7
xBANbbD27GShSq6CKsmgYEr+FZegGDE2aPjGhNqwcDEluSXVjuCtftI91ddi
tI6mXV3OH0DrnxJ53+EGrB2Yk+JD8kvHCSuNjdYscDl5zgkkv3ykZT9KJP3a
9PYIrH3YKFU5KGCTfl07sl8vaKcIQd7X55jlcdAla7d+zisa3k+3tTgdI4T7
JwnJz2ZcdMns+d1AocNP75HClDAhQm679ARv46KUMv2ZWj8di2KHblQR/9yX
WuXhRfwz++rxDyrEP39Jiqt9sEmEkzJD9vtLOFixRFscV0fD2cUOwsxcEdaP
9LpLOnIgQZP7ELSCht917e+fkHnkdkyIPUh8TpGawip54nMuvR/tvlggQnPt
p3UPthMcbooyVllAg/jSPIlNx0VQ6YyRyU7m4Lld/l23GzTkLZs+fVBXhNmM
E+rWNRx4O1R4nRugwdOmhPJTWwTHv12rWqkc3PNJ11L6TIPf3IUh3Lki/BGN
v77dwQF3d+m1Igk6Xkl7NSpWCPGg92RXFslJR14rCr5cocPyQ89rv7lCzBkI
/DJ8iwuzll+69gYM5HK3LOzfLYDGLoU2qPBQ8MNs+8r3DGzRiXqXW8dH9Tn5
tH/fW3slWLt3synJv8ucL1QuFsD15m/vCC2iDwuzNKI/MSDxZP8GnW4BaHVH
qa8ruRioPJrhe5CBOwkac/o/C3Du4N50uULiV/cPu2/ZzcCkwPi6MCkhpn1f
FpucxoXx8NHGaAuyvzlHkD4iwI7F285pPOfi3q9D1Kt2DMwyePhNLk6ApS1T
LjmMcXHSxebJxAQG0ibXXVFh8/H9naVdqB7Rpe+3rB8tbkR4VChf1YyP+mmU
lKp9POjRDbTVCxphu/FR7jcuyZMVCddUfXlocbldfe5vI5TdRNX1JTz8aJuW
l0t8RU7d18v2i5gY0TC8Js7gYWF8ld/SCzws2m9qJzBkIsZA5/3PZ0RH5y8b
CSQ5SOPSLoUekoMS/JYpl7bwUHFxwMPYnwfLCPOZkGVC0yRPumg3H3OKR9be
IX7Ds+/IwvtpjTgU90P7jZ8Alj70tdNkeUgztZg3lMXA3293tLIKBFjyuypT
po8LD1g5PQ5joGHK4TOmrgIM7t/x9h0R4/6GZ1Y2ZSQXTPvxeukXPvrevKQc
WM1D8XzDEH/VRsjWfW+868JHke2sV4a7eDDNmP9jcUIjknvkJFuCyDmk9O6Z
RP17PvDa4h/7mUgPeXupk/iYAukj1zKreVDfsGnfkFUTXizRnHEgloMnh1+G
bPnAw7dKC3GUSzOU3zPDLNU4eOQwI+Aeye+n1/s9qhY2Y4P7kHuxOQf/SV+K
XE7WJ0kOLlR404xTZ/YE3ZzKxcvR4P3/fn8t7l3B76Q0oXF9luJxK+LnprXF
NhFfkW8++9OxK0w8kCq/o9jAh4vm3q8hBIdXI3ubFUwaYfQk7U/5GiE+tEZn
6F3iYn6R9Z51i4meJqaXGaeKMNP340vOGQ4On2waCdxGQ6mep1FnkhAFGan/
HVnLxel95r1XiulgJmRtzl4mhPPvp4UtJL+vn8HrSib5PVDJ+EFmvAD+gqDd
p35woebJtl91h4H2ui/Bjkl85Fs+qBRs4mHXgtHWEY9GpM1/EP7mNA8mq2dK
vIjmwQcOyasOMvFu1YbNt2y5OLrVWWEGud9TFrkp1aebYG+eXVsTwUHbsq8S
jqSekZumztzv2QynZ80xH32Jz1hSNZhM1r0sVs3dfbEZnlq1dv6Ev9aEFG2Z
Q67zSGD2p/5MEx5utb2o943kB61tbp+P8SBcULJV61sjOhafi3wyS4i6NVVB
bklceOn8UrpkykBAvmx7Z4sIp2a8OjhnnI3+FWEHK9tJvu6ZaixJEcPcyfUj
pXQAK/YNrpze0ICT8071SPaKMadQoWpdTy88mlQOrs6sw1Ejs9c3C5pw5fmF
R07xFfg7lJSmTc59Q33qkeL3TOj7vU4sVK2G4fJ5YeHE//o8Vb/9XdwI15IA
730LPuDUu4G/ccTvLIg04B5vZUDLRO3PG4l69PTn6Op/IrmNGZTm/4OOwTMb
5wWdoEPvvvWhWa182A1vWSAuoGNj+BTbxiNMjN70Cd6wXYCpBeWHTBPpOHs0
N8gvuAkn3k0adzpLcouh/rn6Z3Qoj1iJ5tcw8ea4zHK3AwLI7+sxvMYl17+Z
vf6JB8k5Jz+lfB7mIzK7Y8Zq0mftowFnd4rqET/d/dOQFh9vprWIpxow0RPO
XfpE5T0uqWgM2ZZycTPs4Pszb5pg69gdds+6AvKbWlff8uLAK3kCvYjbinIL
x8cmvm+gcTBFgf2ThZTjbrvGKB0onJuiJ0Urg7/brQnVZUQPI/94WBA+8AtZ
0RagV4O2Bv2nasRHN12pb0/eTurTf/FR4WADPgjm7OK785E7JebEej4dajfn
9evtZOBJrN9v0RAf12WY0m8e0aErkyVf8ZOJ4zEnv23zFGD48KT9Vw/QsWSr
gc3Nrhb8OpXy3xuOAFahy1ZqPKCj8I2m1VHjdjRriyaPygixuPn99qPk+iUT
iigekztwddftO8smCxFssJlZe4MOs82uExWl2uGy0f3Kg5lCbLBbUhV3jI7/
XpVyswxbMDN9UduxOgFKLIztUph0bEuuEi//rxHzN4Q8VFIWYFLNF227HgbM
b2hU3xLUwfS/prkuhJdnXJV07G9kYsH/FJ15OFRtGMaVol2WVlIUJVkqSZS7
FEUpKaGFiDYRKkkqO0WLbFFKChURCtn3nVnsyzAzZjGWkiSV9L3fn45znXnf
5zzPff/u65o5x+l1FkZKca6go+2nBg/BDu9LKJ3NiPo2JOfIKcCTQxkvLndx
IDK09szJrjZkH75V4KpTAL+j7s9mP+7Dz9EUw4sdFKxZ4L/p8wAV+o3plUvm
Et08l65+7CoFmmIyugHfm/E6ZpOhZ4EAmpUKGiGRFJxVywy9sbwdJRrcjCKx
AVjox4x906Xiwfd6ibcpndg84PVMdYicv6hHtD2BCp05ukuUx7uRsuXg4L16
ktv/6mVxf1Mhf/TXYfnOHrjxFw6dyRDg8p6VssULaFjXVTgwtKUXTkzq4WVv
BfiR6yx9t56KwpU6ZkfpDFyPc9yfUCzAlMTFsJkbqYj+TNt9+VQntv8zjHIb
EWD5MvuxlbYULKjcLPXsfQtm5jnHxRHfFe/9s2T1VwqkGhNGKuZR0W1+7EEJ
8UUo+IxxqTRUWm2eeBVQiclLOzQHJPlQ0+HIy6Q2YVZfrcS53CL4MZ/84V/j
Qlzl3zOX6lYclZN4y7leAB2r/lqGKAdFT+T6lc5Q8D0w8OVUfAte/pqxs65L
gBUiUbHfVlORnxYqmCHZiTCTCBHPMQEePK6ZfiGXCpvOmJCNDgyY5rnM1qoU
wFtZ85DPQRrOdY3yzjT3wkbq1MpCNwEuBHbMSvtKw7/G4QueGUzYXFsd7vqz
H7qrKwKpN+kQ2/t+U9xpFoK2u7RXBPXjcwiD5pZAx1njj0q24SxkL3tFZZ7r
x1RnkSBrMx1SaXtFREVZGDdOicou6YdT8u3kvZI0XHav7FTd1YvB7898/BME
aEp5+Vh+DeGgafs9paU68TOtf+ISWf8yvS2bnO9TkCO1+e6c7024u7tDSo3w
x8XoVbXCr8j52pnldwpq8XX+jHHqsn5c8GnczJ7ThFXrRqyD1pTCxD86w1eY
h2MnT3u3DrXgW8KghcqbAtRrOWz4a8/B5E6d+b8OUDAQphKY79+K0NsSFj+m
D+CpT/bVHbupMPiXbrOsohP3ilbd7R4Q4PdQreAJg8xL5tWiC5t7MBVYY3A2
T4ADFH+OezDhMh6UxrYwwW9RlHliIMCh7JGK6yp0XHI6Xb37HxMfzy6JTKzs
R6TcYdXESjoUZ18/8KKAhdafi7YmG/cjGRs3Rm5qQvzK1c4lu9k467X1scME
H2eOR897P60J0YMRnr9E2CiPMc+et7Ifb49au0Wr09GuEjB7nTALddfsL6qU
96OytKbfrIHMhda5NFYrA60SdqZnST9L+c3wWO9MgfDrtkyD920IP9ZyKJHk
5Hra7gp8oeB9vFZa+yIqjidnlZjyyPXrOMbNW+i4Yto1+nVFBSoui3y3zOfh
wZnZ/+6UNkNjn2RghaAAi5mTMl1ckntiSyU23qBA+eSKzIGSZsw7a5U38FGA
8EmrEN0KCuQaXtw5+qIdTfqZzaGzBpD7VzNo/20qxg5fOii3qBuzVeYIf2wX
4B9jaUzRDyqMpX4uac3vwX5rs62/CIeZOLxx2v+chkiRdjkLYyaScjJdc7cK
0HIxKZa2i459XUtEHixlgRr1uzcsqx/BLg7uJ7vpGLnpfj+mnQWfOYeM/bf3
w26F9SrbfjpGs/avDuazoPt2WYTI5n4o/B6+OMuDDrfXH85csGJBWpIqpXqv
H4/FOqXrjGjoUntSv7auF+U5Tqff3xDgsfPx7bPUqMiSpM1bYdqJN52LNCS/
CXAyZ3Zx3lsKZoRu2TtMdFRETmdK11qAmHm7dh0zpMH1tGHscodqCN3nvfe/
ywdtwikjPr0Jg89OTtN4WQTcDPnR7sqF9rTr23zfU7DafBvlUDId/fSr3mEW
AtztltkZdISCX43WdVl6rQj+4FZg81OAR3WpD8eXUBG08s/39sYOlMgcXqw8
IcCd62pDq8KoCH3mIvo+uBvuJbpLD9AFsL1//1vlTyo2Csa32lT3QDNid6Al
qbP7xPufR3xoGH9xXjpqPRMHx53GqcTfY/9IlFuJ0fGmJona3cHE88PUnw49
pN8imrMMZem4+O5+9NkhJh7/ulz1it4Pg2uajiHdNPy9sOXbxxgmpqwcPR6K
CFAWlndYcjkNe6aJP5Qw7QX7Dv/e2jgBllbJMptMqXA9YHuxbkUXlvOCHojz
BJCVjLkv7UnBUjnPQytfNyNv1TODijQB2Eu01YYJj38IXujE1a6DzYJffbu0
+vFaKW/XP+km3HM2Dbbml8AmXIn1boyLAwk5jnl5FGz7eJQ7YzkdO/6GjHhA
gIRG0RO3iC/b5VP8J4gvFym6tzcSXw7ebMD4JE6FkkJ6+Z7kDqhYuukv+U3q
k6zq9z2cigUOgunzIruRv357XD5NgAL9vlODX6jQzDaz/x3Rg7i9f8oksgSg
HF925z3Jber6a5ofvOuF58HjGrP9BPgzcmJtTwANX27ZWOqoM6F/452EjhHx
a++r9+NJn8Se5RYYVPdi+derT6I8BEhXfRfSy6XizAVRKW/bHuQkjLV05gjA
e1CxJJusp0bv7saP4d24y/HQoJD1/FMsd75D+iF8R+7qzYR3bo8PZx0i/ZC8
eduRXyRnx1iuiqljN0MuQPDgSa4A38zenrs8lwqFd5cfPB6uR9Y/2fCXz/vx
6uZLK9soOvyVLJMPlJSB4ljslX2Oh1neIat5byjw+Ds4cKWTjkdBTlPZJBf9
kP4dfU2Xgo45n41mLW/D8f2Lsh7LDGAk9/5HBysqFm+Rriy17oJzqsE0b7YA
xlO7Q3XHqUQnXYPfFPWg6ZmWCp30YdwG2ajRcBpstuU9zN3FRPHhQWMZcr+E
16az9hXRYJuhqmvuxkTbzsw9KSsEoGlZa8e9pOH4VR/uzcNMvJvfJ1i6hfgg
famlyD8qTK6d//z8Ww/unioXWZkuQHnWI/pfHyp+uwx7dap1I0Qp6KhemwDD
WbeWrpCnYspv30TMrE589tVcPO+HAEbf89TmBxHfb7jnrvOtDfNVo3R+E76P
WdD4ajrJ99On5RqM6DajduTgyv3PyfoLbj+TmEmFyJVmq9hvDUgSm9mz+FM/
MmTbj25cS8ez0kefdU0roGam+25eDQ9SDMaS08TvVKd5SaQRvzubaea1n/hd
qtIuzvV8CjpNNZ+eDGjHz5fpOoOzBxD4a0VIZSq5v4f+pP5dx4DE4YKuOsJ7
z80H65Xe0qAV1lzWcZyJTSMLR9eokf1a9q1f6UMHwyIvw+08C+YSb5/V+vYj
Jfrp2PZUOq6KalwyfEH8Wu550+hpss69P5z4OnT4JKed0BBnIct5TgXyiI+b
GNskqdHgf6VqKjOwF62LC97KPBQgb+WF7kgHKipNwmTS33Vhlpii89UeARzC
Ymzn0yg4fkT5/VBxO3Z4rFpWIkLy3isRx5p9FIynntrk86EV3VfLEizmDOBt
49DWBsKB9sKpW63CmhCSlf/kjZcAJUdTVBcLU/Ek8tjtGr1G1CmO+CzL78fk
l7hiGp+GQs9vzM8alTiuJXggKsSHxHTddR9CKXicxhqLrWqCoCZ1NPUu4cDo
7aJvCkke8S/ViQxph+mnhbIRpJ5HbRc5xxKezIq8+IEx1o2d/Ve/PiM8uWrt
YvEv72lYuqhGtfI0E38W66jZKAswd44rzPPoWFOoWx2axoLml7Hn0cdIPip+
WzZXswlvfEe/zN/HxmMRB8UPP/jY3bTljBOFjqTAKrm71Syc+nc8Ks+gH2ve
zJtl+YIGv3fHlZIOMmHPFvPnagpQlbvMUCyAiuk15txDu7rRPjeZatJKOGQ4
0jGzhIJN0/nvEdGOrIPlRivI+gcsl52YbkmBw+ACy+I5rXD9KqKSPSyAS/Sm
x/deU3CwvCDst0gTPoYndJw/L8DNlog3F0WoyPzVmZeW24AvtXeuWnzoR7ey
yT4pJg2OPYEbzphUIiFcOrpQhA/7GWG2Uy0UjN7YOy1tPg1v3xknyokLsPqT
26loawoW0gSNF6ta8PFvcM0iMtdco2iJbTJU9CwplFnM74Ctil9l17gA0bvz
ZorSqOi/OMenb5CBVQ4J2buLBJBxCRH9/33W4UDnsygmGK8NOf+/zzrhw2zB
e5Jn9c5oVF7MZ+GlxvEDlw8Snb+1LUuMRYeBqwnVpYeFAbcPk41E/6OKHVkO
QnQ8iC5Yb1hFOOHdz0vaA/14vu5Nj24eFYycm5dHLzOw/Yj33vEKAeznLE3Y
OEDBlbhcg6uzOpB862pEH+HASZFt146Rfb2pnXl1cW0L9njO7g0m+zpdtz2x
7zMF1Q16rh0b6IiYvjk8T0+Ac53MBX8JNz6pGXy5TLwemjurG3dd6ofQ3cQ5
fap0pEdQrhZpVmCRU2uTdSkP583DDwqTnFJus7kwMqAG7K/P5cwb+bCyN1SZ
LqDg94eTLXb7qcho2RTw+Gs/mA+Y3crBFDhTvfQ15jQj0yj0oFqEADVLE4sW
+ZP6f79Gq+1vQ1i5zl8niQFcWVQ+uMODiscZa9eJT3WR/FGz4HuHAJ7Ppj91
s6Ah8PPR83LDvdh2RucWy0mA+bGxcYcW0WGUyqzSZTFRm2lan9vRD6XfLge2
VdIwL0ujZvw28f0xkd0blxK/viYY+VVNxbta3RTJQgZ+ZM5yKygRQGeJxc3A
CTJ3bZ80d2zswKkkP5s0IcLVLl0ehwl/xi14ez5CpgU8hnxHWDnxu7+HblT1
UpCi1XIz4y0VLyYuOXf/68dZjxWTi0lee8O6UdmqW4P1Oe1KQ/l8GJWEcHcw
6VBaHBw7lF8K30eXtvms42Hxvdagq3/p+HNueoX/0VLIH6qWWC/Gg6yxsaF0
Jg3fvZ+0SX+rRLltdU2pCh8KjKa3lv5U7Nztau67tg5tfcIH7xMO/MQW1u3i
UrAsd8tINNGzLUtU38v/6McAoV+BBwXmm5SWHv3QjFSXN9NZxEfS/wrG3P5/
n4D0t8VzfDrwZE/n88OTAvReajnSRfT5AYc7dEWJgWyGiHsF0ef3k5ZH+wif
S714ZSvSyUCymEerNuFz084ff7PPkH4o3KzTf6sL9PTBiV4m6bcLAY6zSO5b
1HDHRRDYhsqyiY3JSwbwKWysh0Hmuq3H4XKScBPGjEpbWs4J4JX6esPDlUQ3
KI2LjcLqkbZH4X53MNF5fQ8DnU10aOzvvFm3vgKqq6um3It4SPPTvLBhqglR
aU8GvkoVonJW/C4hbS6Y46Fxm84MIEXigESjNQ/GVz5UyM2gwuntqVQTwr8Z
d2fs/jCHj+qMrZ+y31ARkVcp1uJH+t12zcyD+/kIWHsrY6c7DcfMD9TG3uET
nbea00l4d8uyxH3CFmRuqubEGszhYZNX5JmOcnJ+QSvbrLoJ40+2+BYocnDM
oIr5//N47Ywq3tovboVFk/uTvEg29u3r33ElhVzPo0XhizPxw33Pdp7gsMDb
Ffvt6GM+XBNZsp+TOsBj6l05JsnGnDlF/7ZE8/Fk9vZnDDPCxYzP79/J9uGS
mf3z48V8zDCgqy/2a4PGzqISuUkOyrYMZPz/PGcfZvTVKfEWPGmdTS87zIeF
Qv3r5nA+eEb1a4zu0GGWPZE495YAPTpCAeOiZJ0PddKWJFIhkf32cjdzAIcu
VYf/Jfnz+7+T4ufMKbjNlpVp1BzCb9lvFgXLOPB6mLI5a3YDwi1W7NCePYS0
2DU2L/w46HBB1lyHBqxsNvdK/zOImHfFridfc9D1QadvNLABtve2PvryexBL
B99FKSRy4LmkTj3sbgNqaPLiqlWD2PBT6ZDPSi5WFU5pL51owKnueKWRvwM4
V7JEUPiFC1vr1KceqhQUG5i7bib8uCzpdV9BNw+igQktbp5UTHgvO2+7ieS/
6/6CudZ8FDBsGMxCGiR+v1rQxuUh70notpRUPmKVwzQLuug4X1PXX72FB+X3
c25bkPs4oDpZtIP4ttQtRVPqDR5UkyzGHpTxETiW/HTbzibc1HvgvfQVH2lz
qrad8ObjpEHeyPNtdJQ6KNjW/+97T6/MS1/Fx+tTOfKNvVTIjl1i518awP28
Pe9aLHhYvfe8XutvCqS2z9QoaR3Cilef58/azMaxGJR8tq6D994yt+aWIfz0
4NQ1XyH+W6ozIRZah5kSr+OXtA3B+9eiGGtpNnJ4DXezjOtQWCly5kjnEKx2
T4U3aLGILhqc2fKyFuOUnWJajCG4XJA5Iu5EdI9a871DpBZ7rLyFP3UPQWPL
1W9fQ5lIXFVmoSRfi6sPnt1/R67fln67cd13FjKnCU4uVauDaQRXVchiCEHM
e7mcuj6EH1SYRi+tx8QxhdQom0E4y7dqfU3gYlRVZe22+EbYcy76dfwR4FSL
WYJJMg/PeeZDXQeomHF1p/oRGQEMHivSRNfyUd+8KOQm4Wb+/liK0GIBDjd7
HQ1ex4fmuzsM7h+iI58pk/PLCLfenayiNPNQVpYa3HSVityIV592RQ3g82tu
Xfk2Huy8LD5PER5KvxicNkDqqT5RfeD9WjZOsVpfSpnXYdZwuN2GnCHYLft7
6+QAGw/GDg5e/lFH6jH1YsPrIfjt08/TW9aHFate+iusqoeMVJnHG/oQGhRM
U3emsPFyfegTZn4dIi7Prh3sGMK6D5yOdWYsqNy8Z1+fVQveF1/GnZ4hjFTo
2ZtLMbHah2twt7QG9qCsCe4dQuSDAqdTkb0oEB6qaLlXA0qoXKhb1xAUT22Q
XC5g4vo9/ewAu1pI3xac+ZA8BOUXESdeifahMil547KF9fCb/vrkRPMgtr2p
8VL+x8G5TOv5CZ0NWN9lKdRdP4DzX5TLYyR4yAg49f7+FQq2nLRm+usN4GOb
x/v313lI2Ce0epU0Ffo9j1LCLwxg/4J3G9ac4GHhS+/ivf8oCHZiH/81ZxAK
N21eanG5mNmVUSEnQ0H7M/Ome4+GMF098umBvX3wUx1wlTCqR8CxhBLbmUOw
11ye8/I+B5FF3UI7rzQgbo/aOQ3vQaicS7VqfcDFNo+N+/KuNUKXs+pPo/Ig
WjXL1+k0cLEvqdh3cLgRYjPyvjNuDuLHzH3F+Y+5iMOhq7q3GuERWRbQPT4I
b/PdSE/j4IW/T+Cexw3IdGfFm58ifV7TN3qqqA/0Q03ZF7LroRNtWHXaZwjc
stwfvuf7ID/zk4zp+XoMzVb7ce/QEBbf0LTI7e2Dvt/9SVZzPRqmmJON7YP4
VjyirDzOgTl9JNKV3oDgU/Va2esGcaFrQeItChdh16526o824mO8ot3K9AGU
nNUp7FHkQavJUDsqhvTb3AOSAlL/pq4yzVBS/8f7GwxukvoXHU/WyHAZxMLO
CgXlGC5aflbOfBjciPbrrgc1Nw2hg1ef7rOGg/Cvalv8JRtg5p60w8dpEOct
ok3vPOOiOqzJce6jRsgvHn4tv3gA93YWLJZ5woPhnPuPTmpT8V7foFGC34/d
ASdFqzfzcdRinuqyNTRYXL5QaLKlHwrdR2FhxcetfadkrfJpqFa+TL1MOG6j
sc9FBeIDXi8mLivep8FwxrMXG/cLsKggu71Rmo/Dz36GmjUSXjslZf16SoCP
wk8tDN7yIKd4sZdjRMXclhhJo/MDCD2bn7PoJA8pRtb+IUKkr76ldx+6OoCF
zBO/Dhwh89g201hlhAKbGXMv7jo2gEW6Tc16F3jI+VNnsmM+FRvdPud6nx6A
5XyJ8xU2PDT8inwgQjje+vm+lb6VA9C+P+/njiU8lDfIhnp6UrDtoFyd4Okg
dkrKZZne5GLFpUMb15g0IsdzwcpGlSHIqQdZt6tykBob7P9FpgFnHOPbzpPz
Z3lFDn8g5/vPsk/tIOeHpybfHD05gK7UxE3WdqSe7vcpgbOoSJE5qfGG8PXu
ty9ODm3iwyky/4ioHA27IkPKbFxJbvDOMpx5n48DuUu9LM/QYXxu5aBVHg93
gvV82nL4WDmPaicr1AQ7Q7592zceLHgrQ+uT+bD+4XbxGo2OVRls0dIXfLyv
dmxa68NHYsZFjsd2OuhjkntmnOsHRdbzjYspH1reJ0TqQmlYZ30g+4CUAPqm
e4q/Ez3slPjgeOIvFZ9XKPqMvhbgZ0jPOsoAD/G8+zbC96hYESXyNFtlAIxd
a3axAnhw8zthVK5ExdhO/Y2rOQNYv+xP8ZNpPDzyioioNaXg1+mazXqVg/Dq
/O6YLEfmNPnEV7HfDSg/fg4Lrg/hxPJjOuK+ffhCLV3h5VUPr8ujGya2DuGf
1PmT05dwcM0m5e020QYk6D8xNRwcxMegaNXWWg5kFj5NmHzXAGbcV5NzRoNI
aDjzgJnFxfrj9rLdpY1YfDGuwG/TADZQHmy29iV61ZtvdkaRinXjr2xebhMg
S8nrijDxzT3l1kttGFQEuQ0HGX7sh2Hnm5XfwMcF/fWbYg7RYH7UffRwLskT
sdqmd3T5aDUr2H7ZiAZRiWE759kkH3T7et5X5uPSXBOptyI09FIXOSj7CLDd
pXOp1gw+7n9/E+4ZT64fuiJbMJfk9ajvK8Jf8LClTm7Vg11UpJp060h/GIDv
1lH6s7U8+Df/OD3zGQWTt1puziZ6NZEt+dc8jAv6ozjPC7cbcTUpvUVvEfGd
FUmK585z4H9Cl2txmPDPqTFDzfIhXIiX2CrXyIbz7JgjuV11sL1ReOr/35P6
LNCn2QezcaG9zGLaqzowZkilxBH/lZlur8b4wYLYfGv/tRvr0Bd+aeYPcrzv
FjIrSU6c6ezrHLayDiGHy9JyqUOo6494W/mBjefRz1b+K67DRJJat5jTEFr2
NHqte9IH5+rTMz4Rjo54ZMV5KD6EWY4uDZIuHAT9clsLywaE1lZp6zQOonD6
PvFfC7j4NZmiNlvQAL80GT+1sEHsiOtfl+nNRfnTDWWXTjYi1X6de+OFQWS8
kmj/8oKLn4pBr99GNuKbfVNg4qNBrGo3N7vvy4WByaN1U9aN6NXxHf5F+m3P
HvPwScJ1tQq5YYGE61awNNbdWDCEzqVJ8qbupK9E1elt1g1ITbP4JeU4hMa0
Bx1XY/qwUXNOQ31EPQ50pr9KyRzC1085zoIxNqLbnzya+68ORleUt70hvj9f
29C5ZxsbP0O1r3yxI37t8ZydSTjHnKI9A4+ZpK8W3LcnnMNQ3h7PYg+B+urw
hshSkqMtbkmXtleDckX0jziFcNe+sMyIP11QHBvoPLGuGhIBeTrnyfUV22N6
+o93Y1nHrMslxtWQOqFiE8Yi64+yzw+90YOvU/coF2VrMJZbfN6ZfG7pzGLV
7NdMmCzzcr2mXot9/vsz0sh1jHdsqqZvZUPXKKrY+kwdbhiOTNckPltFqfeS
3NeHVyvUw6qIz7r3engnnibXWfzl19PsPswdXbTB8kM9jqayLlcSXxtcd71b
lfhaMuPLuC3xtTXL/J9GWQ1ht1Bs1OV8clx/wr7wYz0mS2yTEn2HcKXzZ0mg
PfHHdlG1GPt6HFlE4X6THgI71D8814KDMyMfGyV2N+DkjswBH70hSIwffGY4
1QePHw9Ns0bqIWxsaJeSNoT7ZQWn90+xcTqrQxApWo/21T+y8gl/ZknYS/yS
ZuHoSIm4XnAtVl1hT4wxh7Ajn+tjSO3Bl+Mrxx1RA7F/Rpumc4Ywzr7wM3YN
A2aRExIvnlUTnu4TY5L74qdLd3ItY6BBS+zHoo5qiL6TKvIjfKUaOXVqmiQT
rax3DL+SGjBeU6f///s14y8XOpmpLJRpNsVI/6lFdydDXOPlENb8sjTSXtWH
ehNu/i3FesTGGAWfPDKEYk9ac0Ur4YcTew1z6+vRskQ64pz8EF7PqngUbkhy
W6LMrr1byPze+iuaN3+IzHfClJgHBzeNh9odbRrgFTyqdFuKzLsE54TGRQ6M
NdV4k6YNiP5YoLWMNQDvwd3KNJKb8h9b+YmT3PRFZt7iUd8BuB1h1zH38nDj
mpbnhk4KaM/vTsX7DSDmsu09a3JceLeO1+YOCgRj6p27vw1APLDlyLQJLkbs
DXJMdlKQ+M57frPfIG77j0Wph3DhWrLqw0vnRrxOClteWk/md2fKVUcJLu6e
0HikOtSANdO2JwQ2DWLc4JNyyHQu9q9xc89hNODvvuPFo+8HcUPYtu/9cS5Y
554G/FZphI2T52HawUGcvvf7S2ImF+p+5bkJ+Y04qXA3bWPrAN7kPqyonsvD
Xq2LthfPUrD0o1JZaMwABgq3q1hu5WHXtZnrzHIJF8X7zPjuOQDj39YOfw/w
8DplQn8mh4Jn8stPeZL9fqr5U3aT7PdJVEvPBbJf10m5byL5AyjeqiLHl+Xh
3+3hY7rBFOiVn00NjhJAtda8M3qM5Kagtg8uYVS4rRvcaKrZDykfqZjlhHM0
ZCwjvPNo+Ew3Ou3awcOwaHL/q3Q+8r1vjx/n0dFzUF0kiXDndH7HZEgFH8/E
5YNNJJphG27WmEf8j2HkanyP5OVbrZafpTnN2JO4yX7q/98h9BZw31ST/Pjx
sKzS8Ra8XNa8Oj2Qg/z9jKT/n2PjMRomvTiuBQO+nsrLSe4N9zQ3+v/3dJMx
rkHXX7cgcSD2YF8RB7aaZzf8/5xY2Z8Jj31OtKBr6O+3EWku3KKvuz0ln3ve
pmGPymAz5F9KibM/cLHhR9lW9v/Pt7EumHdpSzO8stpTOY48xEwb3JNBcuht
RvG9ioNN+HtSbNq4NvGzp843jWL4oDh19tIf03HVbPJiH6lPu9/m5p+n+GAm
SKvNJPUJyrrlouwowOgfs78PJfnYGqSRtTudiqLGaeaf7/AR4v/SpekuH0EZ
2mmD5nSsf7wmVleBi+/Gmbw7ZJ12nvJ8em8zggt+V+6sZGOp4S6v85mET+gc
LXnZdki9Oqqw+DMTGksWzvU9y8dp6TD3teldmP/m4NvHwT1Qp6/izZngQdNU
rlNrvAfhKz6FZlC7MXvxwfh373k4VtvoK+PLxPCdPdErznejLj/+/PJnPChJ
aYtcLWHi64w9FcUWDLhsuf3Ht5yHac3y86ZvYsJw3bjcndW98Cz+ce2BOB+u
w/9alu7qwZr6Y9OP1jNRprTF+OgFPj5oVw/FPeyCtWpM4uajbKzdVHD6Uzwf
Fh4BCR2cdlxqP+ttP5eDcTE/dmktH+uLL9HKtrairTJnY8sIFw5b68rWkPti
c0xtly2/CSFe6T/sU2iY1rh87aLZVWioXp4cTnj87YmwliXX6TirtF8/U6Mc
62ZbbM4jvDNdplw3SJWOPefbRoS1KvDRe2d0aikPWc1r4+ycqBg1jL364EYd
tLue/Lq+tx/2Lq1GvecpmKMY5f7ufAuCIqUW5tAE6PPWE3nzi4q2xV7xEk09
CNbixlRkCNDwY1bcyp9NOHHf6U7yJBv+I/Rfcsf4MKvfoqht1IZAr+aKF8Tf
j2+vV2Dd5kB7u2vFH04HZoRypRWHuLhERNnRjw1WN11+dkMnhv1jloDka+Yf
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
udJNsP9d89VyLRtZSlf+uM/px+Igsa2D01uxNeKh+kNjDnI2hUXNC+Pi6G+D
Rx8rSS6LF/076z4X/AUb+5mn+vBu7NDX032dMLuXfyV5Jw+JYs+fbSpjIfzA
NqF/pxkwGDhkzSO5+8COklVLVZiQv+utveN5Lyw3RV5VVuTDcN9TqbJUBtJk
qt3jlzDxutsyIUCXj5kMH5GuaQzsHP71S2hVLwzFxQ5MLOTj086SLj39Huzl
NzL39DPgOHuJ1HOSB3qN9BUHcnqRpVWXqXeqG3ce6X/eG8NDyALRe0NVTHiu
suo7SObAcpbCui1/uLBQ+OojZEv0c8DA9YegFeH5PP11bA42DdzrkaonnFvp
UGZh0AzpMnr2C7U+FJ/t0egXJ7xxs3rxLXM6LIJkWm9uZmHholXebgn9cDXJ
MqTvaAFLybGxltT/7tcl22u28zA666bJwqsd+Ejd3PSykgtOgC82d7Kh7V67
fhetG+aXv4SXvufh6IavPlU+TGjKvtddVNgDA7e3rgFCJPc9fdErlNsDj4Px
pqvVmdAeFDwoMeDDefmKfseqbnQrM9YfJ7xW2K3SI3SHD/vc0H059zvRIHzo
he8lNtTmXvu0J5GPoKg4y1u5JCeuvXf6sg8buz9+svd4S3yN11y4P7wdr4v2
Rt6JZcEs8xx7jOSjsz9VE1VXd2J8qG2fe1Yvduhnq+9Yz0d/CPJ6QxlQ8c5i
x2/pwpGsWfX/TvBQUFvzMNuPBc9F6w/aVbRC9drn669qiX4vWhHweJCDIbiW
Gl5rQtHtCwoJxFdn2d44WVDGx5f45SFHy2j4YLZZz+omExXHW409lgvQvTn5
vcJkK+q/PpvZNczByZw7Qg75xK/dnUQW/+uC1AT/q9s9HqyOOHSICbEwEW/9
UW9rL05q/F3HJHp4Rb6wNEipB71Ns21lXvfi6KoKztq1pJ6df4XKkhioPkoX
61HvxRku3bhBko9yubo/azf2wG/j4k8fxZjQE7/P6Sb5f4NndmupFAMrhw+n
zvrKgsi++arcMD7oHx6FyEZ0QDIv7G+gOgcivnq9R/9/b7Ir/a/rnFYsMn1i
kqjCxcwdWkLn/n+P3oO/60NbmnE/+BxLmtuHxxLyJhokV+Lr/kZPkjcTyizC
qzOZOLGvaHe+PR/1cWdodrldcDHpmndoZydGSiMzbs3hgWG47Y0Y2Hih9fl6
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
eZ2UqOA/cUCGMA==
   "], {{0, 0}, {14, 210}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.899964282011716*^9, 3.899964319153364*^9}, {
   3.899964351200427*^9, 3.899964395925502*^9}, 3.8999893862116885`*^9, 
   3.899990807081001*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"addef975-8970-4175-aa3d-62da4bd22259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"activations3", "=", 
   RowBox[{"NetMeasurements", "[", 
    RowBox[{"tdNet", ",", "testData", ",", 
     RowBox[{"NetPort", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "\"\<Output\>\""}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{"activations1", ",", "3"}], "]"}], "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8999908557758665`*^9, 3.8999909259836245`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"abf9c285-1de1-4fcc-87e1-3bf0e54b312a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
P+ylP9ULEjoVz2IXc+CurqDn6Nhe0gcUY+v24HPa/KuO6YTcB05lo1/b4O0S
9ZdyX1tRL805//0eruPlE0fFrCa4mgDHL+Q3QojyeanpEs2o94oCHfU6sI48
m5WyeyBDramrZKgX63+v7s9gDpnbOlJazUY/ZXVWYyOL9KMufPzAQjw8VBG7
uxcMlk6IGMF6H//hmP91ZS78NBu9fvkkBz87Dn29wAaHqAslT190g9ILNZ1A
v04wTSnyH13aDstWmazRW9AGVV/ue58/1ALvJtZsuBfbCLLBQu/m0w0g7H5t
v+1WE4gVBnjofe2A0vUGD+J1WPBHoekPs4JD3tewq43hQHjw/dWFO3qxPqM2
bzToRd3Our3vLAdUBLvvTLPlwa37csm1qnys/33J3O88uHDtQl9OGRe8Jn7q
3+XXC6JT0uL6QT1weEc9Z/m4Lph9SjChwbSDzLFWyti3gfZ2pjS/rRnueX6t
jX7WAL7fHIsWqDTAd4M0qZ6RJlDqviU7sqUTkiPGpm8xZEHnwk+Xyp/2Ehx8
VpLfi3h3vCFzZS/RT9ENjb1kXm8VvOJCR+f9916pfGjI+LSjVA9xMWRHPV9T
gLptv4XRK1y30vLrlqaIe8cKZ+bhczu9nbS6/kkXaFwbTTqh1gnuC846lc1o
A+EiY8Ms5WbSp5b44tgA7q1Sd/eeaYB5gUmfj89rgcSvuwr/5HTCgz+/LA69
6SHnUtH3V7Bh6qwffy4WsGBJb4z0pBgW6otAlRl+bIgR/PjEVHJga/PlPLdo
HvFJT3KwThdsfzK6Fnkk7LLWjtHLPHhHr79usJoDft+yfuzwZ8FKtbhYC+Vu
8r6R+2nzTgiXiNwQGtKKus66of5jE9Zb0K3Hvg0w6edcnYVejaT/x8nY04q+
oXvtWKoTNtwNGc5c1UPet3sZf7cHLq986TvpXTd0R75bbHyqG/VdtsnjgB6Q
EvlmfjrARh4KKvCRQ9xwDU57/BB5sOaNiG3FQ515/VOQMxfGclTkQnb1Yp2o
zR8znYVxv/BGSq8batn7ehPWY/xaY0qOXWxFHUDNKb7YTPotR4sLMe9St1M7
IpqgtWjK35DWNkh17zq3ybMLTHTVLTWGumHm/tFwzc5u3G/1gS1a3WDKNbMt
7OyC9Xo1h3Mud0O/1uNDDS098OHewDttXTaYpGycXZvXi/ljUVhmwYF3R29F
j03tRZ032ddtFRtxuWS44mIPZL82PgZY93uq5WW6dmMdmy73n13VBrr9jn9t
9FqJ3pR+394Adi+zZXplmiG0wZY/LrkdtBTOJsq+7oJz1nGP77gjPm/1z2wp
6EFceOwre6UH9cC7DovLPaBF/T6QWN6DerKkIBDjcVfXRnTzDQv59M8AP4sN
ldkqgSVsNuo2NafXzmxwtzGKrNzKgq/SQdMbENeXK80Ra5zdDUl7LxkPcTtR
V9lLc7M7YMoni5Wa2u3Ej4z7ktAAgdLrp+5OacL8iy3mT21H3Nl8XpDWBce7
017XFfWA9c0ZfzTE2ZhX2s8vfmFjfI8dotx6IfescpTUhl70BV3i+0fYoLzo
ptTlYTbhxeWNUoiTpeObWzLZ0F3TmJnJYuHznC/07eqB+x9/O6cNkX0487RI
vxuCPmRHOm3vAqstq17WHOjE52J5NB7ugEt1HnmPa7/Dz3o5zaEljTDjyeKp
W+pbyHmF3d2NncQXcrdzu9GvztuRvogNJxdtePZMiwOP+QFXjUO4sHn1XyWb
Si5M2aHT6bQT9ZN9wsueZg60Nvw4VbCAg35H4eWj+b3489t2MOPYsMlLVPKP
6sHra26+O64H67/1VfT6buRZM9c34V1Q3LenfGYR5v3ykiXmYzqJrpv15s03
aL/M0Z6x+Dt4vdq2cNqKRuQ/F70VP1uwvgq2Xj3Xib6weGfXvB548Xbm1JQI
Nrh8UdlUsZIDn+cJPP2QtyIzZSd0JHLxOps7l6HOObr78GP/hxzQkDrmmZjc
i755+sFgrPNJmbOyPBeyYIamd+dKhR7wt5iptlOjG6ad+xMWs66L+OuWhUmd
mLd2LX5FHZiHy9cszvgKq+/A/d/SXwkeBi6w+goSZWyOYOJ3GD5t5y+PdeMZ
vqjG9XkbnDHztMoVduL1X5UmNHWjf0h0jQ5jQW34kajwADbitGw1V8gGO9vp
67zvsWHdmNjounls1NUDba7eLDh8Yp+StUcP4teQuKR/N2hW+j53Od8FXZFX
xmzr6UQ9aDczAHVU6Xrd980TOtD3OA1/TfkCy5TmaB8cXw9xF6r0ej9+glWb
tsqLnfmE+s51yOjcZ6iaM3Gt9sIvcDJ1Y0L8xG8we5p25Dw+yVvnR3sjWkBi
Y9VQlVIH4vZuSVq2C3VAtbVaVxcMhE3c3WPTDe3q3wfNjLvJXGJX37cuMl+1
J8O2C+b9k7r/6XUn6vTvy+q2Ir7skbRJ3NUBn74VH/iA9SGxcWdOoHYv9KnW
zzGZ1IvXeR1w7C8bdarjtj8ShLfObYmY3gsjayJnTpPvhVD16dVFD9lwiRru
SpBhg+a2zGw/DRY+r3B+0aIemNYk38cK6oYCvb3v1z7rwjy7Gyxr3QWC7n7T
eM0uOBCp8cNTrovwm3+BWhfqD591sZldMMvFApad7ka/cGQ85PQAlXrjsw7y
gN7co0GBDBuGV+rHlb1gI/8smphyhU30d+PGODZUzxGt0T/Jhqr8vZbSi9nk
PPTeTDMW8sHTAArrJpU5bZsa3YV6xV5J9XIn4lVUYMTKTnLeuVp1CfJB56oD
d606ib60/+jbSeYqrmYZoG6zzXpyuLUD+fhpmZRmJzQYfLTpQF1cv6/iQV1Y
Nzm/jg6r7YEAnWKF9PtsMP+h9rPqGBt5XH53yCE26tAh8/n47zfSvV/LtbDB
k73FSXiGDaKs3rdHIzCPdoREKPC6UTfLmn4r6yLvK1gv39wFkU7jVapSu8gc
rrT22G4IPJDsykZ82zA1cLzoHdGJJlUTBjqhOXdlbC7dAQ/XdZmDVQfyhuYb
wXZ8nuAUBd/CLozb6CkdaaJ77+1xPM6GjEtKGqyjbLipuLZCugH/rnZwYOPJ
XvSx0fQ0FQ7myXeF4Ckcwv/rX9n0QmmztbqSCxvKJENKNo5lY92enhp6kY36
fF7GsgO98EjjZOFU5At1rfbk54q9IKvOde17i3ym/ODyCcQ9g6WTXXSwXu+m
jE3r3NcJV2ZYeG4o7ATu3zNKXfe74KTcvvPSn7rJfKXVNqyzXJXIU9t/sFEf
dXOLXvXC4LaMGLkhDpn33ZEvwUP+Uomas5MHR/82hy3X48GK76fEL41w4XzJ
fWmPMB44Cpny7agHlit1Wlw/IkBfvpd3Y5GA3Kdt4AMP7srcDVtQzyFzp07H
APPozES3KvUekFae/YWvTuKsNGbB9G5o8nCICL/UDaUBuzw1kPc3ff6sbr+w
F7p59nNSPvaS97GrsrW4UJHWPCelgwdqLQcbJSwEmJ+i6cMfBciXAWGO9eQ9
tKtcvzFCjK/nfIeXQlBYuCTq/hUK9hp46t2hKThtFB5L5jQd9N++mXxIAL2f
upvun0WdsPNZ93Z5Dpn3G6hRYMNOurTYB/F629WX1z6c60H992z6yNUeGKzc
aajb0YP54CbvUtJL5jx/yBRzkMfENmgF85APf4rVuJH36L4FGjcI4cepM7yj
qhTqgYrsSgny/phszYuvQtRZ9NhlUuTcIEl0aS4Fqzoeqc8eJvOPO8x3bxCi
rvOobphPnu9TpGYvDzizakybRzlw8chfZhRxw5Rb8i9mEht1DF34ZyfytsX6
dZYrWACOxjf+erGwXh/tSRjEn0uxz99lyUU96B6vhb50QCptKJMnAO+jMxu2
TaagZLbGhOMTyLzCiJqss5DMs+vvCBbAd4fAEdOP6IcHlupHHuDDpClpyUdX
8cm50MJdKnzYHi8x3MfnAX3YI83cgYd1OOZSmiQX5i9+Y+bl3gtzfgVqs5ew
Ub89uRq9i4XPpzDarccC9Wuq7pdQX+6tTl1dJMYh79ONM0I+Vaxptvyowyf9
kEs+NeS9opa1364I4Ya9R2i8/n/v1R+exeKT/LFIWMdD3hnd3PmDg+tVPBeK
8d929bZYag8H9cKxwye90Xd4y2aqv+Vivdw5EH2Ti7ivGDR6lQMvXDt3eXxE
/Iq/uDkYfeA4j6fyNyt7cP8P2Twq7YHUaMu/GYEs+CadXcafwSFzYc0X8PdH
1rhc3mzChyUR7/NHwkm/YouzoRSZU/mjqL1CgPk4c6JqHA/9fYVx1F4O/Pi1
u85NvReuzv1Qa4TxUEkducJex0F/Y7NqFHkZ9+2jXxEX45bhnujBhatr6rJ+
T+QQ/M1wFLBQnw+vXhvaQ96DsSkd7Sb70cS49JBzA3E/3N84s8765bYc3FfT
l73fuaT+Zpxz4uPzrVa1sROQedvuLScEpI9rwL1J+hq2jVHDXHj6+ZaF9XQO
GKRfqQw930vOJx563udA1Kf9+rpOPAgSneqZuoyP9Z5McX8RXS/dxE/nQkyt
AWfv9V5YbeheuHsOC+bmTQrbf78bfltfPz0unvBHe/b4nT3o/19kTMb9Pbko
0ORqGgf19PupfbN4IFm96Gp1KB/1+5S3Op4COLDQLC3zoAAMowcC7Br40Gwy
8/LzHNJf2VNd9YGL/HvwCujzUD88WvBXUYD5tOHuSbYQGBeJgxWUEHXe1OeD
LgJozNjSrN7JRT1u9+6deC/kdUlPDkX9jHj5rR754uGudv3FNd2wtnHL0JxG
0n9YxZYoZsHznl//rLkc8Fry+3SDOw/rt7M3u4QPS+2DZL49Jf2pS6dqp5Lv
cViZdLwZ7yP6Sl1zEpA5gZxKrO8cQzmrOgsh4sn3RxetyZxQSkTkdgbcS3NU
S6RoSH+8nHcN9yFEeWPVCSsu6nfH2ZrIB0ytt69uVA9E1qzfvrW1G+tpzED+
UYIvLZKyWCfHu2tmjzSyyBwjVSnBxfslz9gWyMM4NRRe7+aTftCJ/L8C3L/Q
q1BM3htbGjstUwgjPo43Xx0UYj1tWB56hczt7T2njbinekqnqGGAJnOTPzxa
aPKc0boPhain3a4tqOKhHqjtnbmFgzzB0l26lo0+Zrj/Ar8HOstp+ecPevD6
+8+9smKROZeKG60siCiv8JiFn1f6NS3jOzggHVeR2a3NAxvn3iyHU3zy3oT0
jLsC1I1vLeJ9yFxZzGRTGyH6ixN3NLgCxLdjZ1Ixvu8m+nWMWJL5vYrgZU1C
mFV7asVFeSG8HrF1UBDxIJ51KSeCR/otZgozzmHeTX6ptm0vG+apfmUvrGBB
yfleo4X3WPCr5Vr8AxEL+ksi1cWl2cA598bOkmLBIKursug0h/he7t9C5A35
spoP33joL2obTj7gAy1nutkJ82pCkeaGhkby/TFt2pwhHjm/uygZwwN165Tb
+bd56KPectvKeeQ8RVNSnof1IjWsUUb0dQvzcaAXdRfNJGehn++7qeqr1Yv4
JHrbUM6GFWtPn/9ynui5ho+BHqjXKjUrti5gk7jpNOPnr8DwvGUYd4uz7+7n
reLCznfPA+sX8Mh5zO68jzzCi3pXx/AJPqR8esCDsvn7ZEeqEIf67bVWGnDx
elJb4vW5IJHM1Vm9jYv1+LNPxpALf47sPnOkCuM2zy08vJRD5qRLHmId3lia
Xqyvy4Egj3E3r17qxThe0bBCX2XXUx1rdI3o7RktMTvZZN7n8fIbRKdc/1B/
mIN5sHf/KzMu+q6CV2FDXJDxN/+l5cnD+y3p+3KRB6ezBk4c8OXBmfp2nZNT
eZD7YMb3/g4u8mDIhzglHvqqz5M/xPOQPyo2D/Tjc0k3rTvTw0O8EzTcuskD
4aJDoYtQT1SZn9eaJcYF9ZJVEo8HiO5VKubP7kX/prWnsIRN3sfUcH/Nhndu
Ad5T9Eifa8pvy0Vc5PVouUVzeWB6cEZ62ADRG5bTEy6ROenkGLUJAjCVcTwt
jCXz3B0fDk4Rknm3G7Puku/HyB0XsIVCPSoWMYVLkbn6ghkyZH5K1Lt7KwUe
SbJOwa8FsNNNZYssXvdh8fFvT7GOzT9a9j/+3QtPZ2vsl15E9NjYqXcVehEn
Sos6dvaC0tbIPuuiXvTh92UefSd9w0RnraV89IVzpTWSBVh3zzt+IY75xo65
8e8HheuQ9f4+nbwn4cP7NZmcmy+zjgghc4IndnduIOdfJjkxtiIYI53ss3Kp
CPM0qmPiKRp9XFnY/PFCjNtGV8liHuqVP7aDQg55v0mR19ML0U1uEu1XEd+f
rctQKetFHxtyUHK0FzzH7VWbrcwB+5dvwsoayffQvH9q7sSAq/km1zd5NBzT
vDftTj+ZHzksH6FO5qSApUkJUOfTspct+FiHObFgwsW6HmE/sO9Fvk/SbJvL
xryLq7w/hg0b7jYvTvmHutw06XxtJAf5K75zQRny0/1lhyZe4sEUKPayKuPB
6z2646oekfn2w0HPV/Ahm/uCueBF5n6yxdpRB4nNe3BN7jQDCyi2sQuZ19U5
uiZkJpmDObHptD0FMkN58QkXhcgbW7dsCyXnSbVGf7BOsh3v5S0J4cAH49kz
xO+w4U7Hd8eaPhbINJz4mvyKjfsjozqxgpzPpFYtHstHneh0u6tCADP3P1rT
dU6Iv+egk+MpRJ5qtVb7LEBcfmV8BPUl4qe3RoIQdrdfjBG+pkD5xZc1as7k
vfRNMV7JNPpSxaVH2RQ8fnPhs5M1ReZ/R0feCCE49y9Y/xLgPhs4Ze/mk7in
5Zzjgu38ibMNV5F+3gl5xY0cfA7nJZaIU+6lx26EfuXjPkYcB8RF/Q2vk9VN
ydzQZI5tBZlb1vg+7Eze/4yZWHmWwv06/uHsDgp1ptmP76O4X1WrwzS6yff3
xNumWjOYH9Xvr8XQiEtP7bQbKPK+wNjjLhTi2byY1g7y/RA8717E3cDkht8R
L/jkveJty9fy4FOh+M9q5P11Y6yU67wRl4q9K0LmCTCOr3zfrcS81Xu9bHYF
+T6uY8LM+wzWzZWHUVPIueHY1VU0mdeXcfLdTebCRwqEDuT8d/75s98ZmDor
R812gQj+KMy1Eqoy6G8+nlBeQ8PLFTYeB30o1D9Ttm5EflJryU/800Z42OXI
WB4f9Vu+cWIpD2zXZ8qtbOUijs/8W6rMI+8bnzIp5aOPE3jWzaJgRqJB+y4D
8n0F1eOea5H546ITDntEsP6m7P5FE0QgX+4Zvvgsg37k7ctEXFekU+zERbIM
fNXReCnTTyP/i7bSS8j3G73rNfxE4/Mn1f6upjCP+jl/s4TkHH1pTrQADp+o
UfrkwYe+PJGrwmLkBe25TdrruaTfN3x7CheOnLvoJ67Dw7zvt9Y5IMD6P8as
WEEjP+n+k14kQh9aKWu4XIQ6OCa3P4kh9ZxXZYR1/Tfkhl6FkLwvljulQ4A4
aaxNmQrg1e/YyTmXyXytY8DqJ0LyXseCoY00LNZe0dihSMGvC0vr1cj3nexU
87hpwyfzwrdCqrnk+1Bkxu3jQKt/9im6C/VowZUC/i4OpETY2Vfhvh4f6xa4
DHXsr8D+sM1l5Bz/qHKRH5nDH5esLC6CiM0P4UUJDXVLhsX0EDdHvuqP+32N
j/7vVdjFLTz43VITkYj5PMfs5WqRDPoAT5+lTY/58D+Srjwe6u4LU5YsRVkS
hSSlZEtI5QolqdCCihYhoqiQVlulkEpEkrQIKW1KvCrRRpSyRGmxzsx3mZlQ
2crvnPn95fO+GTPzveee8zz3nvM8Y0fJdfk9YAF3Dt42tgH8vnNR++07FOTb
x/OHoY5kXp27RdWRA3nbUnL6ZshTXxuSis52kwM5123em3LJdj896dSXFJll
9fnHNgPULeq5JH1RADxZS2aHK+omiPcFpApgn66o26WOemtWgcF1kO/3pydv
DEA+YnforTSXVBx3XzAVcHLRG7+76g3IswNPLsgFPrtj8t/KBSzhFSskLkgD
PJpZenh5Mw/yT0hC3Gwu/F0D1VE/unE+zKasGe+NvgTtUeGSVd51TZKJFJm4
zKZbcRb2Q8xc66OO98xrTbwgzqbereZNkIefi39+3+mPOnFybpQK6oDFrL5M
0aQho5vkhQDOfhcV3Tydi/h7xvJoDvK+kRzAo9LC8PV+kCcXxyS35CiwRNJs
vNsKWxrwV/A4s2tQR81r/pqs5RLNqmOeY5s4xMD3w87wXC7s2+Vrak7h/UH/
hF+SLAks89nhsFIA+LbE3H6lEPKQoG2zphDwTW34uVFCiPd532yasQ+qO8Px
Mh/q2iO3acE4j7KyYPUs4HuxxhdaBYA3GvpltWy5pCrc2pZO4MI+HX18HtRx
pvzsseW9DGHaz0fO1KLJ7YQFo8RFed1znW0PF3BNUFukNg94W4dVvz/UvwFV
mePw90937vgqTMO+y+LKMj0h8AbrFa5Q776dG5opsMT53AeZv2F9uUNzdp90
xL67cb8MYD9yWzIHlYcYqIeNMbteUGSBeM6bL6fwPEIyQOIDlxyjz27xVeTB
vv9w38aZAr40uWhsBkPu7smTMBZSRKi6JaatHfCBQf1Q8l0e8P7k1JtzKPi+
XqML42nYxyHVlvYs8EL9bNR/E6qm+z69JQD8/rdCvxv7sqedjYPnZjMvXsZh
AuryPZ29BurzBp/6zuQLqA9wwOUrPI+MWWJ2Dy5TOAffFqDLIx7VexZo7+MS
N+NZsmd+4jlsrnzvSszv7qNvazKAI06dc4LfpySu6+f/5MH7u1Ynz6CI7kxD
D1n4nqs/783vgTrEGl37L1yaBT4W/TuvkwX8+d+p8RRL5Jb61q57hX3g8/6V
A355N8nxnrakgBj8/nNSQQ37o9UvHdARQFzu8FwzQgO/umSo7sxDXay8e6c4
UPdfmd4eywFcNn/DCSUu4JMpjWmAk5W3FgyHltKoq3VskQNFjlv+jjgDuHR0
hofVtZkUuTS+sanxOQXP52usGvAco13Tts8apGGdjv7sB96UEpdTkyAp0l0y
6qNpwPep0UOQt56Nq9Gbf5JP7jzac+CBN+obzOCuDmJhvSTO3IP91/RypXrx
YDfkZ1m3v6u7yFmFAzU8iy4Stexy8s3KbtJdmDPNF/Be5lxTC5eLNDynd5aJ
qhTenyrcSeThfHmU/Cce5DE79qklBeux5YpBDKx/rubhwAHM1yceBc6lSUVe
q7QtvD62PNn3mBLmW+eZ42NYiPNkf23shxtU2d+ewId9/Vjv7j6RDqaq9FfM
TzV2h4F/yw5Ycha4deAc2r36Nx0kb16YZWB9F3l6ecM88yQu7D9dszHjGeAF
T75aHqLIzZiT02yu8oiMhlvLduC5v0uuphoBz+kwj1FNSadQT454n8VzhCpL
2VsMCV3ad6e7hiWPVOr1FhdhXfi9TW4u6viMmXTmCvbf/bZ+PBV1oA5P6/Pg
kGLvza+3be4Evuz8+vR5vPfgLpo+u52c2DalhzHqIHvid0mbn+mCvH5npNKD
S3asnDsiL4/zyvHD4vk02eT0RiH3LgXxuXn7QR8KePbNPu/rFPGbNMHeD/Jj
Z87sHX8XYb981R55D9SRzJU7u0hItjcanW78hXOyZBxXk8XzoitykIfaX2dn
Rx3nkLWhuj6byzqx77DoTUk7OaNw4O384jZye7A1YVt3G/CjPwel1nXgHIDM
opoucqTwd8GOMMBBreN2JYzHOdrrnst1WDIr3yleeIghOU9KYjasYcggWz++
5x1DFDI7Jr/4iHofSv5MPPDvVp2zgbA/iygntaP/WPj3vf0a6xliOmahpXgW
fp9R9+hdXKj7dRJnOV2wjwrOqz/swPNjy3Mz2nEOa7lFWhvwRo+3FPz31aJ9
5vJ1HcS7sj6LmAPuv7PtdVEdF8+vB53T+UQ8uG1n7xQ+5O1XBhXFLOQNG2Pr
IsQLN3KPLsG5ym/eDm445zDng5s/5l/e6fbFqDvZv8D6KOI1Yb1yE03U27mt
QyoU8NaBtL4/HKgXH40+3sJ7mSd7s2PxPrpnmb1CO9T1UKvTz9tgnRXMCzLb
iZ+fn+3viE6893Uya+gmEXI+UiejebAv2a3JV7AvfMa3iF0Yxy5zpi3Cfv5J
7j+3oq7l7zHSDPYve7na/RWQiS1ZDk1OQpxP1u/now6Ei1TwFtRBU5ydfI3G
8+O415A39ww4X1E5yMH55TIF9S5S5xemaaaEfQxKKada2shvqe/FD3raoD6U
5NwxxnPSKbeinYC3RZ44Zd3OgTza0eF2kSIdr/s1t/Tw8Vzpuksqvv87wfFl
2Ic9myM9Woh6FvNzj2H/mL9srhiLulNPW71xflMhue4B8sj5uR4tHNRt6QqR
6Qb8+ueay8VO5H2XH/Z2kHcn9ozUqHYSC/XyR22j8N5VZcm0092on/PEM5gL
/Ct2XRLw61c7lZMLDtI4N204byqL/d9jJzTxydYu4/BQCeynda3jNgjgc1jq
6wfjfOe94h9LBWRHsHD3xGSWvEk/GLdbmoG8l2i3F/bxZ43Jt1dP4cF+PpN+
2Z0DOPFO+ZKjXWTk/gL7i+KdsB6v8666dADfmPinI6QD+1ytJ+/txH7YH61z
u0lWrexqa0MuMa/98j7tHg/nc6TCFWg8N+SNBfwVpruPs+wgH/bB1E9Vo1H3
ZdWjvzTUp+rxGdOhHn14MHBJtxp16uj0qEEGz/cXhJ6nieGZH69n3KIAR+ZV
Fp7gAa6N8Bwe4eB85PhTu7qJ7vIv6ifPYX+GoZ5yUhfO/yp8Ah7XJvfgzsvO
brx/PTlrC/D0+oTC5R95wCP5dSOPKKhrssWVmSIdu9NNIwzkRTH/Q5V8MmJX
qmuhgPOqF7WdRiN/vXnAwVBIPt9Sl/bfj/tm8XDCW9QPbNpdMoqB/HyjdEsz
TWZUHFd5toYmh+vOzZm5nUI9pWmhRTxYF0UFnU9YvzvyS1MojBOFHy40caKu
q2bxaOIamJFWWcCQTuUnY+0B16U25C96t4pFXLVt7XWWmO5b+fLyaZFu0XCG
EHFkwgF3aQHJ5UbEKo9BHan1cyu1hcSn5uv8Q/F8yAtDDen7WRKvVfnqzxoW
z4kU7V5iH2WP5FYxPrnSf/brtFYW8P6hzD22EC+Ve/3uhwrw/jd7eYCQZBfU
vuDMwXxtedfDTIjnEk/S7HDuxT3abTfOAz70equNffP6RlHSQrKTk5DCg/X7
E3bmjrQ5zhlwBh1hf8xWS819JSYkR7PYzy62QsKno/y11qE+zZW8cQ2oz/H7
juMUAd6HdDpwcI4qP+ob4KezCp/fv7ZFfaKAvH5PAc5LLZWpZ/Ee8UjnMZEe
xuongMv5h0g/5xNDYtqlzUYSWZwH9zmjh3OQd4RLVbFvcuGCiDCcR3osoOcK
SN6rgsflFOr23I689QrnLnZGjjxBPbhXX8ZvRH3sCW/qFuB8Tv0O2kQIvEH5
83vAxf4PqO43wP8Mz2SvXPGCj/tqxbtneD4ZaB70HwP5MSz8ZwWN932vohbS
UIekL74CXJYSNz2k3ZqBv9O5eRxHpGtw/7wGS/TCRhVsPot92zrvSj/hfE6x
VNpTljx9bnE3hoPnA9qzf1zDPniZ56s2AQ5WTJ/hB3EYr2VXlT9bpH82vFEB
8/FJpSgL7Gf1DX0B31stte9nuzXexwiiiqsYqKsjg7woBnjt0dl6GaiLmbPu
QROD93qjOiKw3+/y9coBlqjuGKtY2M+Sj2LfpgoDcJ5RZuSCKksm0zqP18ri
HMs+Sn8qzokaxwsviHhq2HeoH79nln2wmSwguiXDI1Qkzjt0zVf5v76XXcIg
n1RMlDrsLCXSVTawIFjPzqVUDDM4b1Rjuhx1Ip+NuL9joc4YOu/u4BP7yXLJ
9imoC+YxzVMN5xUeHlb6Azjf8uXBdiMBSVHTnX7kHeoUlvJCeaiT9m2Kbj2D
8627vGDfTGwx3L6QZZE/NZc+5MN++ju2UU00F17ntkAAce9aY1iPn6t71HUz
nAfWWH3cm8W5ZP25kG+8TX/tX6XMQn3LKzrBZeE53/aJWYJ94ISxDxWiXkXr
Ti3EDfs+7FMXEq0+z7dZgAOLP5SfXBmPuNXd+UoN6mJ8zvTqYaBORGyjtFEv
MbVL/wM832CA+GGoQ1xTmsDg/NyvZykQl8R9aLynpoDE3xWfzj2MOHh8zYTP
LM57R5R6sNiHSJyAJ3/RWOjeDDjmSGIJr8yBD5/3YUD7GNQBatygLCskXx8e
1Vg2GucYJlWph+DnikpQ+4J14OdX5f/4pK5RteY/yAfhPw5Z1DGot6EWeu4E
Czwv8KfVLtTV3lP/HNbB5MKs3NUaAqKauPz8+60C4vr5oHisAc61+ByZdYCP
50h8SXnM02+3dhTi/K+33Tz4u5tapb7WxYk+Z5HYaZyHMOj3hjzSX6GrV+Ei
JKsfr3rKA97kefrqGlUxeF6+LWM7OlFnOdhS24ZFvb69L+IRZ7eeDfnAkK9L
Y6MnPWHh57W121NQV7vPUPYl6iRdXNukKNLBut60GfveKzVigC+qpSo3jkL9
ljuh6m2uqA+77t+OP6gDnt5kCrjmhGqLYmAFzjltnlDmhnOBvbsDI3H+wDrF
eL8A8uuvjwLIj+fyY7L90xnss7Z5+o8mZ49onNFqh/q9rbDt/ica8lz2j/27
GXKo5275ZMAZd/eMGfv+L+p5nnXzm4D5YffHjXjucOWl8I2MAO9B8/5qCTAf
RMWV8Yl2X42Av49PJh9qC1lih/GQKO3wmyX583b+7n3EQpy/UDlUC3FYIbXl
sIlo/u9MzU2WHMwJOu04ncF9/p9GLwX8VfXSoscUvD/3p2Unnn/t0RmUp8m7
m+/FagD3KGTWL93ozJDkt1rXpj1iMK/Xzuln8BzrQYoa6thzfczX4ZxMKo9z
EPX7LiwYtEW9HGIwTZxP/qopXQ9sxLz05/ysYJw3VjyxXY8lictl3RtGsRAP
nR2Rqjh/2bTG/CKDdTfQ0IAmNkptC/n6FOKttQv+8jBe5B4pU1AP5h2ul6Uw
/sL32lCwLxq/2b2iIB/qDNQTGnB7e8HUHzTihKVNm1myOGZUZIATS7g73nZe
CGSxb+LvZUfUlb4WuBn2FeDedbVdDPm1vOROcwoD/MDI+bczzlvy9AUqqJ90
K8naiAH+/q3WsAzv4RLXV9+kUNdo8bUbPNSpVPttxCNjFmk0Sr3gQp0+0ysd
yIX13hi/MJJLMteNFIxTEOFRBV4f8PN7l/ela9DI6zSuQP4p/Rw/OtOfIe9P
mCbtk8R4qPucCHl/17W2wq0rabxnX7RlNA3581O7xVMK72Ff9CVSUD9zZu4I
ovB+5ssWR4pEzGkz/vsfD/t+eGsvcIEfOIml+nMgru0a1xeKzunj6pS6cf72
hc3PLrLMpVX9+75u8kb6UsPEdA7ey20cpYX3PN6vxaopyK8cnwntDPB969J+
fYZYbu88dzSEBt6Qd1P3Luoq+KweBLwu+fK9Oz+BB3hs8eo503jEPiB4ozk8
B701S4L2rMHzQM+yuwyHHDWS3xxlwSGJJbPfJ6lg35X7j6jbnXhv8tv7vw7y
QH68+mrgQUlh473+PukA/tHMmozugn1S7ir9vRv7TJ5FUIC/7q1KXNlIQT7e
uvfiS4ZMXBZy4D2L514R+pbDFPb7xkrBc66tYeZt7ecS8W861dzRXPKzL37v
PR3swxWEBW3oxnu9fJ/1XThXkvoppBPnxRp/+3UAn+iudTJuJxXHtwdNp3+g
DsjYjogfsP6bOOtHtSEObao60w74V9FK+X4nxOt/riXKHMRb2wt38sjM7IDb
retQB1g7Lu0KQxK/5N11AXzor2Og5ruFAryhtUi7g0uWpqg+CduE93PNITKC
LnhOrYczk0T98nZKjh2oIyVb9qWNLAkQyKxK/IE42+Q/g+9EWDV6wos1X4nh
fa8dpvtayfkGx/S0H19JqeOtN/uv/wC8a/Wa0u4gufs5yxTedJHVjn+v7djI
BbzjcEzuGEWsZYu1R5QZ8tCi31itl0uM//sksRLw8Ngf7BG5HbC/4vTSwgEv
j3v6pjalmQF8Ne5M9V/US9/HfyKFPK7loJOkEF5Hp6f7CImO1mQnZwH6aZja
fYjCebdv6jfiUZd2qfQHwHVX+i89eAC8YcTOdmiaFurzXMv/mIe6Bgu9a5VR
tzThQtduPuqHJrjGYv42KfzoyaA+d2I0fK6tawdtfu9FPeXS51M+4fmN75F6
wB3y5xxH1ogj7ptqifqk06Uk0/q3om5AkuAHzqtz7Of3PUa9qzC+9UyGFDrI
XF0HeS1yaJT0zTIK+Pdk3rWtNODObXPWFwL+tpxyVdoC9aWsp7UG41xbYOV9
qDMe8xuM5TbinOxcYn9JAM/H0DZKhw95+HCpmzrqXtfvaQiiie9N4ccdpizg
iLE5qSN84vhMUuyqrpA8Ozy2aXyEkNwOOL/BUht1DL8Y6gO/ylZXMHoIeec4
XdXU9BPPVxJtE49hX8ezkpw/XHLcUuq0WCkP8AurG38E+y1m/vM5jfWxafto
MwGZoPze4tc4IezrmfY71uIcZMPNsLlC4jpsyeOPQT2gUfOmRVPwfJWsXkxG
fbHbHK3RfODHBgre8D3cLkv3NU1FnUuL1k411Puttpmiif4px6zD/IRk7O5E
2UfSOLcZXtbBZeDvye4tMEI9q1sdeemYd5eYmr4E3jFsnD1VFvCZ5npVPy3U
f4w2dQf88Hz+xYrPB1DXir/lXA7OHaV2b4vCed25QX1X+WT/Aa/U4WsUsU9Y
8aVvA+pfH9wuUMa5z4Janjr6itQ6XfvFx/UbCvnHkoq8IEcrYxZ9UTpeR7PA
mztvaEwXEKsif4ktlkKo5/RF6U/4XB2+yQHvMtr1x+mlL86xi0dOvg183oyz
Va0az+VUDiztFPWvjEyEuJh5ZPKKxFki/Y27A7chXq7GLjZbwZKC94sGxwNP
3yL9amCbIQP49lRpdBLq8N10uNeJeg8vS7QlWeCt1jcnb0YdF6dDgwsowL+a
IYZnKXLeLnb22rUM8JbpJh/t+fD8p8cFt/HJ1LtX73wHnvFGulYvzw/7tmIf
cmJ4ZDD7j96rUC75vOje1KtBXPR1eLrchkeo1FKTnusU6g0cubILfXO+v/4D
ebjklF900Ak8VzNpyv5OA/6rT0Odt3HODpe4+QyJ3NHX2+hBk836sadrSlBP
KzLphiwP8tGZDZzHPPj90U8KHGnY15/uP1+FemQegYGQRze1up0+MonC87TE
jxO58H4WnntlONgXsazjUTcxHHFsXa8FvH6r9+ppwNMPE9+u0+E8eF7rxN/L
UUQmnkhqjKaAh0+1vX2QIr1a7cG5STSxSk4wvT4R6/uQr/UdmrzRjz9ncwrq
WLvCWZs7PNif+g6+GO+NeomGFyjgxeOkFZ/RUN8yRs/SRv0bmcq4nciPDUOK
wnjkoLL1snXiXMD7a045xnEAJz2UqrvDgbj0bd2yCM/pZz8368B7xjdWTsex
/u7cKxOP5/b6snwNHuw7caM1wK/vX8rlHTehkT9NWRxGw3OXUp+M56MTxy0q
qqFIQ1lgUMcHPNfo7LMS6YAdOlrsxQBuL6sws8f7awmz6ydZYjxrcdKMMwzJ
m9dl1/uCAh6hWpxJ8YBXtymc7kO9NcN8zZkU9kk873WjIF+ZpLgQqGM9+0J2
6FBQV+RqtdLwPvjWSFUT9hl4d3eZoS77AuZoMUU6zKujj43g/JidRpU2TVa8
IR+Gw2lSbepzXCCBz3Xbdo0i7Gv5evTdRZZcWFG778dxvGdwUGq9y8d6Gf4s
noU4eNb+w44BPrrB6aku6jeo/mi8AP+tk7L78mbUjVxXKXxDA6+dHqE8G/Nt
bVsNxPOwlUvkwzIecaJ8XhSO4wH/vRRexIN8pXTP/dpSCv6u++7uBAp1cd2/
UBSZF5WbcyuZhrxZX7oa+GtFXueGjWUM6b2bLZ67Hc8jfLtDrVC/QOrpFAfU
i7N79GEtC/s3mC/VCfE4bc9e2Y3or7GocW4B/vz60+Ql+kRoSiuUiPTZ4gP+
Ah7yzW3W98P7gk21q6p58D3F/TYf5RG9znOH/5zjQd3IOOrQzCPfRjluXqgI
n0ugWHp4HwW46olxJw/1+uasHm1PQ17qtdexoaH+yHzdCLjX7wR9yTwIdS0v
n3O5h/p6g6M1PNBXhnNREMMA35sXc7yVgb/7/IZMkqjP8cECd+y3KG4o240+
CFl/zbQo+H784HudPMAH+sLeGh7Z+8nU4l039rPM6Jm7jwc8Y/jb7Uc8srbj
WI3qR3ie8/hzI6QxTtYNr5IC/Bsf/mxyAw/qyXTenBCMe03eZ9jPGlnHbw9n
Ueg7sDdtLp4THH4uA59/7rqQwvVuNDm+Yc3m6xMxL1W6zA9GvDZ8SXEbD+/V
qcfGPIibsoLZa3iwn/T2u8fyyLrnY4oavvOwH6PfX5sCXrGfcr3OI0fHai3j
i1HoM3D+1GyKtC7tTeLNwz7IAmexNh7wnFnx8VY89P9Q//meC7hrxcIhHR5p
94hrGFTHffwtZkYBxLdt7fRfKRTO3xZdXYn3swZar5J5RHtxQM48Gvu8Vp/+
6MKFPHnp5/FL2DdS+3WyEg/W6w115QiP6LPsJNcunOs8MvBawCOSZtGKasAL
hLmF9dKZeL+h9yBcFvWYTJscFtHk6epHTcfQD6t279qjczFPiu9Mg+c5eWz/
K3sf7LOMUDXQpMnuW9eYTFe8/8orv9BDEVvriLetsD99athjijt4kHcGfn54
xCV19lEVe08DbnOIP6rfySX8se8Wj3XhkWi9ng8bYvE5GbkkQf2eHRceoGjH
g/i1XW4O+3r5Ja4BZwr2I9aYff4D+yE4oroReGHA2b96gljUG5sTpWCO5xla
Y8IWMSTh79e9yyDu6uwtfw3lwX7Oeqf1dguDc+4+mhTgSPuSBhU9PK898fqC
Dp5nvlHK8OORgWyLaTmwDlLXTOMObuARed2QTs8VmOe2Oo10Y7+KX87IAS72
h5BnGlxyLflj1epi+P3osJ8JDAV19f72iYDz7azrjJNmo/7ZgtHakNeWuRjY
fIK6Z/TVgBd+nYX1k9PafR/nKLeaTIM61rP4deNiWRZ9B/a62eM90vvzk6Cu
FK0/7FlsRQE+09dvPILxLu3YMJtHJuTkKD/5wQU8+9+w1xwu4JCE11kRqE85
6pT0aA75En/pfMjHbsjrQ8MOKVzAG8o1Z+Ix7s3TE0pxP/wr9n+HdW2jtI03
Q/h0f+TGgyJfp7Gn1jBQL9uNKntp4GXs1zRfGtYrg5b/iPf1TslLjNB/xPrh
N6gH455u2fedB+t4aOIcN3cucQ2kPG594pCXp03SH4/hAD5W07ilh33q2bLx
SdjvXzfm5a4u1FNSyC3tIsET9iZtWYb9qkFrVgJ/4g7tTz+iwiV3Uy6FPrrP
RR2AWj9JHln9mbY9At9318vzWovt8d56es6JHRyoe5EXHz/rJvIPd91tWdEN
+M1Gx4TbBfz037dk7N9/kT2uNK6LLBAf60GmdwEf+FRzIb8T9YaStaU7iXKh
e/1e4E2ljsxwbmsH6sLoegbjHFOHY6ptF+kulCwrD+8m+3lLNfVUu+E5NVsH
PO4iNYqChK7YLlLO7PLKNujCc50nlQc7IW5Ve42B//xwrj2xb1U7kVv6cP7W
zDZ4DmPW169qA37UojbOpA35jG/h6jbEU4bv97VB3Dq4HfRow3meYxJr2khn
z8ivlYltyE8j9lu2oy7mkyjzDrLLTLt277pOsqq3MJ67vwvr+aPSIQG5k3Ll
dhjgzl9fXl/38OfjvcaniCo8X6j6t/MWTYo/9B9Zr4hz0Vfy8/LwnvNI4SFb
7ItoV1k3Bf1VFjlzLCjy3+Pbb5/8h7h0nudJJXz9/EyNBXzyamfihBxHIbzf
fCMvC9SDOJ10jcdCPl259OQkkV5X8ORdiC/yj235iX2unSqSj2mISyfHUHjd
2FFvO/t2Csi2yOe9zVEs3pv3y8B+3LGy0ts8AO93vRPDJ6PPyZDWgfOIUxuU
phxiyWKlk0FHdFhCXrVq3WtgSGDZ0XL+C4asnzixTyqOJRJuWWamtshf5vPf
eAhRt9+juodPFq766bO+4//nOA4qLHEZTp+Wh3F+yGj85lbklTYlhXk04K0n
n6SB7/APfbdBH7lcLnfR2RgWcI6XXrkH6gH3K0y7xyfaH9dsK7ASEvHgC4nn
VqCOyIWoW3vQh+OiHNEXktJhi+i4G6h/HOjCGeRD3XiboAz4+8KsqNw2c9TR
56Z5vBQQRbnG0X3+2Kc0bVRQFPaj2N6c8o0BfnQ9fKY2nrclSkfm0OSE6iR3
mzM08BL7ZFVnISnfGPIi1h99UvScJHeh3u72YSVz1LG18HaF55s+IrbEtoVP
biop3o2/i/1dv9pUHwlIy7t9Mw6GCknM3t/TsusF8Pwklhj/Rp+xorfdY1DP
W9rbCvjPS22XTPT5SPzSbxz4AfWO9OvnlrNQT33prX0M4UzJ/WspxZDZatNV
GwDf9a+Jvdy0gyZNL2u1BbZC0up/N/5SK+osLzQYOCbA/tg3zl54D2jhwCzH
/pDjp/8dQn+98cd+eWHf1M3T/0T6mJcPy09DX71MQwUpPFdc+8OiCH1xhOzy
eD75du5PULsY6o6uNmzWwX4ihdyp7XyIt7hl8W+wb+3qwNwnDPKNXjPAG9v9
/PwfTaDxPHD8BhPEof+qDywVknXG8a1+wCObXqrIlumgnrv+ud8OeM+1P6+8
RAD5/uaMDOC/MhrWL6a/Qp2ibHNuGPBj3XSzwOUM+SNF2m9A/Hy69sMiyY/F
vqGUpasFZJKEtacexM/FffLrji5E3SDFDSES2CenrScDuOaEKi8ptJgmSWmF
ATeTKNQBvjJdG/2CChpKD1MkIvOz9bdFqKcyOcHDE/0Dflf4b0W922Tdaz5C
khQWUOHhLiT32p73LOWhTsfJZZ8NGNL6affdO/qowykW7b8E8Yth+k5xBvtE
rFwCULdEe+bovegbsjoofa4A+Dp16YIS+k/Nve1vxkIdTRm0VUEc+SO8pIUi
hQGG714UYJ/ZP5XNC3lkzLtJg671PBKqu0/jjIyQqOmt+aa3FH07ajKtIR7l
z30wrg0Wkq1d2cFirgLAWbcdM6NE53BmQx94eB5mxsjzyPfdstHrOfD3mzd/
mviJBR68qigpHM+ddcZOuYd6qmdlHz0S6WpaTLFjoS6fLFGGev3y9M/bh7dD
/jDO2JpiSaGPkNsnaR45MuXNwJIcLupvnKmcg30uu5ee9xPgfMhm2fsC1H14
3g5x6Dtp8IYUfP/E5VbLrydDvMzKX7bvNg3vf166GfBORGbPm0z43qdm7jyo
/IUFPjNfSh4+l17ng+cX1uB9RMH+AC0Wzw3V72qwUN99M+4cxnperyvbwsDz
Uy4fcUM92005sWI4x2LaE1+L85vlp3o2cnG+zCnlO/aLH2J+3kC/xV0Htt/i
k6pwzfzTsgLUxfwmMw/3bd0Hqy/o56Gy68hThlyunTVKwRXywOXqvwuWoE7a
Ln3+RozTqXfmrUL+G7Y/h2bImWzur7YB9M2yizgDz9V1uH+CCuyvnsWCFX57
WbLJqXlaFvAa+4Sy++dHRPPLVUMPuVDHfg8VbeaSsHMegj2NXDI6Y0zadyv0
CcxY66uBvobpG3sj+cBfs3oVxFEn8YKM9W14vtn9C/wK8L41epWTvQDqxa+E
mauEwB/oxX2X+WT8a9lJCX7o96Keo0BY9In57LgA731WmmnEot6x3W/pBAHU
76cLsx7gPRd7tMoDzxvH5Ng0Y7xdCDf+j0usL6ZqvznKxXPa/k9Q9187caac
W8GH9W40XuyAunih1fbf8N5oVfFhIyHp73SNWCYpRF0Af5cm9BEZM1C3Wwi4
8fOJ13tQv3LJpiewH4xGZHTnLOWTjFnNexIg/01bvtGNLyGE/M6V9HLDPrES
4wufUN9oo+RFX+Sjk6V8ucBvSmRdM/dh/9VHc4dyLvCixWGz33KJ7ZZjBtfd
ePCcHj2U/8QnjTJvys5bCrC+7LqogvlK75qVopCYL/waZdjPB1xVtG6lFuS9
afk24iroK9V98PtS3J83a1rl0SdCbxFrjnpoCS9yIV9X+izf7QbxuPDJhvx7
y1H/2ypg3SgB1OWc7/nAn/Q9I9O/zaCgzpecdxyL/XLK339wsf//cLy2CfY/
7Qxpf8yD/SoUVrgJALctcHm4QIi8cKOQi/k21ObufD7w6yMTZo9BX9Rbz43m
sYDHzs0NmYW6UFkpJstR77HqfkAd6kM76epCPHxdqqR5Z7GQ0BIpozkDqMff
NzT7G56HrZX/K88S2/dSTgF9FBlkD07nrsD+sARdXgMX4q8lMU+Vh/5/utMi
kYddOiYjjb57r+4s18K+g7Pl4SFCUqKZ42AI6zOlyldbYjQLz8/rwqgbNDyX
aZZ7OTSsq3fu9t8M2cY3lUxz4UO+4IWOge9nd1u85NACvNfKuvQoA3Wc1Ha9
+I9FXYO+vakMkd7sYcQdT8P3F8Q9vA88yFMgoD5wcR55y2c+F/bhmYCSdTwS
PirjTfIlHuClLW5OMyny1HjxyuwWFv2Vzg6Wo27dqWExMdQB/XnHcRTiohTt
4VIGfo+3a4IcC+sfHB4YwidLHJYmFcM6j5o98l11Mu6jrTzZK3xyViFDK/gm
6iobR8aY0chjhy4Bn5tSpdK5BHjgyW1TnqyEz3H2SODECimcj9BZ83qL6F7g
xtEYHsTDhEmyd3k4tyK8PJ8S3cuwbcCzJ+k4hs5DvS9H53tNqCt1vGBoBur/
qW2k16Kuqb0g1gfjTKowbD/6NXuGxtIsfP7QFt2b6Kd37/SjhzR50qFsVQhx
v//AktTGSAp1N2cM5SA+nKI39xoFPMtLMsGLAh5+MqoWeOkPZzbD7jfyR734
n7k87O+P3/EKv8elfyZ2wBd/3s9p30pBHrvhYpmNfDW0QmcWDX9nbI7+JVxP
K53QFhr7SOS0CE2uNoW+HbRAvntjA9eBRyQ4mZfefOFiPklsn8Ijvjd/fJZ/
wYPP47W+P4TCOTHf/Kk0fC9ruYmxNFHqeV43eRkN+chKQ6+Mgv2c0OesQZGx
P8Z+bMzmQVwmtB5qRN7eOWqGG67v/Nj18Byrwt9NPfGVR/z+2DvJxWPeiXOb
pYl9M0oS7G0urPvKe+JawP8oe7cXNzgkq7a02f4IB/BC4a8dvRzI14PmCUt5
gGsG+QWvKbJ17cf9k9ppUsNveTUcz5DP79x//QtBH11biY9XcF4tredhBkUO
1z3YMaEE5zI5Oi7hPLLvaaTVHPh8pcMOczYH4vkF23+1n0JdoqwBwO37nDdN
372FIgVbiq78UsM+3Si58uc8qB9dVRv8sY998f5Zejzg6wkSL+1w/wXe8x3C
e5wVJlfcEa/tdDgFPE8qOvV5JZ8hc9cp2kU+Y2DfVzYY8mmck608Cu+jMoWX
2QT7YLzHheARJR7guy2/ZODvdeZocIO/88ia89EJp+/iPWLqYgtN0TmJgtIj
GviNY5qaLkNOr2mQsFuA87M2ve0CmkymKwqU19BELTVU/1oB6n4oJM7SwNer
VHEzeVBXxJNuy/Jw/t+rRZ4L8Rtuu+lBN9mcviJx77wu8vZK194epoNU/MoL
q1nXQVYeZUM23OhA3YGGwxfx/ujLuPvAyzrMB+UOFXQT3ZLJuifDOMB/nQo8
z2Ff4jL1FBsG55S+uV9kcL+kejsCX/HgDqba0jjPeeUAlwfxfvSWbB8X+6ny
BZk4r2TK301zATetKXV1Ql8ISY/LwL8f29ie8QriYp+BpOoCDrG1PnG1W60b
n2NJVmgX2d7I8Y7K7CJmV5U30nbdEAcBCpu7u4FHCHxHbecgHnr/q5mDesz7
zWvR907M6F0MA3G4aY1vLuKfs2ZTsmmoN8+NQ28Dz56z+snCMg7qQU4e+q8b
+8d7Tstz4P0/dazU55I9A0Zf3Fx4wHMi3pp+4hGHFFX9CHhd+te5jXrSon2p
XG2P851Rrauecsj1kEWps7s5wMdK3p+1w7nCfZL1gVzg09v7D+3g4n37KOc4
LurHmz2uRd9UzWmefugLPfdEmiKD8+ffZq3BuJTYoNTFIbPyH2yoHd8Nn2/T
s1ROF/pHiFeLc9CPQH5nPBd14BUeNOP51s4o1JHnFd+J/g37N5n1vKfsQAGO
r2go6ONB3Xc36fzJI/cNx7nvNcRzj5byWNgHnTlD8id1KLKTs6DH9SYPdaMG
m2C/nJ+aJLG1Gn2VrTeF6THYP5xSsppGX8O0REceKT+8SClmDAf9bYimUjd5
N8l1lUxVN97/Tzx2GvN/8cMeGwr274ZJTyfjece83rtjaODdLyP3Z1GAe9S0
P66jiGn3ON2LluhzeomZBXnl+vdvCkt8aOx3UFz6hEZdaqcdW2jIsy/2az2g
iLdi/+IjaykSujTlSUmnSNfcfYsQ7+OvRAt+UPj8ux1GuKiX9fx+PIdImu2e
N/ccB/bxPNucIS5RBkZSIE+jf+/si4sYfH5nEwD3H8xZYXr4H0V0ksLUqDLI
U6URVcq2PNQ5yDlqxoPnPpS+Zzrqhj2+J2mFc+xNo+e/wXyY0e9zFM/PzKR2
S2Hd6bly5RHeT8cpeAnRR/ZOgAc8x/7Oxa2KpRS8z62Uuj0QT5qPbAPauCL8
974W5yk/+vMLabJA/NTr51ks9jFk7eRh/5LW1S7YVyf6Lj7NC6KAfy5JmlvB
JTuCXb4bTeISNuuQvrccF/tUYmQ0eOTCil+fXXwx//UOeCuintzFH3/VaeBR
rWEhHRSeg1xO/0JBPEyc9fw7TQwaDlD6gN+fV09NceilyM9j+VUX8fz0q0TK
0dUU7C/99dvg91QKc4+MfGBJizD05DhFAfpocOZv4sP+Lp/B6DBYB1Z1fMHz
9xdLepdxca5QzO0mB/LHxWSZOA7eU6+S9eNiH0yVSSIP3vdzpYM5+qS09606
QpEbF6/HRl/EeG1vPv8Mn9OKc72ZNLwuaO25Y+j7+t7LdTLGwxStH904R/1j
Tsw59CWvHhc0nYX6FD1SeR7nfP+b+K+XD3H8bxTqhqqlFuX/NaXJufx2ja+x
PJL3KkEi9gDq6Z0abT2OS+6OjiuU/ob7Kcbi7Aku5FPbw/H+iA/uv/WB/e4a
qM681cC6HLBB6Iv3HAe23jyFfdjS4Y0LaMA1GyofqtLAm6U7vL6h77Eg7uAA
hX3H16jnNPahufF56HehcbyzGfuATp98/JSF9UoY+RAM+EAqxJ+pBZ5zLzK4
6x2PZFwo2aEWwoP9W6b4dwbeL5v6fIW4Xfc8L1hnJw/y3+vtjhyc5/U7ODIW
cZ55wZg5FOCTfMewHRTOl93UCYN9IL7QwrlLVG9YwXWRPkAg1vXg6OuBYyIo
wEvqK9O4GKfbt13cC3ma2XTluwH6AsRHpdmjr/XBOwef0rBf9G4acvHvRi3L
v0GhT4zSn2oK/euiWdG6vTDc54V4qeLEJQ/MWy++DcRR2I8ZIBGC55nvxlr7
U6ivaLP0BEWu9JuUPgjA/uLmOfbAE31vip3wDBLx2PkRmhSR113Ws+kn9q8m
ZcRCXjuYYyA4KIH3YO/3XH+N9e39EHc+1ruGe5d20KTOL1V4EOLbfOGlSTrR
NIkqtkn7kYE+9WPu3FuB93E3tpz/g+87/kYvfA/Ir6+vCyjsP4hf+ZIirp81
JmvfoQDn6u/3u4X6ATutJwXhvfSCJbr2NM53eo6D1xn8Lh7WSAQ80xX5yxPw
Wd/ftffrrvJIf8WLOV/hZ+9d44LsNXjfvvHoh0oK+wpPyqpift+UITeE8zVH
nnd50ng+FKu9EOctJL2+QLzEllO6X15Q6CNTq/EHdc8c9szTwnvsFWmLIZ9k
rtMK0xuN9wCz422/Ypw8kws+SaEv0VBsGy3qnycMjfWzbGutKN80XnemIY/9
ijG6IfLffn/yDIU6PzsqUC/ixP2B9iYKcHeHgH2Kc1J1/p1QN5ZO/7VNzgHx
mmZgRjcPeGSt/YdKHuq9btA1pVBvTSsT4jTPfXlboAPebw2lRXrT5Juu1Jz7
wTgXumx1jzlNZmafDNr4CedOTnEbljHAS494XgJerXjAbXuXNd7vCdY4qrDA
O8M22+QwWIerotcz2HdUM2sE1m1KnJPLcjyfqM78E4RxFuU8APVoWVuGUk8d
F3VD3wKgIE+fp0n3wb7gFQcfYvqwXzr9RjEP4mfU25hDuTTgspqjm8VEPnPG
6mp4vplSx3+A/j2c+0thXVN+L/U5yNLk86KBlBZJliS/JWqLafQnE6w9vQZ9
HHZQoxbinKbW4ujPov4sswPaLOQ915aBRhr9hdnWYJwj6j29Ug34w3ejrfu3
cAHPiQ2NiuYCfjSmLX0w39D6xqfx3v1fZMQ1GurK46LTXgyZY5epm/uUIctc
ysyybjDYf/Rx0VQG9d4KJ6TAei+q/rr7PuRB5XF/d7/Ee7M6o6f9DDleVTQy
a4DF/HC8O5qPusCjv+7nI97Ou0Gx+P01ZSoZUr9yVNyXLdjHpS7BMcJzlPZo
kzK8dxx9TmG2CB/vr1ehsc9K3EQNfdWzxcf1MMCrpPcvDkbflNP36rxZEqZr
sSC/l0F+NdzhgLj2zInpV/B1CzsPAg4QWi6Z5HSah32lt3MMKOxL3Pe6F33M
s2/IAm59efpDl8Qm9JWZ9DObwj6PhxM3LsS6NiK3QRvnMKyFr6VYnKd8ZGQB
vKk19Y36G5aot0cEBpqgLvt2/3VH+YQ10jhhCvmdM0XaLcSNT9o90u5My2fR
r2Wh7g+cB+7bums8g/Wiu96XJmUzFLbf6uFivXy5Mgv1SzbUvQvlktLP1Xfm
hQEum5wx+2oJl6zq3SWb780jOn9/b1XJpCAvy+nMmcignujQJD/sf5ZjQ87x
Sf68lYkh+1HH/T/vssnow5KS5j8bfW2rLqjJClHXbNodf9R71l38bSfqHB+S
yAnA+cXg4bMB6OcgsNXOoXEOe9EoCZr0au25l7ePR0zXCWP6gFdIb1arRD4f
l/uJtrnOJTVeBb2/C7jk1/L18pOniub4U5Rh3ebYLZywKwfz0hPTj/NZWP8G
F/8C1AtfFbqpHvnnwt3Oi4SA706SYlMh1G3prMpq9Bkrsv9cJ9KXaN96h0X9
lPaUa6K+7rjwcpHeR77BJBo+p1G2xnmob6MCxu6FOruk2fjcJMBp6q6f63+e
46E+xLzUXi7ixOVN11HnVKVT9Y7o3kj6sqifIXvj9Dk8crXIfesWY8gjQ7Rk
KMMldQ9aJO3yuURMZ1GwmSsX4sfzzpx/OB/SVffsLQfjQsP2Ec7Bbvkefgj4
RYDRqX9bOYRxbX5o+pyDffzv5S9xifGskwtn5iFPqEjLKqcwDgrstCmc5/98
fhOPlIUqOY2t50J+bsiILePiXH2stgoP667ahN3IM3ynPNqJegE6T10/c0lQ
hsVuRQcuCRBz3uPVySGW26/nTwUe+lgzJ7byDgf2Vcme7WPw+1pnblnHJYoe
k8IWq3KhfuQOTL6A+i7/TJITODi39LNfF+LLMWg0ZzIP/11p6gXRvc9K7EMA
5jThhg7g9PKbHS4pXHifoz+vZXMBn5rI/DYW6WmMdTqC85Ftkx685mLfpPlj
fw76CNWdturGfnW7rZVdRCz4SqLJhy7s++8wc+8mt273y82P5gD+uTJN7gri
QCedD+WwDp+HamOmcsmhugc35Xkckuqbt1vCnIu6Wsdjf2J+Chm86o/9CRNT
32UjHv2tzrZzyedbGyJcT3GJ187pa06O4pGWd39KtVgecbtMF3dMRZ/u4ys5
TYCfupOUl77tJh4b743aur6LPLRo1ldy6sI+pJNR31FH45V2mAIHz9tCOlu4
iH8PZthRwIvWJ9E7RfGU4nQBdTy+pHxWxr6D+z4zAL82zJb8lReN84O2E6sW
4vxPww7fCB7Efau2iZBLlh+s/O2mygM+rJ+ZRvEgr/f5NH3Ec/pHoRoPKdR3
mUV6kWdam/JfdZOWzaqVna9Qv27FQzG3buwPlVh7lQN52CO+yZ2HPG9bM+A4
qQnK9sGRONc+oN8fJfJ3SmqCemE49ZmTijTgfI9Jm4cAr3hfeTR52RsKfRq3
982isO+7esUhXO+4tivOEFcBWcxX4PETlyk2m73Ez2/29Ko7TSZJNCUntlPo
fxt2bRnqY8031G8Evvj93xNniJ+F3993L7qPetUvzaZuofD+cXBXC+LzQeUs
yIvuhwsll3ezJP+6YWzkf3ie2NFdIOpzPmlyMRH7ZaoTXLcweA40oKmH98ym
UTtcgecFWRo7Ay4/U/FrOvZNfTJTED+H+tKzHz2JaoA66fU21VCDwXPWbbpl
NLx/1+yqI5i/tbs6KnA+eLSRlTzO+dy3vnAKceK/5usSLOJQk6qvLPDfd0dV
fJEH2PAXzMX7uQdt+ZUszp2lBi1mCZ8W8810QH/O9Px9u1jIywKN75Ys7PNy
51jgSd93z8owBHzK3RGoqDGHRhx0cZMWg3W3OWwQ5wfPtS4ez8LzL6k/uZeB
v6vicA/wx6vWsPZHpiJe+eiJLEPe3RTkzTzDYj9/+qVTOC/tVz7+AR/iZvhA
iByfjLmVmXmcsKh7YORQwGAcN2x7gOf8D2IylrJkupR49PZ3OA+xs2r8E5wr
6vCqmgD4ZhRPIngVDftF+HL3RJyD6q6ZMoElV5f8vlV8kgV+q35jaC6L/H+c
0z8acMOsoHIdmnT1PPswlE9j/ZabqYH3HYt+DWzjYz6kKpv4WN/6uqbxSUx7
rkorfA5Z/4r3N+H39/P8WhJ8sR9/KN9gNIP9XJkysM73XN5OrE5joW4Nbl5Z
iH0NzkNK8P1b3rlvyijEfrVSJ4NkBvFG4UYH1FPLnjPTCPv4piz5z0zUH9jt
85MiRdSDuINVyK8Sb5U3oH7KoajfO3HeYr/4JEc+zg8pNljzUX9i+tS/DOah
EJNdNM4xnzyZRqFukOX7ToqsfvxvoLEDdXBb4m7WYj9sALlhj/38fgr7/NCH
Ymd0D+D0i91eIc+68FzycO+JGpF/6taryizqCGe7ujAkKGKDn9EoGvLTzHuP
l1KEuGs0779God91HS2g0T/0yDFNFvXYN8sXoZ9BbkldNPbh/rzcvITBe8+P
h7tQn5q0G0Ddkluaw+13xznE96XaKxj0h0urB/zpbDO3tFpXdB7/4Ncklmiq
xps1emH8PNR0+Id4LmiTdT6D+UNjSSxD1oYepb0t4N8nph2c1MQjX+L/JqfC
Pod49rnkB7wh8HOOXi7Ga9G4jZcA3/L+TBn0xH5+7z3HtrCQT/r2TgxhsG/7
+P4DNMmbV1skeRzPT8w9w3cxqM9F3gLuvHFRYnSzCYu6I72uange3mGh8oQh
Yecsjy+/is99SWLkJNE+SB3ajv1cjnolNI31cHy1I0XWdkhOm9LPJfMEzfVP
mrnwPeTNgxZRgEtaHqR541xofv6DBOwfcJwn5oV5w+6O+U30Gf3HbTFg4fvK
uBY/Rj2XRZeXDzPA3zrNW6/jHMn6UexzFvCEQW7ocZx/UN26QZ7FPu3dhqfx
9//6R47Ge9Fkz0+wDrOsVo9NXMsAH7aSWgf4ZJFBEd9iNvqO2s4/D/XwoUXE
eu3jPMwfRzum4vmJapxHKN7LVS8+6Y++Kv2pW1pwvlvTTBtwX5nkHkHWT1H/
Q3fxR5b8CRN7bj6C+PtD7BtH9J02O79eA/0HerIOv0Q/ueRh4RT00bMleXdx
vc9ltCRgf5zzBB6sz6udRfnvIK8/n7/Njxmg8dwl7vws1F8TmK6HfN4we4mc
7X3c53Wa21RFcx/q9proe8VIp5nzidW05av8DfDe0E2n0Br9jf1rG+TQF1Lm
q+cI3q/mfy8cj755f8QPwb9by1r8eGUgwq9vb3xjsY9Ip2Q3C7yu5tw8HRb1
oa0oHoP+4klT5VDPKMjkhhDn/mYUSZUziEs7l2UyOFcfMHGIIRYF3y5mNaIf
1PCcqG/weYpmrhk2Qz+wq0p5OXyy4o3D9tB56Ju1qdbjG+aJDNl3gI/PWbWV
eMfgXOTqcP5ZyI9DCS/Nalnswwm62ov6BMcahnpYwM+hZSbtOMe9tyKyGPvS
l3j5joHvpcM4zTLDfpS/2eMBtwecnXN+RhDOua3xKu0EHrdUeelgG7z/jVmh
t5+gnkZB3utFon6Whh59IfCVlJr1KwRYx3fPmMUHPHx6jtR2FviI96pfXAbP
hVUcX+B8SU/I/QEG6uTvM9H70Mf6WEgS8Jn4xWIccw8+SR+5e2Rwj0jHbfoK
F/QJm3KdD/t6OP+eH5eHr9/jLl0C+c9dNsepAvXVViU6+SKvu5x04jz6W7r/
Wd6GvhfDXkf2oT/JJ2NmDfqAZGW9dBCSnO9Pj+fsExDtbbvKW46h/95dk7/i
qFsy4VXVbfSzFJ+wtx7yeEnpemOIBx0t5Y33K/jkatPa/ZMmCxAnjjqvKMD+
DemgJ9gPUD9vi8iH2kjsJfCqn307pkVlMHgOufK3F+7/+8vWPhTxIQnrKyJ/
3SIjBucIdSIiNdAn7d9ECS/sXyhTDgxAv9iPl9zhuUKePeL6WUCCZC5orj8l
AB6nZJi3RoDnc+PW7BagLtm9x1kCyGupMQFcAcbDyRYu3q8d9piXgH33VMSF
Jpy71E8J3MwC7zS4vi9QpLPSdn0W6l02c9p+4JyRQEypAueLDGzSJuJ61ye3
f8S8UOKYyUF+rP49WkEIdVjlo54v6pUseeOyG+dJ1zo7+AiJTPx7O/4OIezP
mHg/+Kk7851wYI+QZL5QVO0Iwb6HSs37HkLATRapDHxfKnVCy5Q9ovipe3OQ
j3Va0vkb6ub0ppd8YEnMXjfPH3X488bNmVJ8UvmrnzkB8TBPoDb4XR7v0dUs
62+gX2tLSLyikLicen/Z20wIeE1q6QEXvA+OP28Hn+PnsSsv5YPQp9Vrhvly
IVlhIVP9aiLeU1eNeXoY9bbGHui9jv6I/ymm/sB+/lkXKmHfHDtkYzk3kUVf
ucqaWzgvmrtYqQXz9ky/yDbIj1dfKM9TRT+ig1ZuiSI8NN9qG/oKrqg/Mg/7
/HncNavg/bctDJ+lKkQ9za49ckLAvcm7dCSE6LO+Tr9LQPKVFBm30TjPoZSU
BK87OtaocSqsf5xlk67pK/QNPTNX5wSfMOX7kw7GshCHPh63ZbA/4OaJA5Pw
HNT1W4wti74806r52A+ZYByiBvn0fEh96lHcN7f7slYLSLNw2Bz9bdacl2GW
jEJ/rUFLSzPsa/qjbQrxfHLb4ZS5/uiDqWhIw3PhtQynqqbAz+LIqVskhUR8
pdmrzbBv+tcsSL65XYj4NnDgpQB1Brirj6CP43BzsbtIz7XsyXPgv9uGxQX/
McBXO+vG9mI+W7XcQIUP66P3X9o64Mt82VOGfD6hJFr/aUkLIQ6mHcD5lkqf
+FjJiQLYD5rjF77ik70D7zXtdqAeVGP4m6lCiON7pU4QT9WV1HT5DRhv9w+a
WOP+zt1ROhv7fsLPbpuNPoZ0cudtAeTZ4eqkY+gTpeh3OIwlf+N0w72aEG8+
O51YiOcgd3PSG1BH6cTUO9NwvnFJ85cdgNP2mgdrzRCQO9M77WUthFB/hiXK
FXAePEpvVwrO0c99aTlOiP4W3x5MQ1+rsLEPP6Ku4xjT11BHVvVqynVZ8tEn
d4ngHR/W++sYrbsC1NMKOGosBJ5aPXFkPM6P/1AfPQ19zHcdWA3r5n54nHlZ
AAs4ZMbObEX0mx84NQJ1uO/v9Znio/Gce9OPmav5EJ9nXFxV0I+4rmuZvBDw
0Xxf8TBRHnG64iLyc6RwfrS60lb+LeDC0sD9cQ8zsH/ReJXVfhrnFtWFCbjv
FYisLZ/olshvt6MEJCGoOKdiH/pUThkXAuvszkSGDzMCYr0/r8pUDH3IsuN2
wfvnrBLr3MNl4f0K5TjZWI/bM888ZQEvN1lpT0A/rj2f4+7gfEl7fqG3gKgV
i6dvTBcAb26XdSnAvsLosuuvGMyDz7qKKdQ1c2S/4v1qzZpFNAX7Oe5F41P0
lV413pflk9sJTnaPTIVEwm3V7mg77HcT3MxzxzzirR1ngn7ReYPXLwtIHvex
0YAA/ZR01QpjsQ/H348rquPnd506ygK/oiJ0GkXnkdPkFuB81VP3RzHo3+mW
N8OITwQbktcuG83C55m5//FGGn2dN9evpICnb733ogD7PG07CwDPfXigfzcT
nsPuW4HLNvQJyLyo9y9Nd2KeG+3TZCvEOZpgg53Yt7LzQ4y2EPtHc9YXYL4L
XL1pDq6Ld/PPHziPeu7g60L0SZTNK4I6mBQmrrTvGdbdS7nfmnHd8iNq7rDw
PCfI5miLznHcT9kxpMN8w3Tny+ijbp967iPO27x9HaOKvlhyn6Z18knTy2Oh
BxTRpzfVzTEM8+Kmlw93CckSB+qs/WZ4fl2W/TchD6bvsg2pPofnRdf9T9sK
4HlktZxQEqDv06lZI8BfEtUXR/zkw++LWS5IYOF9b15MeQj1Y9kqH98Y7At5
H5GpjnqNWcPPHuDcxwKOMeCxR0cXPjcg6A9eukNjFZ/4LgjWUU8SQP2RqIre
i31F8YaSRNSvt+KfG+r7sH2RM9Bft+BO2AH01bon/2smzuN9kQzi8YFfLLIm
rfi9vtIboB4529hFa0phPeytd5FCn8qU8hyIQ8Chx6ekA7+ZMmZd42xY50+2
bRI12D/oGJnXjLjV1u868D3GdeZ8TW18vZyUQAv7hWBxoV6F6locmSzSSfD5
qOWKPrLyCTla6Pd3gGf/EX0161YZbMBzYoULXyFuqrouH62own7RuzdulfPJ
xGXZBc0UH+dT/dxkBOjjrib3iw95NvdbN9SVeVEW/z1fyxKTWSWSivV4z/el
xiIXdbj29JnYAF6PTjGwus8nyazurzMS2Gc55cIFN9Txq6nrdBaSZW1X48ZY
CtGX/PjrJgH5KPbO2+w2n2gdS8h/0Czq+xvlPp2Pc75pX7+gD3j0ijWG6DPJ
c/EYg/6A71+sVRDpQ2QkjBP5yO1rq8P9eOVUpyfq/Q37+PBR/zWstjKRIatn
hLx3FfEkGY4u8N8zFce2KbWirkEgPbtYAPzsk9azEyK/R421XXzyJFQpuQby
e/Xas8qT56O/YE9CPdRVn5pFi3Zbo2/p0UhNVcQvE1/vbsJ1dtUf+CiAdbnv
W+chgHwTHK1pJSARc56LuY9DP24b2/E3cR5TTFFajyWT9hZLX7rMwPpxL41a
g/P09RvKIY8BflS0D8E+nCLOb0/sJ7r+YgLgQPuE1tcmDajbJp51TkXEO3y6
1JDHy45bC3hD3fWAzqNQPpkdd1z7dwDEv7r/DEVdWH/F909WrERfsyOF56Zg
XSq1fgDfU6ia19xjgv6AYwVDP1EvQM4r+zw+/42SEYDbxc4acu5GYD9Es9/d
pQzgMc36e8dQp9CpTdWOJVlRqr//1CH+b61zjsM87zBjfCVDLqxQGb8HfXUj
x+hfW8+SiuOfmLoi9HUfqDa+gL5uH2NGjPDzPO3oCEBf5dnZn7ahn/Lzzb8g
Tsw3bXhu5YD9wX5rdSH/ddddrfFvgDh48cO6L41PXtwzFBcbBP4to1964BDq
WB4viQZ+OcMkfWD8S/ychnSUJ+pJjV/gWyHiD5NCYL2fhHaMvrIQ9/u41ZOA
R95rm6Q48AB9qteM0e/EOm1+Nx3qH3dHwisrK8zLClUdeqjfUlKq34x9dsfe
e0A+kd48xj8mD33rh7bOfIB+rXPSJEW+438SNz5E/G3z570CC///r7h1Bd47
ZKtnfUGcf9/ebxn2sweWX+KjrsPFz3d24f4bkb0SxidpU3c99oL/PlVCu35v
w/0oyHI7hXVRsbyCFqCutOu+o4jzDROXjxegT2m58wn0N2yridRHvUzxho8/
8X6lNTHTDPu5U6ab3kW/1Vjtjz18+Pzrnjf2IW45PjMRcPGZ7IhdLu0Mseyv
mD13GkvqGqViDpZjH+Yc3YDL6A/8ba1LIOIobacuqPepv8ObuM8FgF8j0vpL
BYCTBYKiA+jTLHzB+STKY6Wtb1moi8mG5SMM5JHsl0fSGPj3uiSlajwX8PAp
DcV/t1XK2sSH52h5YTp8D9+bUQWHnbFvfSTkz0r04zuQXv+PIam+Y26PvMP4
e3M+WJYlc+w8J3dmYNw/Fhi445zwuq3ohxz+Y7hAPBnzptmLp+sE5MJ/Sx3+
nsV7lrhnH4GvXdleX35kIc6jMhOersX7qLs//X5TRFrY5P0uksa61FYM+Om/
x7XXLk7iEwPf9dUCA/xedbE+10R5L/R1EfaxM9HV8QLUJ7ppBngwqniLp34o
9nF9Uu0OwXOugjcq5/H8tS5xCHDYg4Mfr5jOYOFzHkvZ6oJ+bq6+VzpxriZK
MVCFQZ/D4GZzvP9c0u9RT+E9do8PlyIfdN72T4+joX6aTFSDvOr4bJGUH/DI
hL9LpmbC81aK1T7jAThTYPkr33Ys9oV/XvmKIyBeOyUzXx4TkOyTLp8kLXGO
Kf1VxSjROfB/nnUUntswMyooyN8TH25hKIh/fbMNG2hiM+/fG3eWJn+kRjiv
L+O51M8N/ZtQh2Rh7mlJ7LMNqws6JNIjO6h+D3nC0ORLgMdvD05ukpTD+6Xb
98ugnqbvWv0sQQHPO1vmBRVhP7KHfNEJkY7jOU4wQ6y566sN9zGwb+QGmsxo
7O8KMVFF/PZQTHYsDXnoVEulBU3eLXgXaVGK/gTGw3uSsK99q8zRJJwH1lu8
MhHnHARJuV7otzqhTvMD+tjGWZwE3DKnIWMst0qkFzIpAnj7f46JVmwunxwm
YZNLZ/DRf4LDROH8Qo5Nay0D32vewS5vBud/aKM5DPCJqWb+OgzR7pPPDl1G
Az8xS9jvRAN+/Pp3qo9o3rJ5wwdcr66Z326i/sAY7e5PLPqtWEhCXhhi5cqv
Ag8qsP408kwDcWvuLX/gS8c3VLrcAV70/sTqN2INAvg54dcJwA81kSc2uhsB
r21/reM4WkCMRhZXLz7Oxz7nKqMUnDcZO3jxAwN8p+jK/PUMkXvYvWiLKuYT
4bFxXjTp+bjyvcUOGn3UCj1v0JBn4zLP2OC8JG+owRpx1v1xVwP4pNDhSkoS
wb5cM9kuX3j/P73dm99jnE/6kAzrS+n9XKv0jiVWRW+cWsT5pCFjqdJjU5xX
CFn6GT6Pzbys0VvHCojZ3LmnlBQFsK8sMrQtUBfl1lTPbSz5Ev/kimwZgz63
LeGr4PNOWP1WOpjGftDNZ0/S5Pl8u9aGPvRdVL1bdBfnqN8fMIpkid3tKnF6
IZ/Ur7zaqhCI8zTBi4T3WNSHolctwnOvtRwjBvuWPDbVfqKAh7xTcd4r8mmc
kGWAef5bxculmMfUPDcfFelkbf4rKUD9oE7ecuw/H3xiHYX3oAWffgsY1Cda
uCoMzzHWje4Oocnqx5oTra9hP4bZRfu5sH/b8lfyWnCe1v6rBtS324Ot9/bs
Qlz4LNpcDs/NH9neL6HxuQ4dG+Ihju3bfpVLfmTec/YQom/TOY9WZQryf8j3
BdMhXr6ZdAckMxA/T7RvKuL8TJWx32X0Nf/55tEAizo5K155iHCK2GNpFn1e
IuyeMOg/cfhiOM4Jr7TXKqPxnPjXLMhfJhdmOSQliHTX7GTiGNxnYwOXiuL2
/YZiGnWHVDV8sc90T9S2Ni7pLlxSvE+Ri76zGWWzeWTo7arayWewj6LHwtob
+zPr5S5B/Vz33N9sSSALea47Jvs+zoEU7SyciPMP++cfh/ybGCR9oxLwgFVy
4P2mXsQFWeP/ZNOwrx91LxegTqZ1uLaVaE7hyxRYN+U6XfXCbzT6m7SegPx6
XXzhv4dyuP7hoRoGFHn63N3jrzP6vZX+PJTKg7pZ7DojgMb+1eTcKBF+vGsX
iufPVYslklGvsmH36RLUc9g9aRPETxG1Rn7EHHiLzsWsDjfR+fX5Q90M9hUO
S4zH8+vQySo8+Hyu6SUDpgwZVuvd8tqPISN2Vi7P9RjU9fNs/B9H1x2PdfuF
lZGSUahEskJURiott1EqEVGKhJCsVIRSr+yWhFCoVJJkVEayZ2bJnpHNsx9N
RL3n+P3j0/vjeb7jvs85132uc10JNNTxHJzch3yTmDrDLfg8PC9n/oTrM/Xe
gTw7W+/Xoafhe5razfmfcDBJ/h2eb2dg3btrlN132Yj1RHZFmxOdFMyeuTSj
g89FUkNgIearG2v50pAvGMIcgP24O+FnmckUnZgLGOX1qGNdcGehK6zf/YM7
HtPP4bzzf3c0IX8sF0ksXE3F57Q1z9sU+Vm+IUbayBPcmhLdgLpGHOF6mrA+
hAOEDAfxPD010kcb8vSta54f/HCeYniSpxPno8YHTLfh3PzN+vUQLwaMGRZT
4zTU/do1/g7nXX6Vy72nQdySk9obQwfc9dzXRY0B9flG7tndeI52XG0/rLeU
y+Mlqz2Qd3phW7oxHfLOk9icOPQv/bNriop9tagiXh0a4Au5t+yjdMLbeHnE
4QfqTXAyelPwnPRZXwTgt988paoPb8z7DEsJQ32qNZFvdiIP48WzhFwG8olC
os25USeupk1sJR2eq9kWTnfU+zq6e704g8THWcwE2TFQd2zb3vn5WU6XGC3k
ZeRrfNlPx35mNhd8zq7iqJ2vNs7r4Et3pFNxrkEvYC+ug6nG06p0EqunfO5L
Fr6HO01GgOdU3PUGty/GOMeefLkbz1lXnmzdjX2aM59meOnIc+SRWUwnZf+d
/LngEvpfbDjZ3QL10s3ymD/bUa+i/sCdAAbq2h5TM2OgDpApnYp6KOVy1zTw
+2gmEhLoQ/GP530G6iT66z/9TiW33kgHmF+lom6im9MgFfL85FoNXxrU06Gn
K2tohCcpy7ZuNc77zJS4xyOfbadjB7yn2DaKSAk8H4mrC5YUfqbBc5z223MO
dRt/q5tIMkh5/VM+Lx/sb6acinuBOKW428YF9Qq27PrMwYC4F/PfB5/5fJov
pYL1Mq+75U8a1nupqHsRclWoj/qBCnjm+m8dayrqbFVY+eBcaLj29ibk629d
1T4577NyclaEhj7jDv+8aPg52R9iUU887d6rOuQliT3dY0BHvRr65eUM8mVa
8qHFNcQp8aHczzHPKKYdsYU8zG3vkzuBvB2FYQtXOsnadCjRThT/Tmv/Dz06
kcv/UlA/hfwOacdaT/RH8VVdxok6wIZRS6upEOf1Ew6OoI7E8E4hHhrxMS5Z
tkAU5/JlOT5pYn9P7HLHWeTXnVwbDusdcNtQAeQnh5NW5uGQv+srnx1dIIl1
jsRH7A/5blWWLelHP2DZRNEoxP8nlm2GeuD0K6l0JyYN9R19WibQr+BQfBjg
tYrQM9rB4nT0M4EASUOfDE/VR+irefse5Qnqsuvk88LfUbk03pyH9Xdh9yvq
Di/cVympOrCeon+NRXA7ov5TVXZ2COoBJt7ZmoP9qTU7t0fMx6k4vUPYx3w1
vaQb815ydduzeb33uPhoGvpkCQXfpkH+3V33roJGXmywl2L9oeF5Ss+QCZ20
RBZNPlPC/fRdfPVKjBs6i51RN0VlQ/X5Fny+RSPdAfN949EZASYZSS6UuwJ4
c6v1TJm5KOCYu8taX1+a122cfkZBnxVZHTeIpxuz1vwVsYH1/E9n7Fo8FeO1
qC+hYl0rrumL/MTrBzzh/aRr+ThsgfhlLsC/2rQR5ziiM8/A9SgKur7rkEOf
jKVR2b+Rt/O5Zmc1Df0es279xr51neOth3T0T7RWA9x29VvExduXmchrPvRk
iol+btbPk5ioO+L6OIOBvK6E/Pk4NRmvuYmG9UzKE0Hkld68X26O8/r7M1aa
UHC/2AV8QX7GUNOBOJxH4vOsgXXPdem2rNUyOvrL2F0zQh2Mx10fBaFO2Zhl
vH2Ihj5Q5uavaOSy72i9eQkN8twtPUNxrJMPjzg2oY7TCkmJO4gz1QdMPzGw
b/b46Ak8P3Rc3BRIR36+A8Mafch5dR6eomIfmfnxOoVk3O5Nz5FBfs/r5puh
FKxXH53WpJKD1GCvdDEaGeQzK7g4RkPcLb0B9tO21ba5cidwPSjpxDVhP9Y7
wDOYRiRXuBymrKXhPOPhx31U9C+ScS6nQt54x/OZgrzzVV9CBGhwvzS1821U
1PcwCD2M+jA1lg/foD7FxG0efgrqAAeXPJogPAHtjr73cU7xoVn0KgrEu6eF
R7jm9eKKRX8hPhG/nQzvS96roprAdUUxHobed0Q8VKZG9NGHPf6dA6w3yRTF
8ejLdPTn2yAuwiBulwpelFGx/y9o6ZjFJCKngh766WC9LpnN7466lFlx+06x
SEDMsMF5L8Bbnwy+PkhAvJt5gtbOgn1r+C5+4fw8WGcn4J3m7OmYufMswlDZ
GdngzcQ5n1V77ObjchCvO/ZLh888rcc8z9kmC3HK4JEt8xTUPX5rplyZ+7F/
XyB9p2Ven1L2Gawjr3tTf+hxTPImmvtQggUL9Uf/rolh4Xp5td4Y9dqNnksv
w3MVjkeLxFlE8cmBDbfguiHvV3/7jPqj/k8WLWbjXMT613Ms0jstee+dI+ox
8xrahOKcV4Hhpsfz/Upn/x465PlY+0pDOpHWaVZsgDoqrLc2ohjiVNl/xUVN
UNfs4zxuJcHJgPtn5j/vw3522NfKItwH75OFNPCcM3rB2CSeH5Q2CQOernSo
DxrhRL+QA5avVZkk98V0z4p6PBe2zm2/xII83Ta+mI8N/w4XiZLDOdgl4U6t
LOyLMtt4UO83/OZOXcALzn6PbtQwIA5LVmw6y0C9AymexQzUz2nNiJ/v6x50
JPh8Zce/AZ5lr3Dydn8P615t7NVmOyYJv+/e0X+QSe6aabw97Id10mafGIg7
gZ4vuCeacO5n4TWqLB3jQRVrBT53zc82LtgXfun1JQ71xdxsI5exoR5am7WV
yiId49S3k5Ys8pi1SL53CYvM+NWnCNajzhV38HQaE56v4udPO/Gc8vni/jg8
bz5rF7gM9etMon9Dvo9pq/s054c4jatlogv7qv8KzA7P12/d33poOCdxo84e
49UxQd1pCuRxOXWNONQ1ae69AnUsO2VM4N1/DPQB7K5iIf9lFc3jFQvxYMSe
a7A+jn49cgBwnPbzr6EThjhXqWzmEsgi1gedSr5EsSB/iwu4bmJhn1k77AKT
PD3jOeTRj3Ouq7z0/6OT+9LMgdq9DNTR4Ph9kYG62nlW0dhfrqp/8AfxhMmV
A2PIz/q76/IiKjlykWt7vB3qSfHk6zTQyTH662rsC0Rf55YsWcRCnmlhsh4L
40DE8XEm8lx+bK1mwrr044ldzyK7vhqvuFXIIrnbJqSFYD2o9FW13S9AHddk
4zOA8w41Hy7q+YS8aKeVxbCPft3fXX4a8iRn/MvlOioM/P9l6/bRAQ9mn9nG
N487vY6l4VxOvoxAOepefS7x9sf1siFM6RmTxPOesNW3x3l6U/FCW5wbvcd/
hYW83/wCw/m+0oGlIQvRh6fm6IX5fkpzd7I3C+rJ7U9XfWMBDrFQXv2Rhbwu
mdrN+Jxt/ksepeHcQEmfD/p6ZaXWz9JhnbiktPIhb2BByEtryMsbVT0pYTiX
YrQwqhX9BsjzpVCHWEkFLODXZWHd1aa0DM+hfR1dNNjk9E4bplARi6w+PKNm
DjjNS+6+pGkY9tk0WkysGYCD+4P5tiA/Iu+37joWWTKtLeeUzkIdW+6QZyzs
98Z5CLMgH5ksObNwPk7z11zBvDsYxMPE+qbRNqcXf4b/sIb6Qd5sL9/KMpxf
CTgz+RjPy9gtVo+Z8/xcsX1sPI8a5tZnQ907oaplNa9rO+zJjT/3uW/3ZBIx
z06ziE3z6/r3DWkGOc8+/cxrKRP7M9UV3+bfd0uUL4v8NLi8duNp1CEOcRSD
9SCZUju3EPJbVavyGfNL8/pzwV8AX0E8/866gH0sfamFNRiHduecvwT4WP6e
77tSOuG/4LZdeBzPEzcPGbuxybOc8S0xGhjvmNRJRzbk7fWx+Z9YcF3H3ONh
P/7X5Mm8qYo8jA3HLwKenjLjNJMXZKKP9rpLNCb60mU9P4PnEdlinbBv/iPt
DUVFyEu4+KYZ6u/VQ1OnRn0QXy2SKYf8Du+f8ZgOuMpT/ujulegHGl5qP4nz
ChUrI2A9LjhXzpu0g0ksQy8NiySziGhY/UysOBvyjOy6v3BdK1wYYyuGmSRJ
VqwrtwLPE7+UCRkiDzkn0PETPr+9eyTn/a8eit7RxXN9BbZuNAvw7PO/FQYs
wGl921/lMZGfcS9PfB53vw6wR7+cNt1MqPf9Ms0VvvnjXFXPhEoiFXVeZ5Z7
U0lf7p7dfUHoixlXwGaiDlBtfuJy5AHsd7wAeWvGb4lIuyr2VfLSBH+hHtCe
HyXHGICbvpbNfoZ8cdzndCzgJp1J+85GfRZhWcp8Nx2Y3x9eenTUizcRcEJ9
Df9Qi5o2JnkXPDuZC3j8UHOz/rPLiJN3enPrzOPnOxaPsE5dvj2pigr1XKWe
bRAVcNM3/UZLGvx+pJXyWazvTipdvIa8pSc9Cc2ob7yEKlzFQD3W82ZpyDfU
YTrFYj9M6VKoB5MUKajI6kFcGUn+U+HIxSZ7nW0m7Ldj3ynnktIm2F8mD8XY
VJy/Ph5fKYz9xc6W34cB3z1dQf37H/otpOl3G6JPUCzXBJuG8zRfD3jTiJDv
1qkg2L+Ak6l+11Cn5d++tJt4nptddf8YE/1taDus8Jzaj/5Aiom8xp8D5Qyc
f0gvHGRAHDyz4eIHyAs3A7KlgllQnwot/6LChrrK3rfIBPtOTZsXHmYTi1DF
x4+FUZfRMNVqP/IL2gRuHqeT2R0Rsvp+iLfKa9adne9rSJ6Gn/d2PBV1Dgec
1/XvfoYOnusG3EJdhrrRtS6aq9Bv6ctI3z0W6s1Olpjhuf3F9aMFTMAVw9fn
eLGPvHx50ELsL2VrvSlEnmfRNBvqCIGNulyB/GyoG7Se5MFzazlnbL1gN5sc
r7dbug3qCmcOY66rmphvEgPUJebnHR7bAw4G3Pdo6CCdRPoVcv2KmD9vD45a
z5j3ze2GeEWqi34ctsI+rbrgsBAb+519uuvZZMUf5buqOSycq9d9PYA8JaF7
//4BfnTk2RP9jQE4pDh1XifBPem/ASEWzrE8C8rF+5EL4udDHzm9nRESbNQP
H22pRf0AuvMhEcjfl1w3RD9F3ZXqE26ZNIg/YqdTslF3PWXn6e+AA/aay1tn
oB/QXF0xrKeUCd41RaXIy7llbflyXg97QQMn+tHtjn+Qi32Z8PHVrUwSoXY/
KZsX4+99D9NJBuCbXdsWmOL55gJJIcgnEP9WK8djfrtbs2cR8ies8xThOt3i
V/pzxKMOg83ovSHI34cL7EYYOE+1/aJQJ5UI8f0M4IjFuSSjLNdLVORffJd5
QUVennmCFM6Ru4f+rKKhfk09RyTqGXcbFq5k4BzKosLNDPSD1VUG3Ggyuyom
5zPOwYT1r9TGecNovg643gd9m2WvCKEOu8TZdfCcJFf4JrxdyUYdjgwlqGeD
VdwoD7yxzrkVeDSBSW7p2I6wA+fx9r9vOlR43hqPw9B/MCHY0nqAgueQ2XPF
OH+tbamZC3X7t/Ond6XjPG/4tNVHCuCLhGnqVwrW77EuInhumtnCEU6F+mjP
sJQLnrfsXR5YQsd5T4tG9EEZf8XvfZhFhmved3+FutU1vsb9CTy/b/bpx65l
YB2j+PApBX26HGq8uHA9zZpMbKaiX6e+UgoF86D6MYV5f0vZpa0TpH408STf
2wkSzmOiqlU1QeyZBf+qllIAJ5knvz6H8+xEVrdnfp5Bk/c/Kvlj9cklfDuN
5NSuUC/XxTpxzP2/QwzUi/7e7sbEOYo9BsfQ/0B6ef8T9MN6I1h2fv68PPFA
OxN1mk7liDARN3TdN4G644mFb8JtjI8WD9o6WZCvPIMewP5edny9YNBuXBfM
UyqnUa/fR0bUG/DErM1pCw82MbhCAtxt2IDHjMvtLbD/51N/9ST6vElfCrSE
OPGy79eJM2ySuEtVz/Q8m2TM7GrzuID6QzUCid4YVzpVSo8hv2ZD2UsdNlH3
Gb02txX77s8fXlyPn7dS/uVaNlFedfJfWDmL3NRh+z9ZjnoQNNXQnag/JOog
Z4/5Pv1mJ1yPa/yVmRvuqM9xQu4r/Pxw90L2WbiuLnatp4IXG3DLU5ul8Lmu
Rc+/y39gQf0d7jHtDPEr4IqD+ynUsVXQ8o5gkZCrtpQPZSz093NV4EO9DuW3
SQrwOQHGx9Q00IctKmPEAPkd3PvV4HPb4rUozmN4zp9GPiqySZXuXtE1h5GX
ZnznDzw3k1lFvig7NtTp540bII76510aDJfFeCW4eAE/xlHNTlkd1JV4lpMA
93/ZN7kk/A1e37vSZ4dRB2qyKuki1qnG/cldLIgjf1YfEUN+zu1lqbvYsD8C
fytpII8qjWdCCPsnZuK58zyv1WZ9KqjLK5JmMYufc4pXaCPq4S7aKWzEJrqf
mTsfQL00UHLIo2zFvH5VzEgS6kpRGxw5Ucc/qHTkPZOcHW+YVjzEIr/yK2p1
96Bul9GIzW587z7+Havw+2OH7zth/ZV6tQC+X6pl3zfJcKyP193wgjqAT/9n
5J23UO/Npe8eNmSTuyMz1oeMsE8c57vgIBvWPe+aDgbivqs7TFfjuln/5oMC
6mgdv/jjD+rgVz1M2Y35ULv5A+ABqO/qxd8h3+37SmnIuztkK0bMjqPOvZKz
vA/8vvxBhSFBNs4Z71YRRd2nt6v/uwvPbfSGUPRlqBtsOjijixlQxymVcIag
zq59UMty5PemtvopswAXO9dGwjqLzSp6WLEX70fQ48snjNN6Tw9Q0Mct4291
PdbDT72dAGft93DWForAeHvs++Fy7F/O5SyVRfxzYohDgUF6dgcsjFyAfM8W
zTNMwBeDMisPqWHdvHBqcxPym8Q/t+xikg1t6go5Vsjj2Syzf5RO0mxFnKn1
iCeM5hbaQ92qbBxxxA31dybE+3eyyPe1y4M/vAec/zHEPaYI+TtMyuWXqEeW
fTQZcLTgRt2jDjPIf2s6YWCDuKLS+VQzzj2mtFefQz6CX8a1Usgnl+/PLnqC
PIhDfWsVoX47pfxXZhB19DfeVdoM+azvucuml6hLo/8jdTuex8fE2u5nAF4w
MT0Bn6P9XIX3TDPyW+4bLvFjwjpYcwn78cba3xfRVrJgnye81sifjz8f1K9h
3J7ROAbPWd3nbMbiTuRnvSjc/QjnNkaKqNeZUA8ltt91Rj+Jk1L9UPd6OkkP
RGaxiE3BZFpLD8Sp9PT3NaosIsF/PiL/MPJMom5pTDGIkWiwWQDUy/JmGa9F
o5lkiVOLMG2aSX72/uaLlECcedCCbMF9zmqRne+jq0ZHdjChbuvK5nzNQp/S
Oh43wPccd1c3LUf/hA+spS2IExl8bydxLvH75jM2LLKP0yRkF8TL7+FJVV/4
kU+6uy74KPzs3n/gmyabyMy5H7YNY5HOJMXPBwHPpWeULQjKYRKNZxLXZP+g
rtzcG+y7Gr+e9ZFSRN03xQZueTbZJL3ygCjEmx/hnJaRXrBvOod1o36hP8Uk
354HLCKt031Z1hTwSe9Xi+yFLNLk+MjyWyPOmbjWTK5Bv5I5g/YvLNIn11Pn
AvvIp+RuiKYtxpOzt1PcsO6IVbM2Rl9E02HtTBaeN6SunGAS4SAnmejtuM+i
/0lkYz+wesfoZoz32zQiHNHvJnfbbjvk9cp36GxD/m/Ij9pKyC9OJs5bYR1P
jQQYdsO+q3T4duqhFOwTc+Z5+a/IOxYbLcyA9XBAI9tIAM9fimQChljkwCOO
xYaiiH9uHhTWZZNLfA8OLNjCRj2O++I0uO/cFUnpOiyoJ249KKhHveCnB8OV
kUey/+4liCM7ZJV+cooh/ty84wA878vHu16Nb8HP4/f7JAn5wejiqQvdqK+Y
mFR0jkXGmnQ5b5rjuj74vg3WkxAft7p2NuAysQLa2Rj03/oryoJ66dYbZ9Gj
HizkyxzxB3zaauR7ng/eU6PYBZbvWdQLT7v+E9br8Xr1vKEd6AOn9PeOIPqt
fVVV8GdCHKvdffM38jQlP7RDPtkzw/2NHo88W4U7GnHoj9nmw4bnuzx5S+ps
Ot6no5RcDJ6PsWPfHUBc7NX/phnrx94dL2IwzjUd/BuMfIIPMt4PcH/+NVVk
MwEfym0cYiBfNdmIWsuE/F230MyFCfh+snqAhefPNmt+eDBwPvZi6WkGOWv+
k1e1k4H+VX779qEefPsVvVTkR6pGZfRCfDc3yt8vgOvp6H3ukyz0Exy5F4Rx
8GnI7zssklW6py7aAvNhe9enYXyfX87zFKIPruurpWXIb7BPbBhlks4PW5g1
gri/jB9Kfcb+8m3N1RZQx198nhzFyST67zZn7j+H/iURkwTiSHcjq1x4Jc4v
mCZ/A3z0QerlI1sJJuTDHFZICOpXzS19AuvbXsiJdVoCfWuPBbm5oT6Z6vee
//D806OjG+K690Kq+/bLyCc4OG0mgfFvZ6ESJ/LIIleowb9/e72crD6LfGrV
L52PMF6eZu6C+NnwdMs3Sdifu77meWw9jecA29X6xpBnpJdyowH94PxD47MY
yKt5vEsa8ssOtfGrj/D+l26VkkL+v6cF5wHk56eGLoDr2OtsvPfIc8w/m9Nk
ryM/72/Nx0ss9EnnKbnCQn+jN1Q7FtTpMesM3dBP2evjwkQW4CLXH5f5sX75
F+wK8cDlHO+6hSMsohMoU7gK8mfe940vxhaiPh8pDa/FeHR29m8FE+rNPUFD
EN/6cnfxvdRB3+gS4Z8eyHtOHxHvw/s/rPJ3Au8zxO7UJAvwilTgnwQWGf12
13mtJc4PxHNYAQ69GiRIrwactN7q/lT6/HveUtQC+6Yv1016BdQD8L4E90I+
/OFWcTtHBfmQ8W+WAN5IisoK+An3qc77hd1jhOu973QSxE2b9eLaRtLI71O7
XOfHgvixV0IRrsMECpW+xViXtQ/dEWcDHrXWGl4KdVyDTQLzI+YFJQO5w6hj
NrnInI7+eKnNr1Ln+Xlfj6XjfrXcUAXx6qK+3DBNBf2wfny874bv2/NRTA76
LHFMrGhikdvhDvTWYNSt86rdBe9pq/VMrb8ixtOgR2KQNxQqMvUeQH0c6Nnh
fy8F13fRwoiJeV7uoOlP9NXK1kEfibPjys9lX7BIFMOt5Jgu6lkq/v1TiPip
XNEP8umV5KXc39cjfzeLaycv+pS1nmiHdZ6y5BBXuhrm26C3w+aI09Tbkk+i
j0+63nlRyMfS9ynpFxnw3No6RZqQVzP6kC+HjvturcByBvpALY5/hOcI1E18
zthXCnhVNQv1et6be99gvV1IP9G5Fn4aiV7s4vzLJDrCgxTDOCbgxxXuUjsR
l0pdPTHHgPo+u2NqAn2wGpUKKxnoN1dhdwb5sYoreg5j3r+eZHwQzyfeli3e
g/MuS04yeaBuOdYjusycTnIsRnMzAgB/5uz7nsZJg/isvS9mJfpcbtEWvDbv
h0zn2o66OrIHQ7kZxP5a90n5NJx7spIp/on9HY+V3YCXft3fKPLvO/qC+axQ
HsI+cvZc7BDycCe4jsF1aiWInlQJbiZPptR+WiU3EV2tl5KLXJvIiv0RFp6b
mkn4SNb+2wdaIY4Pcb0q7MB5cXZ1Qi/WTZycrAHIBy7yQ/tG4PPeh14/Oo48
aJFYJoVc14xVvtqGfnQFDnJ/6MRMQVtw9XrkkXZKhe9DPKceoZtNJRKPrUtc
7XAeeiaUnBzFfkvp+LIhIvVG3eqwYj8xV301E3qgiVzdqvy7dkcjid6xYNV/
axrJkltfO2MSm8iSziSzws+tqIfF4WTbhfq93g9F+slicetdVs5DRPyxNcXl
9ijg+eu/TBvGyfDWgotzMegzUP6oaS+NfP7duvzRPTph1XHutj/AIBt+bZPS
UMe+9BknCuA7yO8ZVbup2Ce2/CA8DvlZnvnPYhiei3rew+GvhFdc8sD275+I
4ffwi1yrGojUCiozLrmBVB/0KZy2ayKm7/uPG2e3EQlLh5id9G4SfLVprUDl
V+T12FZyD6N/mXTKkVHUr7G9ZDBGon85tvOsnZ+LvzD+Av1Js2uPnaXivL/r
2kLkRUQdXQnP7+nUsturfqIOSJ1L1wkq1HmtK60OjkN+MtwRdGUY7veMkcWi
Afx9+uKNDeSqSKZMkEotefgsKViqoY4wLSv4drs1ka6k83viItsJh8x/D4x4
e8lX442xytYD+J58ypYOk+Ayqsm5syOoz7DkzOYR7Psu36E1gjwq1ZGUUdSH
8Rj7jfoC60KkaRQy+PCtwqO18/rEgje1aXgO6WnzHvVKnz2Q8x0j2/ee0VLK
G4L7sc0V7O8nI98S7XVv1BKRb+Wf0+0+kIn9mWbCuTXwXB8Pjc99Rp/IxKEn
7UTzDNehl/y96OvqdnXZAImoyJU7JjWEPpVi3glD5Fb4yIKe0kEipfNWalHn
IOoIXGP3DGMct+mqHoN4lHwsfScF9YWVap9R0Yck679KKjwH3TX+zAkS5qZg
IuE0Cvn4kULqw0Goq6SzY3f1wXpnmav8+kAebpZx25RXQfbs83BvuvGBBPMb
+yeKNOJ58QqPl23E78/MlQfXu0nFS4e/J+h9RKRpxK0jagDW8+unB8oH4Pc/
32of+4pz8Pll2QPow5fj92AY8uGa4+uExonhi/o7iT0Ucqj57Z8xDRqh7M/c
rcqc1xFimARNoH72MY6HI+TGjyva+vD3UGeo32P1Ei6NZbLmjZVkFZf5SFR6
GZni+dpqG1tJglU+0vS7G4iGv8/CCOVW4n3hRB/zUifgRpWamz29ZKpi5Gfp
UD/y9VJWPflK/uoVrHba8hXwxNrrAnsHSSgtMqLn3whc993+ydIJ7Odc64fr
ytynw9bfiH3AZaufHqEhb9An69YEcTi5K2XN6RGMTybHnAeIetWFlGPevbC+
2FeqNlUQk1hpaffNJUSOZ8FpydZy4pTtoqTwtg7w1HH1TfHNJKf2l+eR9+0Q
B3x1kl73EN3J4SAfm37Ugz9gu2CA7PMQO98WNID8Dqfm7iHAb/FWaR/HID/M
il3bQCUrXDJSQ1ahX9f6nyeq8JxRxyfxAQ39Mh8tqZ1A/aX0N0kjhL1CUVWv
aAB1NJq8B3qJv7yuqN25cmI72nQCgBzqA9a9jCkjNzQ7TqhV1UB9OpYvZ9oE
ddU/X+d3sI9pzz7F6/UQD6dlquzefpKmte1bGVzX39PHFCWtB6FuzrLr6BrG
c80Vwn6ox2X4qlifSt5w7rv3V5KO8xZrKt7RkQcVivPkD/o8TY4soJC4QvOu
qYWjyBP0y9QYhHW5cJtx8BfyUax55kxkOZm632fplVdEZq//kHANLoN6Mkjh
mlwNfJ9HlPmSJuJuPrfCGeLMjqiDBpGnesie23RBn5/9UL8Ppp+LGABc4K6v
eGgQzyUPCt4dRp6euUjVGNQBYxuOXacATtK8N/OIRpbK1drW26N/aF+AVSjy
fPRf8AhTiAhxjF9xYpQkF5eLXIgZJH+zdr4+OwzXd7KhM06ngtR6l8RyOpSQ
ogNhp1t2lhMT19WPa5RrcX3cCuhsgn29adj7djsJ1eyIU3jTA+v4hEePfz9Z
51Vx5OGKAexDuzKeDeAcwpndj4eIGJf5nk2Ro+hjRsTg/SWMrTnwfj3qfPUk
2MhjvK48u/ME+rM4+u4bnMB4FFipPUoy3y1sonkMEuuz3K6iEV/IyClpw50l
FUTqh1v6241lkFc8sh/triCKDP47XrfrSImqhYdyfTPgQ43NR590QJ3s+frW
cA/qnrR8+NaHegaSxtR+8mKDHrm5ZgDP5zW38w7h+WbemmWjcJ2xK1qTJqCO
Se/+pkzDuer3oVM0wIPJa0XGqOR9M8ei6G0TJKqhdPtgyAj5J72mcCAf1ove
jpdtvr0kYsSD82FYBfYHPi10LSOXShJP0FsryNJ76xP4rtSTxt9mTN+IFogz
bov2mnUiT+/Z+QW9JMqv8O11hz4y28Ckzuj3z8//z6oP4Ln0un3mQ+jPea3h
9SihyqsJ5Osin3LTSDvUEyWqceoKRTTUz2I6C1Gh3jq4biVtDHkXm69KDJOB
gYaT55gQF5art7vSunE/5JtRYf35uUzVPSolhqJh/xz1KwjvrbXXxfvriMEV
TqFN9i3YZ83fOdEB+//o7Z0feuA9DLmYGPaRG/Z9Vx7afoV6OezoqPYg+v/Z
PGwdhvUd+P6y8TieHzuUnqaiX+TuplQa+nN/fESh4vyft435BORxSflc1gjh
+vA5yUZlEPZzk9Ar/i+QH/pPPlDuIhen72Zv4SpH3mOgpFIx5MPFLyXjy8iq
/Sb2BadqYL/fUFJqbMI+7l6tfe041xf0PqAb8uteza+CfRifj9W5DBDtLX57
o6KGcM7Zoe/yKOBVPa+2GPQVSjOKxfN1+eajH5PRn16jd2H/BMT5Ki7L2lGy
oc3yzbcbQzi/0ZDu2Y+8Xw8V/26IB9u0lO90kOjTvLyvmsqIbWXrkqUdBSRC
kXFhzKAIfU6Xbjxbic9XXfVrA1EtVPjnZtWC+oqCjuMdRN5L9w93XS8h1Q/F
eawGyJfOwTsbh4YgPu44lJozSmKlBR5FC0wQyRVKm678mkD9Tlq/6AT5+yvG
q69sFHXrFpoMDyHfwaBbaADyQ6xpXzPGhQ2ferQ6yQxDWfu1ejs5nxTQqLKz
gkyEKQ7tzi0kmsWmXa3SBbhPmm74lxHtY717PUurCZ2mfYCj7hN5cvMN/xil
hZSYmstUl3USv0zvtXshTh3fLrL2wMMB5G1tKJwYQn5i5bmwEcBvThMJzBEy
lrlOIOPXMKzrxZpXZwfJM9l80dCCr7A+Hlk+jeslPOwOvdBPneT5V79zdqfa
iYzb+02FA61Egt9WoimrCuL6gYrfEmWEg4Nj49u4IlinfA/4vpRinjv4WrWK
mNy5nyzMWUdq1+8o1V32GXDa3s3ue1ux3jk7C8/TxWizH/NGD/n2Y8mUz8Z+
ssjm/X39gwOAR8YU6a8H0Nf1iiXfAPHd6nq3Jr0P4vDfHKfGHuQLR9fROknH
pfU35f3b8dwsa+l0K+qCqb8dayG801ItXJY1REiklIv2rII4/R5xtGKXQhx9
WVrkXEYmYtQt5JZXErcPfjePm1QTtmVFVOSKeqjvvbh33G8k5vRzY5YxzbAP
nkhd+NVKeDQOT3q7dZDQlJVbeB27kH85V/ywm4Tlp1V8v92NOuIyrte7ACc3
HA0V7MR+o3jE8Xbkqyq0LWkj/QMNO0QFWuH7nSybPFuIwzWLMret9Tjft+hi
8AfyPKogZHs97Gczez8//TJi9aU6bUlAGTG0izCfKi0n6Vqd4kUGlSSsd8I/
w/8DcRCz21ywopZ8kQvtTn7WQPxddtlXJX4mV7+xqY9YzUTe7IOH6PtWwnGu
/GdUQRsx/49ZKtvYRp6d+c4fe7EN4v2K/IiiViLk612zTayVDGxs0gq83wLr
VZH/RWAL8vptTXfgfPveu802bPJ8gcRHV2vs02/yqZPHOfztn3pmsB/qb6bI
YBGve/s7N/EBXlcOfTEBf5f4Kaqvx5kN+8gsw12YTabVzJeE+7CI7/FLxVwl
2Le/st6Ohwk4gfPzq03I89VtFdOZ56UL18QiP/7bwv6DyLdir3U3piHPcr1E
Mg3qyw8cAqZ00hzpFj6rgn2Xcw3vTdiEI1L/tPAFPP/aN5K1l01eRz9adXsn
m4iGmY55OuKcua/Ija1s5PW+XQq4eDJkcfVzwMH2QqtGizKZWPdoidvhHAo/
TWQ5E3UTN7zMYABOydQIEmagz5BzyQY6+fTx6tnGCIiH09fW5ajRyNvB6QCf
31QSZfU4aISPRqJXtXEeeox611WuGqJsuD9hslydDfFzjDfkBBt1Lt29nFEH
wElE3QD73GuVjcbm+T+t78VYqDN4PfwuzoFt6zeSxXmsC5vy6pA38yBi5S3U
5XDIHL6I/KS5ln0PGRCfAx/4hKFehKjEqYUMcnsul+dEKJ2c/NvKk7CAjnrb
6xcaok5i5YfL0/P6hRqfbWlkPSN3VeYiNjlQejrCRAn9CU5o1qPu/uGCpHdW
bNiHN7bd2Y19KqutblzY10rS8HqPfLZPV1YHs+A9e8eXrka/259ty+zw/Gxj
48cyBuAd2QnuNsRrNev53NFX4OgP9V6cP3Q4xxHLJOYCa/ZdmmUQxxvC/MPb
GKRN+ejoA046xNOP+3pOok87R9nZGPRX97S8AOtGWqe5PlsHdQOWfl3pwSa5
2waqh8zYZNehyAtrCRvqcMPBxrVs2PdXtTZOog+0NHt9FfoY/3j3dzs8364H
Xpvg+u3U98oUVzLJ5qP+u9bcwH7+W5OqJfO8sHilqyzUa2ummrHIHcXdutV5
uD5pRybeMCAe7H3xcSud7Pp6rfvfVdRl9OXyL6cRt8UBByzg84uHg3dJw7oT
aboa3KaHfi8qNj0M9CuWvTIswoL4p3Bq42acf2e2XLLGfrpJxYvNOD/Y+CLO
HudVrpnfkGUjX2KDUR/2t7YGDJqhL/OtMNkgFvrBqkadw/Pj/nW7f+N5Zqq6
qx72ny2//1FhwPfmjHLUQf3vbP0ySxN9eJYFFpei77zD5I9TbNRXWtZphD4x
N25EwH49wm2mdfsvk8THOV+VeI/+36aJitfoEN83LV4ZRyNLpjmeirNR1/Ld
cM0l5IOrZf0LZZGjqh5z0oboh/1ReHgM54/smGrhLFLQ07Od0cfEOfopjkEG
cS3Kqfv9nY56ERupy9E3a5HuzzXzOjPH9gFuMleNvzJagjqlQmbFDhAXnqzd
OiaI/kL7krfsZMH+t9zSK8CEOPqH6VuKfKyepVIVNJwvHDnxH428C/7YJTvP
a5xSHF/CJKUChnZt4ywiE27085fZvG/OogXC2D/V2ObmMu8bo8EthrowWun5
qXRS+fOGv8NdGvrdCdRMIe+4gpUcgLrwjnUXP6D+ru6UbRmN6Noa3bwJceSM
o+OIHM7tfYrXvZWFfhvWZ+zvos7TVvnVuThX8jwx9TEdfd1VTEXhfRB9n7Ed
THj/nsZS+fC8h9dlbXBhw3t8Li2vhffLute1hQ31/j7Ro5dRbyOj62M+g1Q6
zASFs+B7tTS/j3ymot/Px9+XkNev5rfZDPXa+z7d70ddMtu15Z9pxKfkmPA2
NTZZ0J/1c3D+PtPNFWE9wfu7HBGD+y/vesAV9CN/3RpsjvOlc5wmRiyoxxrp
fyUwPs9M/3BD/1Q3wQlLNtFa0unhZY39Y4s/yt7Id9j3KrUJ57U8DRrGUBdn
8yahXzRy6oiu+KufVKi/aDSnIirgpKDmg3eo6MdlbC+IfMQHommfsM4WbUD+
5VuTnS3K4uh73jzWpYJ9Pl+t2Q4GXPezN/TT2MeKLKrPQT4DNd8G4qFkCu+t
7NNswD0cXqcM8f5Wz6mpod/PStPra9ioX+qTpMlGn3PLJkXsb1yuHDkG+8je
r1PbG/leE84T4TRyie+iP0uHRoLKbtmTP6gD2yHI0sQ5HS9rl1c0iBs/cmO7
8PzyuHpYCc5t3Fc6wp7n/dpdGJz3Y9/+7SWTWKxM4XnfinOhci0G61CnJCN4
TyWeE+/IW2vOQj8A0rSSRe6lypR+9kN9jId8mhvYgNfzRA4qIc/u/tY4D9TD
3HVx62/k881ovZRDPvchb6Uk2KcW75Yc2oB8pdcVS0RQ/6wj608gDZ57q+zw
PRbxW/PgovIVJuSXxjKTzwzUG/15p4uBOD9CFP57faV6svVq7HOFFAgtQX5K
6UWHeR4rV/EQH5MIGJcyDJxwXveFmEIzC/IcNWQrxKuICu6uHQnIN5R9dvsH
6ltVB/yppZOnZ+yPTQmgzltojQJcR6x0uLrPN8wblmKba6nYrxW8cRt98t5o
8t/EeMmIC3ZhIm/tytt6BuFtTA2xLGZAvTJeyfrLIDqTntLufPPzgwqVOain
umimVJ4Bz3FjvGoag3CNLz3DXIrn89FR1LNsQiYs6kYwrrhaVB90wuc/fukl
JwPid/K5FwvQvy7PUgKuy7rAgtaxGs85rj9ufYF6hC/2/K1E353imx9oNMiP
DEXTCuSj3DhsVcfEvK13j6BPjoAeE+IGe4WmbMI45qvKXNenDBLz60VApBrq
4+1gVG/E/saEglk8k8QZxpRJmbJJmNv13cYKGI/l1O+L4HzlvlIuFfS5ff71
wWr0H5dkJpnQyEiQgNGdWSr5eO3SgFonFfDH24SiXCryl20njtHQN0TvQxqd
1B+R7lWSQJ1S50E8l3+RIKKxGPaJzNzWI1xfmOgLLdoIeWqiW+KXtTQ83zUT
bzV68Zz2OpeIDcRHvyNntKG+ECHmanNJsL903ihGC6LOiOmbxiMMvF7h/hg6
ae0vE/eG/djwdK90kRL6f3UPCi+gEf11p/+jiiHevD136hLqxzcvjb5IJ5si
pGq0E9DfLCSmxRx1jM6E0VVQr2co8xPk2YSj16+tF0WdiofiHQuR9zrD+bcJ
+7oDWzrhvfXLvZDL/oF94jt2l41QXyjO0W0Xi5RvNzMLcUZepWZi/VIm+Wmw
uAb9cIT4Yh56R9Eh31HFN/xEH5XShava0f+oX3YTF528Ez1x1vM1HfLDNtnE
ZwyyZ4Y//qMTvr9VItln2FhH6qVBfC1N9JjLdMc61Uq7yBH5MHf9nA6woT75
xLdDAesFHZ5nDORfblS27cG+0C9FTrivGcb3oC9Qj/lsnCzkWc2G9Wqm1BPH
gs8piuWvxf7WZBQH7Lc1ljm6ibKomxDZc20a5xV2VSqaMUgI/92526NYJ+Qa
6lxjkmN0wQvLkR+7wuDoEWM2+semOLjiHC8rRgquk6HCqaALP3NqY13uQZ2l
oNZ0fLkg+gypXPtxiIV+MKnu8N7feBw/TBGb19k6SbdF3TAViTvC2OdQjigX
QD+xkstdZqhv0z/tcIOFv2+r+RR9Wg9+OG+C+o/yvGbnMD48W3s+B3WDaxou
fENfnkyvklUssrlK+mnkDPprcSvoCrFxDmbhGqhTjV+nC21WR/9wFSU9bqj/
z8qt/XcM58JzFXp8maTsv7m2XfcZOL/CKy3FILaj/k+UPdF//FqqsT5+zz7h
IewvkyMNy7YjD4a6Kxvi9bbVb/QuxSIPNqc2UgV5+Cs9pRaxUHchLO8f5KfW
wo3VnOiT9CfgiCyLCJQc/8vUQb1/2rZFB6nklKyfvdNJKlFyvSC5JRD2udOe
UMEsKpn17Sv6A/lowNon97UpjfzVT358sgniZ5D2+YCjUAev+fx9fSas67ft
QW/aoR5pqry9Mo9O9q5fdy7EkE5e3Kq4qFlLIw5Le00Gt8LfeYpVSzzG+Tqp
PTxrqGSVqFKf0EsKCaFNilp7UyCerJsZ9aFA/bBXuMeCSjiGDr1kuFGhjrOk
2NygkvSzvhwpb6nEhf+HGv8P1BkfX7rJnkZKSwLVnP7RSILjz9CnfXQynn69
jg7r+Y26SXAE5MUFiVwZBpdh309xPhqCfPGHkcW3k4tJfvz3r+5DEIM8C7l1
zOAX+oOJ8uXp0gmPrD3jlw+NWDgZZ92F73trQvmaLEIlAgyx562NFBI6HdLy
7wyV/OJ9ffRWCJX4i31X3ZRAJfuOrPp6HH7/1tp3txdAPaagOxt6zZlGBjL+
cNNW0uH5vkr9VUwn4QqMSBrE6auDqb9f2ML6zx91cYW6gnEu8Mm7PgYp7Hro
XsjNJPkbvY6+/Ye6YL/cH1FwPvCNAZcPA+Ia/Y9iHJ38F8HlJgP5dtPg8h8z
zVRywa3rP5Yh1IFfd24Qs6WSQ0n8zRJXqOS/a8+q/4VTyZFowUcFD+G5b2Nv
DIJ6zPbdvZNEnUaSdycaDz6gkRyXM81L8mlEqf7gyyNYx/k5hmnDew8MJMFa
UJ+fuvjo5I85Gnl/OPJ26iM6cU+6FVsmwSC9Cb8/5fozyMLZGZlOewa5WK1g
FAhx2NqKq+fkBxpZ5Vi9LoOHRmTFp8NG/VFHfeFpyR1U0lJWqf5ei0qUuxLq
OA9TibbZ6q2X7agkLqwppRvqHtelQfFjY1SyIZirLWkD6hAkrY6EOHtHUebT
gQdU8tQ/wodTjEoWfa3cdw7uN27DN5VNHDRy5mfmSzOog5e2vt8w5EYnLc3S
VfJjqG+RMtb0gU4ct612SgK8qT3ybjryMI08Hc8N5Mijkss75E9EwOdUet3O
ExSgQv320XUFJ5VYCdarnlsJ664/c62bHtbZizQHoH6M+sM1Xs+GuvbO9t4M
d8jb+sEOogE0YmieoOwMeT1jtW9/pRvqoerxjz6lki8TxebN62hky91efib6
Hxjv5g7fDvig1LRw8gKd3JWT4mhUoJNvwwu+yMC68X5SEqaVSSVlvdcbv2+l
kq2PFZkGsG+EGtTUvq6C53a84o8zP3xu3OyJ78roe/LviK4jXM/pzBljqGdv
PY3tVImmEbvVSp5uh+hEI+vJ52hf1M332rNeDe6/ilfgIuCtX5dnRAfE6bAP
TPn4TtCJbNiJA6lwPRrfJVWabCF/0Id2yxsDTgvPORbbiXmN2d3CC3joz6+E
o9ZUEr+/6B3PTwpJeSnTl9VAIeuqM67XwHOaXd9YwTKgkmgFJe1KLyrx3fet
O7GOSgLttBM6w2jkQwRXRivOW3a//NEA+G1riUHNbDeDfPxX9SceforcfXNV
tRrypUYWWTrDIK+3UI79lwj/bv/LurGLQcq4637//Izz7FwxzGd0UqDM1Vi6
kU7aLx03eneURoSzdHKEQ+F9yj2SbPpFIa3Wrz/nJFPI+rPh5VfmfaH7vyy+
TSXLjh/49aqYSoL5z7Z7QN6Wkp1IsAec1mCa3DO0jEGeD3h7X7Zikve2rm9M
trLIk/L93ibHoX7XdS+8A3V/7L2w8d5ZJulVumUVuAfqBKuflfzRDIjrYoay
exnEdLHjugkNwING6Wu+1tPJjhZxqZhpGkkv0XSOmEZd+GtlFhuhrind1kfe
UEi1RPYIHdaX8tR/Rp4QL/2NZEx3tcJ6XMLzK2ktjTjGxXUVMWnEalle5bfj
DBJ5l0PhPYNJ5BTpm8NrWKQqW6bPLpcF62BKzVWJRZL5CxbZ3oTr27lexwzq
qx3CSvr1yNO3UV2nAvkm5HYWfcknBlm7t7048CyDOD17J9YBuKt/pKq4Dtah
hHLWi9qTONdk3PkZfdB/npxzdIF9uel1nct1yCMMg8hd6VSyf3n4j3c9cB+Z
mtPhUH8Hcp5tFFFikDuaJ+8MVTJJ264jw3vlWETTQuXzHlcmMQ/32c4IZZC6
0Q8id6WhDg1sNF47RycDRjWGnwHv+V5qmuHNg7pgb/fhlj3I10uoSoE4aB6+
o2IhnU7smn71XgHcGtXw/LgPrPtlDzxmJ8oogNe6XPrMqeRgXNCW21ZU4hT8
X3ikE+A8V4/ZBIiDp4KW/nluRCOij6Z/Rr6F/FU+NRH4kUFu6m30FgpnkLTP
hySHYZ+UUNozy9IA56jt8ui5Abia92R4owidvPw9INvaSie/FHa9yoR1+S3g
RYOqD5N0Dt8ZUJtjQLwbND9cTidLdSMETxEaaX8vHrxmD5WIRCxSYNRRiLVv
6lVVSyq5GBxuMAl5WKbft9x1C5X47RIYOulOJY9V/vDqrQCc5z3R80CdTqaG
grU9q+lkwuBS67JTgLP3jGTWQ9zWFq1LO3EP4ssod4Q94O11eQl8goJ0ciO5
PNBrJ4OMhJjvc7ZjEkGJYrXSq0zY3wPH05IYhLrnfKeMBp0cyYkiO3rhOrwa
ijVlqMTh0c+M0z8o5NNSDu8VwYCHg8NNOk6jLnnJK054vv4vh9lL66mE/4D4
++wIGrHk7zgd50kn5Hq/1a8qOrHM+dKTTugkYO/d5FpJeC8ZiqZDjRAnGw7a
/MqF9Sqo5awF79cr+Ap3piiTODd/4bKIQ367xsYKTSYJOmXePw3vPeBF/yr7
5zTSxKUYnJBEJZRta6u41ank76hv2xm4zsPKz6QboO5X5917cPk7KqFzFP+5
Mww4xav+wBmIK2z/QN1zkH/aV8mZ7okC3EmP65jrYZAINfHpUwcYpGk069Co
K8TZJI88nnuoV5HU+joY6oUkl69T7lAXhG/5Z9XHJIFcG8IvhDBJ2oCI8kpY
Hz7Gz2y2RtDJyDrtK3sgb1B8Usu7n1CJj19Yv80Z1JXmT5M3oZIXLo6rsyDO
dSTv3HoX8EAS59ERyfM0kqHXcyfzMJ3s+aI1aJrBICeUJpd0dzJJybM+WfPD
UNcZR8sd/w11aQrNlAX4cyxR4mxPPqz7sNXF0eqAkyk/2le4YJ1qG9z3g0nU
f9uPuG+Bvze1ex1hwCAm/B2mH1XpJNioQZ3nII1EDLy2XtZHJa90X33XhXx5
V+5Bne0JKrm9ic++FeqpiW5XhQl4bosLQz/m+NHINc7wV9H/0ck2mqN+dwuD
3LomEuMkCLhM4WKtN+DyF1aT0UZfWERXtYLWVcIiJn5vs9f9Y5HlbbkftFks
wp2z+/HiABY5Vrx1jdtj9IM47FxeyyAGhm3vXVl08qchP25uOZ3UOh8zX3KT
Rn7s9mXcAVw+pbuqqBfyY8syvomOnah76Bq0+y+FOLirb5w+QiUbs7ZumvpD
xfnytx50GlETk3+wdgODKO/LExs4zCSim5qUuL8zSVLS3VJVqOMfjgj6bviL
8dD/CQ1+ZmUGfuPqYZJmz+I9G/5jkm/lm268BZzK23jqdfh1BtkYlHeqhY26
ELVZnVsgD/4Q7/bLppFCzYL1vxbTiK7UTBaPPcRfg9hIYTqF1F43DBTwpZD2
qXVT2o4U0my3ZE4ti4L+P7tG9SEOdfmy9VbRyJqbS1PLOrA+2//eGurl72uz
rlLu0Mny5BrOuSdYJ/9T/55FJ7HqBey473Sys7wvpFURcH74aKSrIdZTFx7f
XccgPcUG1LR8OtGafl+4fyedXC5ovMt5hUYel3Fyno2H/XHj177APxQyY6xa
lfWcQnwfzJ17mkiBPBrC/3Q7hWzfmzSbtohCdP92P6vlpZAcpQVhr/dRyD/1
TrlzmRSyWruLX2YdlRRclXLcHQnreNVA0OYJKrGWmJu094X3tGHY+sd6OtnC
+qawCfJtBzfP3nqoXzXHt/WkCED8/lWpOBpNJ/Qy1zXOvZB3OY3Zy6lUYnzu
7rUeYSoRVte1qEpC/y4r+x/BFNLU7u1A3Y56Xhk7/0Id9th6cZH5WpxL39FY
N0sji9jVij0T6G90SEC6DefBj5+vL8BzzmvFkRk0wFUb45dkop62KpfYW8Db
72QXYzzKuH2FuWcR+okdO7kZvtc/Tzs+tWMCdTj1D54fh32yIuCL1hh50Jct
6G07iv3Z/Hi9UZyHEj/8dZRI6ajZKkqMA44TWHn9Lw3PWx0ufEUd9/Zh8XrU
cQ/zLE1HfYm/BstSaYTmmXt1rAz1BlxSN8F1x7ZRLq/ho5P0jAkVFwn03xJ6
UwX39UtRoj1KkQ7xJMbyuwrqwA4EDAjAPuVPnJF9hHoon0y072M82yXPK04h
1Jhvp5c5jxO2JreP6J4x9Duypq4bI26Lpzda/BzDc9nxmvc09G27lxGIfjQ2
55nWNJK1qeS3IuAhgytJTw9X0PAc+cIhu3l9d6mxUZw3LF/f8pdOZObkfx6P
QT2Y9S2X1+IcbtlZFsTth1UmMUfY87yw5e6oBzp7xsb9PJ7raE2VckIctL34
5jjUgz/C73kIQb0y86TGK3oz8kwU0rLMxknNwc7TFsnj5LxN3lT7ZdTX2fLs
CtTrwzUvBWKFaCTMraa06BqNLOhfeF41kk7KTnC82PUZdVkcLtHsYb8a7KxX
/Mogy7fOvlh1Fudv130cOYE6sm+C/czwfTgsSryHfnAnGcfOoI7f+eFciEP2
zB0ZXZ04/9ZzXs2CCfXt47CXvHTywP1ZZHgXhci4XZJLfTKBfndhMS8nkKd+
/ZEB8nrKX4tBXKk/sixaV4FG5Efs+Vbuwfl50lOqhNfDd2jfOIs4n6u9pLuC
Tf5r4gwLKcR+zCfh96cRLzpI9UB9bqce4+4H9ZDHLYE1R6tp2OcJojQz4Ln4
5DufYJH70v2vCwNR7+zjgLokzgVf91uwDPHTYOB9A/RTLDJQuUAhY5nJS/YD
/p1W845SVUe9nKzfDnNUMviwfPoc5MOz43xFH70Z5MPd6TR9QZxDFKjMn2KR
SXt6Sroqm0xXVGnVGCCfOuRB6yU6uRr0metgGZ7bZZz38UK+0KOUdvici/pt
kS7eyJucTcjbg3oFtbJucL2Lxd0F1uqjronXce8CKuriOctCfPCYPhdq+ICC
OiXr2iHOvJpUjzuigP04rhWHtqCOlvTRSVM6yb8jH/CpD32FP55XkGSTyxT5
xfHDqG/c6K7AwYb3uUVX2RB5vhfHjcMhH1gV93y+jPo/7409r2E/8s1bDy+c
m/S5zxHGIJlddxetIYCTT6kP2L6mkVeBh1/rTVLIWfM7cVvacI6N9Tsse4IY
1tac0DJBH/QS/c0yqJ+xU6pmP41s/aScGfGSBvXl648b9jPgPdrSUrlxnooZ
GWyHc0JbpseqUee//sTiPag3HbR6XQYTdT3kGc2o/x75bgTw+njYpTpjbeSR
T31WUWGSdfcTizMOoF4YxaWrko6+R/YpFlQiWZdbZn4UeQlOH6NhH1zsXN7b
IT2BukxztdwUolo4nqG9CPA4EdV9exv9yMabjPdi/VHZtW0dnpO/LtA+xiZy
+Rv82s1x/omaWfER9QL374rlwzk1iU/XoE6/9sfgt4wp6p8ZLusBXHJd0/F9
G9xP1/KZqmkeNuEJCCmWh3VX1ZqwhouDAfHoJcfUBvSdu913fBnGw4Ix5cRx
0nJu7aW4TRNEZ1KvLp6TAvvc78DpHgp5ekaYFd1DIyd0M61VW+joT3V12TO4
b68l9Ufg+g67Bh6UWcMmycVvb93fj/oEF+/feI5zA9zyPZAXPJ3eCvkq4tyC
h1IRFxvw2IHBJ4fZsH4LFd/IoL63W06rOpt8a7mzsqiJQVzODczdhzo0Qu13
cAIb/bSWGPcGTuB5abJW/gTqv9OoqhSIF7YlVS8ohGWpHjaxBee0nTyrIE/6
55XFqXZifJpdlyMP13Woi5ZC2KhL6RWohvPXtleWXER9OPNq7WWoK7slWv8r
8v33nsj2ZpPdG0QSPCeQT2+zPr+FRYR8HxsNOrBRR+965wUm7O+QNP481DUq
GtaRpKJuwfTWCAqpdKC6NxH0v8ldW3yIQgoObJgMD6WQsN7339OeIl9Qp5RZ
yoB1eyFPQZoFcfj7vuElbPL9jbZjJ8SrjNsJXq9dUA/b7Wz1AB11p+9sEUL/
kcF8QcCTomGrra7uwnk+k/GxA2yI32IBTaexX6vxrkecjfpFPw5qo24i58jh
1RjfI0+4A/7qCjBb2iNExbn47XsiKeQYXcVlxJmC89opSkG4TwS8uBYzCAeH
qs4rdSbEyaxtKpdRr9GDO1cA5wn5r0+m4XMTmijWY5IXCSNGYRw47xS2cDs3
gyyZljpquR/n3T19ZZXxPJe+IC4A9WrfPz4LeLhIodSKp5UJ6/r7cfejDOQb
f9zdin4neR8NRqnklo6UQeZKwDnWNx2EUylkwoXvR84LrAvMHy1uosD1qK92
00DeeK35rQv4/UcWiz/GeTOB2zKwfix/5qfNDqEu47YFC37M661ctwa8nRRl
0NoI+yLT+bF/8jsGMYt9avQF8JhAidQD8zHAdbZts28jsL/4Ys5FF/WbuSzV
DqIfi8g/hy3oV/NxKOAuFffZPdXv6BcVwnxPQT9mccULiuivvW6R1E0qubDb
0p+2cn5++NU9eD79C9cH/jgF13PYuVVDjo19eeGhDdi35uoVHmPB/gi+IDuv
Q2v0yM4U5z+M+ZRXoS6MjeYquD51nzmB+7YM0pxtoT3TRye5L8Tk+bzQL7Pe
9fzjeZ2HZ/3ZgNPkFA7ZHcJ+YBevE8S52R0mr+zvoF9tmxkH1Kn3I14rqPnP
6x/95nlPR79UiT2A93YVV0xeKkbdnJjCtAacx7BpF9o/rwdhJg3r6WLunbje
rWyIy0sTs6Sxr1g5Pgzx+l7qN9PHj1hkw+mb5WYvmbDPIq4K1qGvzMXlK/7R
UffZTbJ93rf3xyvUMY2QKtmUDrjb4sUfra9UuN+MV6cCaGTl/ogqhz/o03NS
P9gO/WKmu+JOoW/jL7eqHjoJoV1IXp/IgP3NpmsnoU55pUtcP4sopSbp/3JF
HQtjjzxZNvGSS1HqguupPyJto7GchbokyZ8PIK9D6YzpbvQ1KMx0h+v+/Pue
kvg51NfZvvfK+LzOhzv1J/r8jnybSMU+a0tdaDfqm0p3Zp2kE8bjXUvOlM3r
a9hpwfqeDFmvaHMM38N6nldQh0hqrhS/CHng+5uBOd0ABvrX3dz1ngnP3/bL
O3jf7BTzqTOzqG/dwC9sgfMyoz5t/Ayo1yw0uXPpUJ8KPzcpQ11cTQ5nFZxP
1EsQM2JDPNj87vgIE9bzdp+PifP+rRM9vxEnRCU4jCNv1shDHeJVgLyu/uUt
DNIrfpXhQOZ1XmI3Z6Mv0s3x94mAt+UXqm98CHnTKLhWhoL6ousDRlMZsD8W
eYwr4/eZBS1zxXm8wFd3dLD/t/jMhywG8nXPii1DP5YPN9eloB+Ogi4d9pOZ
wsuNTyzY8N638/9KwfewectwCOqPXYk+UYp6Js+fd16en6uf/XyKQd4FP+RL
N8M5sMRlO9QY5A+joe3gLgax/hJqKrkZ8sH0ObMFK9GfU3DTuxUM1HOMvnQe
504PDqWZM9HP+lmuPwvWR0ba49M4P+zQ7fQGeU9T6+SVUP/6k4ew07z/yNXW
rThfPVL6bS0b1nNIlJoWziffOxHjxIT3TL27vgt1SxfL50P9ID+iZ9tkg9fD
J3dYA+dc/MI0Z6C+qzvy5yl/ClFN0wpIiXtOVDs+pNw3f0o4Cnr+nqbEE+3/
Ml/lFT4g2guMvCNmn+KcSEeq3RsysSbFhjO0kHD0LxT7erWS0FUK+RKTa8nS
zqSepXqfSJfNuzSTS02wX/tWCOU2Ax7Kj5C41oJ6S+2TFq3ExDXez8q7FfUR
tPM+N5OmyC9bvl79hDy+Z9NG1YRjz8yMrFkZMVFVst/s9ZywW4xmXaaeEO2V
ebmOmxOI9kjQkL3jPVI2SiIqOaOI7dMOF3FKEinTzdjTsSCPtBXZB0TcrySq
vBsGDAfryANpgWJb50/w3Gaaut58Rt3e5WKMJhJKaxbWHGhGvuak2ZpW1Nsp
jlreTh78i/ibtaMD50rucXa04bzttYX2zeTj0w9b9uXWE82cWlvqjUpi8l7y
37vjz0hZ4uqkCe4EwvGR2TcuFUk4+I1ZfyL/Ixx1o9f1NoZgPH+2aXUq4roU
zbRScvy/zCvFmXUY/1JNLjeiTt45hYhGqN8WeahWN5ImGXHZetkm8kU/iG2h
04w+UjeDtVrJl1yus/xiHWR5UFn686xOwHGxhgv0O3CegqJxvYVwJUXlFZZ9
JEWmK66FJX4g/mH5Xm3qT0mZTG9dZ3QM4UgYe+Tl44c8yvn/+ZMtjfZP7uG8
hUj+olzycqL2akVYNTlS/lK5QKiJuGv4HxaaaSIT8m8Hdbd/JkUHlh5dJgjX
+V0gTi7mM3klbBLDY9JMlouUNlW+ayVVDq8EdRM7iL/LrG1ddye50SL5z+Z7
O853V27e3YL3sVz/yUecAzhVsL2avNk2JZXKDdf3zo62oySKcKgfNTkU6EY4
WJpnl0cE4PWHzESmkh/5lvILlMvJ8/PFBa5888/JL266hbyz+9fP+r+jK4+H
ev3CsuUKaVO0XUuiklGJhKNNyZSUupKYSpMkXLdUyJWdVGgnIkuTJWulkmVs
M9aZMfsM8yVF2vza7Lrv+/t/5vM57/t9z3me8/k85zlKXUAzv6ZaasVGefDO
pnmEhX2t3+3ey8G+xWXKelzsjxfSH82HtjbyGflSIcLB4VI4I4QYJhd4P7iw
N+qaZVouC6KYLnJFhi1YV73ye1MDlNhFWF9yzIRwKjX/1L9JILfifEoQ+xLY
mXvsXqR0H2jzWGYZb5/BrpqpIWpyM9jvDLzbYsZB/W+8X/U1Hta9kuhOPAib
CNaVn8uFTOtCz3FlHryqbL/UZySA0Plfnn89IkLvfuHJBecl2Kf2aE28FIJz
11hleotxv5sZ5MNDvGvBeLAHC5IOnCu+tZ4Jod9KsmOG6sFux84YUeZDqBUn
/O18PxnC/7GnuRkn4XywfWf+GDJTrMa2Sarx/I9XxVgbUN7tK7jM+r8u861v
qADsmtwNquwF2HeermsiQLy+0lqSKAKdPqHH1GYp9gnJmzjQg3mK261mGcj3
bL386ZkM7OYdK0oOlyKcoyQrVvOx/6M1yZKN/UYHk/RaYHvRh4suN1F8EX0z
VDSyIFxlcZnD+D0gzdmoaumQBQFXFLd8WF8OmvPhukpGPbhtrTZJymCBeHGV
da0PH3xXP2d4xghBS9QR7EQTwkZrG61TT0WQ0b4qf/UXKd6bfONwoAwChqND
1x4hUP+qS33wCet3W6vPlhNgVREHIVt6gHJPTaBfJQRu6vun6uu78J4tdfO6
Nhg1o1ZtNGzAPs6HZ3tlg+aufR08qyxcDzt/6Rbg+qTM+1AJwo4LfB2LJrw/
zv2JExusUma12lzgo352wCvaWwj0mIGBzlki8PqSOpR4UozezVNNE/9uvA8+
zW65DOvA5rNVCezbqTbGI1DfvP7Fwj4CnUsjx/iCDHr+TliYSxdD5TKl6GN2
PJQ3VWQ1+044J68zWlTUAMRGnXF/u1wo2XfGV3g1F4hZN5XFL0vAUuZ0KUu5
CvaJF6+ZzGiC3UOK+4/wWIg/h/bR3/Dgzx+F3WmfBeAtV/zocQi6x6XMq2Hm
IriuPKzVNF+CfVEtCmykQLZgEo6j3dgXMoZjTmAfyI15pQR8ypi84jwhwzr1
g+JuCSz5eHwswowPG+b8UoxYwAKX/SsHTKpQfB9uP3B8mof3XuqF+tOgsliB
ne9SBhRN1zsdY2+w3lZ9h2sz3HpCX85is1Dd1SjM8uSh/NSUbA4XYH/2CXNP
AYg7Rqa4ywVgm3bba61YABse/Vj3M0eEfZf8dl6WYn8ot2U0GfaZ4nDuE9gP
u925XwaJvo9V4ycl4HG2MXd5Lw/k9ijeulvbASrDWtdjB+sxbnk0uNFALjns
WbFCAY5zxlfbcqxz157hUAPcHsqdA1EMcFHK1iefYkPSbKugwEIelCgMHHVB
efH8u82OU6f5WOcf4nKVB4/4Fea2v3mwS2F0pKVZiPA+NEnDXQqarmN9v6Zk
qC9QC0gvwPNAL8hdFBkYmaloK+aJUT9EJges4mLcnL2f0YpwtNQyQkAH0kGS
l5H+E2BpNlNz1hSCUayW1K+/HO8FdHBZV4vqnvi0exwTompbph5+ZEPDnyTy
fXROKm+gMUVJAAEdDN+Pq/lA+ythiVMCDzSbg310qvh4z6TRLLIYUlfdm0ex
7oFytf9FDWYSiI/lSiKfofc30bq+SqEHWFReussBIeKVFwZO0th4HnBc9Q4D
6+qXFBXWAcn6ja/37CcQru70e4tuIcRtofygLy2HpP5vpmZzamD4RNsJgykG
8A/56nz6ygbVBE/jAlTv6T+NgjdsE8B+sUTB5isfnuddUqpwE+C5FwP1KRHC
V9Yjz+lumIqt4H8rJrB/pPq4cy+Kk22ccpJA591tQFaRAnquM89W8UA6Nj2Q
vrIThqMdJhnGTbArJPKlvrgW35vBoRQaaFaTsiPXFgJtiRvn+D9l6F7i9mev
eAPkIUWafE4z2A5qHzY8w4YAz5lEVAgP+2OO9p4X4P3FcgVqQlikqNXvv1QM
a/2yL7YUdwP8NWHXQieA+0ec40RNL8Kd7iWF23vxfIdcmroM5ztFnCzCuncO
6UYXlKzwatY504Z1mO9rZQ0gt3rm/EblWqA4MmYE3EbxQZPht5sF4KphorDq
bSkQD+aohp18DcLGz2QStxFcaeablZw7oWWdovR7URd6T5s4I1Q++B26bOOK
8lfDyVQ+c5kUYh4L+LPfozqcGqetfaEXmEEeoo6UXqDGZb9O24PyV4tR9jtA
CmKbTfnGpgI8V/v58SAbjOgxxtSKFnB3ZDz0+VYPgy+KOV9y3wClfGgPyBXA
cIZ108Y9RbBvZWZgQQa6P8HcLcYtr0DTpKwrfhr93tAse++NVmDMtClJ9WdD
03Sg4SJTLup3JxMT2HzMt/XvRotx3VnAMO1BeGaRLthEYN/Pdi9lAlQF+rFy
4d2wJFTXeU+GCN4vHXimZcBDfQ4RcgPh7miYT+ybVgaux9t/TdcBjeLywdP2
JZB+3b37R0Ixjtf1IacEvFMv2HhEVsDoS7FLTsJrOOednOjQSIfQ3DWrKxMY
cPGB3tYbUR3YnzGiZoSNfRw36cZz4Uvov/K+6QI8f5nIdBaj72Vwbu+ABPE6
Tfe2VAlUk7QPi6tFQM7bnUO85MMvI2lnvFwX7tssOn+2g1FmfLu+sBEuRpoS
5wuqET+T5NWvr8D1mJ9FKsPftesKuxwy2/NvHc2rxPxoOsayFs9tLap73QCK
G5JJ2p5MKHneR6l5ivjx3MCjI2JUR+sGRdkHOTC5qPyJfhAX3eP2typhfLCa
0S6MlArw3uegQwuFQAnqXENq5ON52HYfCy6Mhw3129PR/0mrmGc4TMxDCT9v
OoSzynuzHCqBqNaYNr1aDJYer6j+eeWozr4+cNz5GVDajnqP1b2Eydhz9ted
ayHqI7sv2rkB5TWxbY4eA6QJU4frklthmFnP8jHpwHOizlMqLIx/xyZ3sBG/
KeN87uOA+3Q9c0wRxZE5oBfgzIX3x7IWShC+Hq+fp84TsqA/MoO9/EQrtOV3
FtueRvlAHdm2c2kVyF2cZQ6BZRD+Q5J+yD4f/gN3xCNY
   "], {{0, 0}, {3, 7}}, {0, 1.0294073369134218`}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8999908668059826`*^9, 3.899990927033159*^9}},
 CellLabel->
  "Out[355]=",ExpressionUUID->"3dd70994-f330-4919-970a-90ae2afe225a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["tNet"], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8999657833161707`*^9, 3.89996579039228*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"ea88d566-0e9d-4c33-af14-457704b3630b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.771662737098522, {0., 9.771662737098522}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["2", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                9.771662737098522, {0., 9.771662737098522}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"MyNet\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Target\"", 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"loss\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489702911785*^-8}], 
                    InsetBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "10"], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999999}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897078907816`*^-8}], 
                    InsetBox["\"10\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"index \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "10", "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"index ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 10, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]28\[Times]28\
\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"index \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "10", "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"index ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 10, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MyNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MyNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"CE\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 10, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\"index \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\[VeryThinSpace]range: \"", "1", "\"..\"", "10", 
                    "\"\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "MyNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{21, 1, 9, 9}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{21}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 21, "KernelSize" -> {9, 9}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {20, 20}, "$WeightsInputChannels" -> 1|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{21, 20, 20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Convolution", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{15, 21, 7, 7}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{15}]|>, 
                    "Parameters" -> <|
                    "OutputChannels" -> 15, "KernelSize" -> {7, 7}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 21, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {14, 14}, "$WeightsInputChannels" -> 
                    21|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{21, 20, 20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Ramp, 
                    "Net" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {15, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 2940}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 2940, 
                    "$InputDimensions" -> {15, 14, 14}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "loss" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 10, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 10]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 10]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ImageSize" -> 
                    NeuralNetworks`ValidatedParameter[{28, 28}], "ColorSpace" -> 
                    "Grayscale", "ColorChannels" -> 1, "Interleaving" -> 
                    False, "MeanImage" -> None, "VarianceImage" -> None, 
                    "DataTransposed" -> False, "Method" -> "Stretch", 
                    "Resampling" -> 
                    NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
                    GrayLevel[0], "Alignment" -> Center, "$Version" -> 
                    "13.3.0"|>, "Target" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 10]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "MyNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MyNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MyNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MyNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    ImageSizeCache -> {0., {0., 4.674999833106995}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "Input" -> NetEncoder[
       "Image", <|
        "ImageSize" -> NeuralNetworks`ValidatedParameter[{28, 28}], 
         "ColorSpace" -> "Grayscale", "ColorChannels" -> 1, "Interleaving" -> 
         False, "MeanImage" -> None, "VarianceImage" -> None, 
         "DataTransposed" -> False, "Method" -> "Stretch", "Resampling" -> 
         NeuralNetworks`ValidatedParameter[Automatic], "Padding" -> 
         GrayLevel[0], "Alignment" -> Center, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]], "Target" -> 
      NeuralNetworks`TensorT[{}, 
        NeuralNetworks`IndexIntegerT[1, 10]]|>, 
    "Outputs" -> <|
     "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "MyNet" -> <|
       "Type" -> "Chain", 
        "Nodes" -> <|
         "1" -> <|"Type" -> "Convolution", 
            "Arrays" -> <|"Weights" -> CompressedData["
1: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
4yB1uwH8H0cOA5Y=
               "], "Biases" -> 
              RawArray["Real32",{0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}]|>, 
            "Parameters" -> <|
             "OutputChannels" -> 21, "KernelSize" -> {9, 9}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
              "Dilation" -> {1, 1}, "ChannelGroups" -> 1, "Dimensionality" -> 
              2, "Interleaving" -> False, "$InputChannels" -> 1, 
              "$InputSize" -> {28, 28}, "$OutputSize" -> {20, 20}, 
              "$WeightsInputChannels" -> 1|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{21, 20, 20}, NeuralNetworks`RealT]|>|>, 
          "2" -> <|"Type" -> "Convolution", 
            "Arrays" -> <|"Weights" -> CompressedData["
1:eJwsl3dcj//3xlVaNCRZ7RRFERG973MalMyWlkRIPigzlZky0qZoKaWlhdJA
3edEZlJ29sjIzsjI9u33ePz+OK/H6/7zPq9znet66i9c6bZYukePHsEK3Yfb
gjC7NWsWrJ8l938fAQuCLMYE9ey+qnaXRnfJ/39pLUnBPiVL+Zz5NppfcIBn
9ank6w+XCV/mTwPVgmoemSXBhQ820+GsaVxc78A1m+RhGhyWVM8ZiPW3NwrL
THdypE859clrhuT5bvRVLslqsKVefc/TtyDBSAWPr9fg67JrOHawAYqfpXj7
iBF1nf2iscyhUewfYyKMbolh+8Dh7BPnjJfCeuF9vTlUEtZGBtLLSOVhMcQc
e0wPKotRBRtw+PhkyLyuDk5L/6N7d9MhxNifwyfH04vcYu4YLc03pV+LuyoL
6WPDW+H46VOkLjOAPQqGsflEJ7b50Ewztcwx9shEiXx1T64rGYCz6hz46ckM
oWHfcSw6NQNf2dug77d+qOP9h3xnrLPSONpOm+K34w39YrJb/ZlWfu2NhpJ4
0vvqxHeMo7hOzpMfmOvxpMwHUP9Tl9dk5pDpzIu89MQJdhiXTLOsZpJV6wwc
2T+HW56N5UaZf+C4IluEtt1U+bcdVi1wEX3fL6EEq0O02sQEJ77cwZ/CK5lj
+6P2NQVWuBpFUXMbxfR3enxxsyYemCpDM28pc0hXClaXhgp6jReoK+QCDLvZ
SbLr89nUQhPvDHPlcXI3+ZCKNE46fROWJh3ABaGu/DpvHswMTyU0L4Xpp2w5
UeMxBbdfxbGFM3h3W1/I1xuEp+MSsEZNCdUDRDZxVrBeGGiJl59exYY/ulyz
sIEfXK/kYK8PtEkujf76X6CFyxRwqX0p4sNtnLjdECZHTeQ9Qzyw5uEyyJR8
PTHl1SjeOcwI377ryS5rf1KGZCMfTbaHHKsftO6QLI3Ql+ASs2LJxHHK/Gm2
KTrt1cSWuAy41DMGl0hEzmpbiZ5NR2Hegn6YOLIKMxctQinZGFrxpgv29h2C
H0UX/vBmYd1/l+UlY6oAss/romnsRZDLLsf4pR9hu6Efvm5pRCxdwie2hqNl
5wW4zsmkku+LwY5G+HSqHrSct6Wxq/rjzzEKuPOgAx0szOBJ1xOwde8GXCBV
g33fxYp+5q0wPe0/3FB1lDbXDqVNdfVw4N8Yykmw5TrTw0JoiQ/nf1WCN4Gu
uKxoDlQMEGFCVQL0rP1Hg8b1o0XqW6A1Iws0x6rj7CV9uX6eNp3utYtq609D
bzVbMfNdA5R8zmHjk2sgZoohJBgYUF1sbxwfXcXmkcM41HIV4wgdDNxZz708
0/Hut5OkbHEb67/ORfv4Tjh+dwjah76n+aGhENsrF8p/nsDn66X4dfIbzkup
5RuQBzd0/oiBWWPht+gHLtEnsN/KUeiqFcYRngn86YwJuY3MBfVZJmx1ch3P
suvFOxJPw6iTyZiRkMrfttWQ/LL7dMp2I32/HokuS22QJyfy77w5HBdAHLBp
L44doUijjnfSP8cbsNfdnB96Z6G5dQfl6E/Ao96R+Kv4ADy/sIrG+MjguJnF
IOXmDi7qvVnpVyUt/3MB5E1icPnd8WDjP1zsl26DLcfLqN3/Pvn/F133arM7
vwuz5twlT+G+yk72dpiMPn8t+MgzM5yTpMwRASPxdnQdX+inwN8qcuFE5BM4
Hu8NTnvtsTi6mNtXXOaLqwvxw84ukL12TvS/95YkVak4MaUCbGcOZZmnaXBX
1Vl4+jCQlQf7c5j3VXFxaDF8Ubbm6+F6NPd+Mq+YG4OH+92G0TyDv7XooM/v
aF6msxX/7W5hvQ0F/MBOF48NyxVUR/Wjb/tKqbjKgJf7jOKFWgP574cR/GJq
Iq5NekrmuVXk6ydQ+LY+gvOTOK513M1heTthxd3/4NOMqRxyrhXs7lwkczeR
7eX3YUmQDxamnBWfBx0V+9nr88wNc8DOMBYvxcWi4Z/x4hrPBtRrruQ3Osbg
0v8rjIkxxRf9X8GSHCWauapDzFWx4B2nO9isW4fO9AE8OA3bytcKt3OfirGv
YzD4ZjNkPImFhr9zRenbGRBgtpgL5yGZ+lbzmKulJF4/S5OHNUssfLJB/9CG
upeJH+GxUSv+LWX6pf+FnpE+6rj9po6YFXg0aCTniRJaE5vCPwJiBVvzu3RP
V5de1B2ste7VxG2vi8jWX1O4JvOJHCbdqzuv8JikzM7D+sDFwsTeoyAveRhm
mf4Sz8mEU2KpPJpotoqh+ke4cGotyH8cKw4OWYE/J//HKqPL6r4dj+GDZ60x
acNmmO+o072XPouvxlrSXHeGX18qYGmmL6bvLoUBQVvp9iNbnpq6kDerRsDN
GF3+Pm06Hg0dj/37FMLv7Ec8NrMVSlkOf15SEVKWTKKk647cGvyaIi+m08ab
PUAqNJvLh2nAv8oIydD6HbjzVR5MLD1dF91ykSI6+9NHL1msnHtROPPgJMdf
Apxe1CGuVH/MMVO2wiLj3uzZM5smDd4mBJ1wEA/kayLdPcKXXnygjGILClDM
hj1DQkjR7gUkOIZw7elrtM7+Pej6EL4etQtP3OrNMoZmfMV9tpg3pIlYxpjO
KRfwqj8L8WH7K3rbozcO/lSJGQd7cfniA5DyuhBGxN+np2s1ySLwGX1x2iyu
KuklfFsRCNt8dpGXS09euVGOO/cNFBe/rRLjlyYKc3to8JklD8FN6hyopkzC
s267KaJUk5f1GsEX319GqaJbwuBB6WBjZIeqi1PFFrcYTk/3QQ02Yv+ADMoX
lXlc/UyeWJfK17RM4PaLDgiFeHY9JUXyO1K4UJKJjYUfJKpZHby3ygeUr/pg
tZocnl38EOu8BlHrcWle3eLM72LL0C1BCgNyPFgl0Iz15ez547cH9OqONDQn
RkLQncmolm6I6QeewKrmEDw+J1LceUeX552o4naPo6Lc1jjYmzAePc7+s3pm
e5uCm9Jp604tFGZnUPz4MVjy6Zvoff42FPYVuGCNLocs3gMfNaJI4m2MH/b0
JB+df/BRjOSXjX7kGPYb1o9orWt2WgpqatO5eDtBU7w2TFZO5LFe92nNoOnQ
1AkYIvRHH5Pz6H1sJd8Z2QRvRoyjgTl1wgjTVnrx+DUtae+grP/6sp1zD54y
eRuoPhzQ/a6r4drvJlQXI/jknsfCu7/XJcEXfPnzBCuxcrUvJz+bwIOTbwpf
9bbiwYi/kPH+J0V+MKL0hCL4dfSPZKaBC5fcT6LRuclsmP2c3sVVdu+O0LqB
P2ZBcLkiLvY7Iir+Oo4We0JxguNU3vjEBTYfHoADkwG0R+ry8doTsC1zO+1y
+AFN8vP5pZMO3/o4BXaP/0fXm8OF5q8BNPX9XqxYfQXkHSJQT/0CfE6fzMKO
NIz32Mj2v8rI9lYeHfXX4fOfOwW9Ue6cqXuNgp6GQPF4F5hmpcUuCrN54fgs
OuiUTX47YnhR79EsUYvBqZ41QmyZFmz49JRtMoLxp0ep0NY7tW77KE+ILW8m
Zc1YccetGjx26z8+2FGPvW5p8uUP/nBsMQkxmyZxU7wxDFp9m94UD2Afo2DS
jPlCMy9H87RpkzGt7z6wHFIghr3cyS5xnmz64TpdrFdh54Ikdp9SA2aFSuzr
ugcvLM3G9isDRSM/J976zQQnDfkjTnTYwpZNR2mLjAyfquuH30Vprk2aRWV+
+6Hi6Vge+PsuFaofE9ofrcE57yfS+M6p8FmrL3x/fhOUZbZi4jJ5nP24kmO/
NKBsgA5/MruGu84/pAOXoyXBj/aDV/swXD5eDT1LpvGvlYnURyMBrz/ugw+T
NfnNnHAcNyWPTO/+ERJrJ2DugES2P2+E4qVamvnADEdeHCdaRQjQFNQHc0o+
ifPeREJL9xsWnjbls9eieG7cLh5asxpTVXbDGtskHF60kNcEvoWqDi0u8Ffg
Re4/aHXOGIQDY1k17w0t3xxEzmePUsnDZNjl6wA/1NrBv2IU9pXvYf1G8Kcz
y9X407SXaH76B7RsHA8vTkzGoomT8dK6OSS+n0SvDo9l6dA16NchivbKh4T5
ZsfQReoxSw9ppKcTEmjbM3vU8HXGLRuOY8HaW/TO9YfEODCLFVUyccmO52C3
eB8vUzzGZ9d/EZ3ejOGQnW/rXpw7CoLtPXZ+b4QLPZTxbuM0aBzbhx/1VsC9
fw5gn91KPKO6Am2lD0DTJTmsOjOaM2ZKQfkQa7RvWcWaBhPYuDGUjbNzYezs
/Wj4dBuZLjzLj6p64vhJzvzIVQ5HeVuz946hkoqha/mihgobb/DlggGvaUvb
YT7Z3hPGJe3AZ2M9UfYKsO/LMvH2kSgc1HeJ4Ps0hb3og6DwfStZvdDDtzW+
+L1iOG5oqBe2zZDDxLMqHFtphbmGe2DCQQk/U99PBuVzxPPHo6g++ABMvLYO
s2SMoN22lvZ3SWHToFzweaHGJTmnUXI4Bm9oyfFEpW1wXnkbH719Xdi0uZYO
V1jTtOURXBBkDI25DmwHbTRsnxXmD1oOpSOaeFyHActaK+Oubw14YUc8Vz99
AhdiQim7sT94lFaDksJbOhzeBa+G9+QHAZ/oiWIUjA7SFqKeddHgVBOhNFiT
533IEkcnTxcKlYLxUVc0X5NkimuMXsE9SxOx+Vk5GIG66Knvz5eGGuJMDyuA
5J3UZPGC7OpL6OnNfDqb/ZbKfOLFjiO6PP5vDt2+fkpwnHcfL/c5wS7u3Vqz
tOE6gzWYp3kaJ217S4+11uCMLSk03NWbe5hK8+TNOVA1X4MmG9ygbe/eiKMU
iqCn/wehxHAdo9cMYeCB4ewko4kjz4zjGtUL2LDVH4epu0Fr1mDgZ1b4+pQG
OOu+pLPHnHhOnx2Y8fKxMP90IrT29+TxTzuoXs0Um4xuCqo5b2nP7AuQcEIZ
d0qVw8LeZcJJMwt+d2UgbrkrEasLimjOqwhB8dAk2Bc0X7LVUZ2tLohUdj+c
iqMG48yyZXT2booYtcrJylY15cS98ss09e5Obs7vWe//exyI+9fx59vXaJSt
Go8IVCUhUBuuxA/kxb4T8XRYF3hWnaHH2S/4jK4ee3WF0dIn1sJPg37Y7+o5
+n0+GHIK11HSUx9cuV6V3SP16Z/XX2Fo4B6hj1m3Vzj4wydNTZI9sIhuZasJ
RgP28vKyaHQYG477iqbh1TdFmDtd4PunCujx0SUst28wvvZUZyG9JyeOyifT
jat4SEc69ug9GSvmbKaPVu54ySBV3C1zD1a7VItJs+ph1ZyJLKmOwZpUQbz3
tDvfjhvAu46rosaztXx7cQVttVuKn69lwebqdoq6o8OvspMhUlDFbV+MMTlS
EaU9z/E0mSPQVo0cJD+OVkd64Lj7a/nQtq91O+MShGV7AlE6eI+wvjwD9XJX
k8M0HZb+sxS0lUTo8fMQnzLrz5UDVXidXE9c3n5AsG5KY1mFubxtlgpu8s/j
1+J+yi6Vqy9SdWcLSZ641UKdlFUXg3mSIa4+PAxyHtyYMORCJIaMXQmm/sfY
LKdEPH/Blp+NjIAllRLKGLSFWn8r4oumn1ibbw/RpxdjWE1PCH3+j1odJ8Hq
02FILqPgiokquv9x58gic2FmqB17jy5Fy2G+yO+T6zRWDSTFd3dIQaMd7kts
0bgokc+snADjL5rh4cIOQW/EKlHPPR+ebSmom+PeRY+aLHHYKy2IXeeJTnLS
VOtuSk/ujUZ6O4E33RjIO9dshcY3pRi6vx8omo3k4ne7+aBeIUSVWHFj73Jo
KKjCXV4KjOkRXB2+Fx68mIySj3b4pvdgLCmvgZy/+uiwK5IuBUpwYfVU9H07
n67YnafhDWWo/igH7rkfhx2vRnNYt/famv6TXM834h/t8ziscKag1XFVWLZv
Htz+WygUmtULLXYfYeXgAXh6xBz0u9qBhWbEPfLWsNOfd1D9yEHS70m1IBMp
Cmtc3EE0TBKPPQ/C83GO0C/+AkkWPa8b4RLPJ7yXcJ+XQ7HjwQFxj0cMWlbO
gYi1yt3zHiXWz+rBb5tuY0BIH5RZZofbdfOAvSIg1oiw0eMmpXsfFjcWhaJL
sC3Kzx+JNUqNoDreCte3DaTlGRp8tylLmDmonqdY66NciBmcv/4QQ7YYUKT4
EIw/5cBkr6lsK3uMSp3MAGZ4QMmUbShpPUTxi0fh0vWneLNaDo21N8KMeXPY
MqgvrUo7QFk3euDOhslcdeCfZIVZcu1GlWgedcFLNFEdyd5blLlvy3tJwOd4
apa1EYYeWU4D9cpQ62g99HG15I1Jl2nW3AGs0zea75gHYvKCZPC8/YhyvqmJ
QXPnsryJIlf0HkPGP2Twt01vVr61k7+9VrTeRSN5jvFM2IJzUHEzQYpTDO87
pI9OCf+xUsUPePIphkfU/iR3GSnceWQHznNspIRUG5a8nUEVsoeh+LouNQ5W
Q3XpImHYCD0w8PEk/eBhaFWkhJ32+dh8q52WPZGp//BoMUeu2A4PLvfDVwP2
SoZO6Yf3ssbwk9/tQqxaPeVa7xF2u+zCusvlwsMvi+CJbDpt3/CMLLIO0QhH
gQN+uHX7qwJ7dqrzwps2POFIIK7TOY1eve+S39+fMGaimrXMgINo166LEWla
OLu2jFImTsLzA25R8jcLjDu/E6Sdq8BfRxVtfI9AQtQgrpVP4LGrOsDLyZPt
nq3gl0pfxCtNsvgqxKsu8HAFlp6cBu6KluD35R2cO+iJc6sDMO63A66eaMOL
5o/AZzN3cqD1B7FJswnyhuWIFhcGs3etOrqvceXVQ09Rj0QH2N7d93W75Kw+
dP/7F1c3nhimB1l2aTzJwQbPnLS0er61O1ff3iJ0Uqlky/qfIPd6P02TpIG7
3kF0/G8K772fBZHDZ/A2x23iseJzUNohwpas96Co/UPydL8f+MdrssOEhexf
3Ai/WsdB5aIGoU49E1/VXcbSWitU2b+ebyS641nj4ax0firVmsWwS7guyfSV
xmkx04UrQhak2+WJAWyEMv+ui+/XdmtzS7rw57QNzwupEdacmYB5MZG8b+VL
wbJ3KanaxIuKcsrieLtEGJV5hndaJsCLR7NxRLUqDMpYgv8+jSCfjJ64x20B
J53pBs8Lt3G24yoaOiGFbvjIsOPXPPiRMYnScyNRKO/Hi34eIQuZy2hiVw8u
ywxoiUkF1jwzY9/UvcLp2678+cRxSX4CUnZ4f1bIzyK3wdckqg9z+OWYVlFz
YJwYMsSBPi1IwgvmcfAq7gT2+vcX1m99ShlfLSl1QCoMKXtNt4sbwLbvbvBW
Wyoe3BVMZu6J8PhjLCv0n8p5ssXCmOMLxAO3erBKVKu4faoB9xj0Wjg7exbq
P4zmHzVb0TBcFvX3vIeLvfN47BMBunoMx41WE2F7shMPPmKINjwQMiacJOdy
U9hu5cnRseN5RN0q+Lt8OWnmF1D2QVPscfEjpql3kO2pfzAsaSp/ir0Hw8VN
fLxChl13xIMMOnP8p++SMW6BrDduMEdf3sUzN5TAxmt6+MShgZoPLyI9r71s
cICF9iYZXqP3XpgxKRovj0+iYZlxfKPeg9R2GPOHbYm0wCiD+iXfE4N2IPDZ
k6jv/B+M2JeCU11E/NI7kLX63yKzNCuy0XblVGVpPHpOBi/WPaWuedX05cwY
HNrqh6dyMiFMoVOojrMRHs+pp9rcC3BdzhA/rmUuPa2PHSttcIO2DvcyGsZz
Rq3nj5H7MfxLHgWP04WjJXKo8VgWf39p4enHMjBhzEb2x4mo1eWIV3WioUAz
iU66LoZOx/Pi4XBpGnNYSvgr3OUzcFn81WTMVutmwI8Zz4WcVxmi0tB9/HG7
MU9fE4MvYqT4qo4nBzZvgb6y48Qlp2152Kx0uLRrFvtAIPvnp3Gf7aF44vEF
3O7sKJi4AP/xbhMj1rphTk2G8LKrH3v2uoetvdeCg3cdpHQFQzq6Sp6tLaDE
lhhaXjQEB/WPE81/lPDGsv1022dD3RczK/ySpInL8tvoWVEse+sbcpzdEC7M
nMh//yYAPtnKG02eUmAxQcKW5XzgeCxY2y0V7JveTNjbnAYXvIpZ7psyuhns
Zp3vbuxZl0MpbtckV51Xw/L3Hjzmx1AuM9fp5tRywaRGH99+TsM1TtI49MYg
vvSfFCh7JZLuWWXOfTaA27X06HzBWXHi53Q+b7kDv50rhbZBX2vvbM+glFN9
uuPnNdjvcBJ/SfxZrPkmZC6shBE2+dTLU5E3V/biA9nZ/GJ6JMworYWnyrux
ojVTPLgmAv7uaIWrnWFYYlNA83uPF8cEhbNNvSa2BF6oO3DxGtLxAHys1gF6
nkWw/OJ5WjF6HBaf38rb9uYBRQi0OPgZVd/biQcXOXDFRftuPjTlqqROipg2
kWcV2AsRh6Txzvtg/lewjT+GbKLqv4vQUGU0hpxypf7O7rgxyw+TpSNZTd+F
59+bIg5bkisuNJlDNtfj8EeEAaq9m82jhn0Fob4EMruzosqG2TDmlxwnDuse
Ril3Nv8XR6E6qTzhbiG+uZUjTLMZhqdyw8ApSwWn5/VFPCKFMtN24IBlP2jW
iFiKduvLi9VnUlqzCvsu+QNWD75brQsvF+ufz+ErwTPY/Y03J/8YjFtmD8LL
GaX0M1aDLS+Mhd/F74QLjxP5iIUJaZ6opPnjZK2rZV6S5u8Kums2plbfPpZV
DunWTYuzEQN33gCDYbepsbaBS65Mpj6HAWzNS2CRgkN33rAG4/dFGGjqJTk5
31B0DikWliuN4LUKFXAwVMH6k9QsTnO7iR9m/IcfhlSjMFSR7w3tT3PeBoCS
nwevc0yjt4HmXO/0QqL/QY6zDJtptuDIRj3Oix73jSFowGacVbiVhWNGWFQT
D1VnlnHZt2KInKjLDs0WONE0Dlq7XCBHbhL6/k4ixeuPalNeyGFm1XMS/7sk
mbhqAM62eyEuWG0J92094YXdODw2axMlbvlO5dVXYEbuP1HPbDTqfNhGXzda
4Vx9aV5e58brLg7hVfrNcPzmZLbqMIfRR9Pw1fmPYBuTw6ZFg/DTomNixm1l
3qJdTe/uTYbAbBccfXmjGA4v6gweedG8Rf35q9lXqBpeBrphV8hljbeY9luT
q48uhj3RP2jS+pl0624lXvGzA70F+aA/UptiX8ngjVhX8HAdjapLFCnq2y86
snU4B/V+wz7TPsJg9SncsadakjSNOfr5Olgr9hJyWmbzcpe3bNtzEMv+kEb4
Hi52hRZic293Lvew4Ljmn5ARsQTN3T9By4s/gsr5Al6u5cSvj77DuPuHoGx2
Ki6Se8LyKtH480M6fuoVw3hgPC6SZMOW0ELhcPA79i+6TL1Otgm/UA0Hm2vj
1fnVQnSPwzD+sQy2vNvJyx6Ec77HeZqT0gggF4jKQwege5kuV1s/AJ+zRhzy
sZEmwXQcKdknPB/yTbJBax4cvDAOo7zUeW+hGhupvRUi7xWgS9wugYaH8u+i
GOyvqQuJ/lJ80OwKfTPxEt7L9hDO1/yF3sp6tPy5H69w7k+JB/XBb6wn+5U4
oF9vf+FbRyu+aQzF+JUbBTmDPOhIAay82Ru/nx+ClUWAe66EcP/6Srx/3wrr
uvWtdEwWridLUcVeS5oXZImq1w2wJEeaE5/oUHhEhyg+CMXaId3+7+VACfRA
qJWOQN1uv0i92B/C+38VqqQFLI2S5lnL7UWNh2fQKGokblRtEpcMfkkTTTOx
UEUOh5WpYkF7K43FycKNZwmkXq/Nrx5vEFT2eqOFsBv81YPAKdAPXt+6zlcO
DMGVIerc1plKgaMN+eKOVBhRa82l4U+pWEoNu3bO5auVvfC/72ncmfUSSttj
4G7SVqoPyYNz66Swy2mbaBK0hPO/bqO2FfEQsbUHqib0xFEXgnme2WnBN+e7
YLRDhhZcc8X2nJ2871oxVDkp45p+DyT6NZM49M5qVHmxS9Q2yQLZLdX0VG0B
B7sy5E/XZ49tcfhR5xc5Tn1U12EVzQVWCdS89xIp9evFmSrfxFH2fhjcOoc9
05VEYbgJRMds5fObCzH/1TjY0duRfZ78Flw8QnCtxWrChVM559FbMPbtUX9Z
+r3E9JMGHL4zC1JcpTlUoiHoFyObBI2ivBQ9bKnrQZpjFvEbr+MEZk6SVrtj
op/pBXC1G4hRlEee5X35wRlnVDsxFOKma6LpxENi8mZDvpIhx6O3DeTJi1fz
1X3GtNnDi3t8tqBXftWosb6WpbXlOD/bgr4lf6XG5HyQu7+Vf8k+oJWe8nz2
fjulbBL46PjjsF/mLbfmDud1FhfAaH07pdr0x6cfDXin+k/aGqaLbTqruU1a
hlwrm6hf3GEotzoMDbDJynxzX8ycPZ4NIipwp3UdfQkNZkvF8Rh63BHfL8zE
hRFzefqRrcKbzjjOT5yH3i6p2DP/Bhjuvwa1Zg9BuJTOLnXjwPepI7ltN2St
62Z1ysf78dn3cjzwSCuZCQN505EqWnR+E73oM5v+66mOZZN6QJaTIfoa5oNa
7+2UflMWTVXV8dTMOJKvdeIhF1whpvIbvO5dByWGSfhgyTdo9dVD8VALBb+y
Rny0j7YrTsAOqQEomqRQyAJZyrz8FFbduU/OqfVYNSELr0nW4jRF4Ja2AVhz
oB+XpkfC44YWitTTxm/lKtazR8dDU+1B2PmfC/k1WHKvPAOe7/+TniYsxNqj
NwWVjXN5mvpYocljD/HYw9zwYxAqjAmDp9na3Ck96MTR8EIoTLoBGsaynJka
B8awi50+rOC5Ur4Y/7MdNufa8+C23ZS4MQJsng4Hs6hgXBLck4eEmsA92Sg2
1d2EdyXq8KFQFwKejxFdzkYKh006rc6wHAxZk4mTOi/w9xHd+vrQk6e5qvLB
mR48u7qK7Hc7YdnKUXzKoB0eRYbjcNm1FDdrH9gGOEOEgztudt4vxunL4ea+
8Vg3wJMjp23HXvYqeGVPGoYe2YbWd/JJh9/R29eNWPItFW5NMMMLlfbCpfin
kDzupWg4OUIM2TkJZ03dzct8M9F45lhOPBgunHi3E3tPXYuzFz0T9e4LaFlh
iR6hjmzzVWArj02scEIZtfdswwJDDz5Oa+sef4/G02p3xQU9dTH6cQprZPng
mczdZNA8Ht7+u013MzeC29N9pFa7V8jotx1s3wzFa6+Hk7HpNhAkOrz54m7h
1pNiKNj+os5n3g2xKWUDVxxLE1Qu9Rfnp1zCEdqbyMZtJM8/1ItzgyJE/Wd2
ZLcvjRz65sPKvP5cu4Jh941EcHZxw5plpRAS5IpXQ46j4npFsdNaHeVGmaHq
33oKvf6PMm066Z7aJbS5FMOG5V78sLiekobKUfqEIThX2/6E+CYX5x2MooDf
Qfzn7n1y8zYSy2vaQPW3E5xU8qVTO+zwdNEgVjNzI3DsL+bemsyq5fJcO+uO
eNzoHSU8qME+2T3hRES2sGzHCa77so+HB30mrWOTrJYtE8RLh07Awb1zacRf
U8qdq4Qfbk6jzHuTWf6qPFfujeVDQTMha9wK6LXmAQXZjsOlcydxiW4yfpk2
nN8+ksae6TUwf2o/8r1wFAJ8bOi7tBq0PCxAlYpSGi4dLWra3hVi1+/GERkN
/OjQbfHqCgFlMzL5w4R/oN0SJD5QVCLd7SOFAJtXJNXfCBf99Gc3+WHgG/pI
lE64SFVFM8FK/0Td7RojylRLEH79WYlaMzwwKHMIlptNxJFZnaTFX4QdgYu4
tU2B4z7JiDUfd3PJ7nwqO76M7+r+E28MccbjO1Op01fR2nmdAfdrUCJy3k46
K0bxYuMcyik4LX4OPmh1a+ZWsWV5KWlfucq/23zRJXgmLvnaBH8vy0HE3SrQ
znLmZxejMOVlAt83XASTe8rglKKRXPufET46/Rhkvs7kqLJKbG9LEUI+jKQH
Wrakf2IbXPEOp/rsYLxnroaqXavF8IlhpBKcjwEWIbCrfALMb5NmF62VPDkz
in5tXcRSVxxgxtA5aHlvG0609cbhCv24oyuHC48189operzMw0kMj5zLg9v/
SX6VmHDVgUzIfVfOPxQmYmDMdjxlflz4Y9Ei3LDVFOM8DHF/kw/+LHTHYFFe
CPfq5t5PyeRzuFbYqzCQo6yWcqKGP/08XQVbHq2HUjkZVHfyw5uGFtA4O5yy
Z+0C36lSNNPzJH15JODjeQFsH1nN8/wGsX6EMqzf945O9XpGb9enip9H+sGV
cgmf7PWFE/t1wG6Ls1CmNgrr5Eai//fl0JYTg7NeaqDa9FyEFcF8Y+gK3Dvu
JHgZriSf671Y/q4jTuncQCtrG8Qn901I4+dPYc8ZE6wcsQI9XnnSDSjDwwta
KdHUmy9pJrMkxh2fP5DlqP6Z9LDFQqhdbA7aQcvISHMhrAtPqvVvzCQldU1s
g1nout4bZnAedVr7UdaOPfQ8Yh+n2g6RnAlMqnuvHkI3pvTh98rp1AA5aBN2
Udw45iI4K92qO1jlxurLGtnUIAhWDohgzVQHNOr5Dhwe5UA3ItMsHy90fvMG
XBXmsUK6Kso39kGdMc+Fp+/mYFuFFlbn34Efuj3439s/pJ3eF/PezqeU6CHw
2OoSdf6zpPfLIgXraj1c4zVDHFydIVoqnKUsW2cekW7Ma/ok44vOTO6p7MEP
vjmj9P0KTN1+X3z+1pHrJ2fitcgK6qr7Kk60+EczF6hhr38b8aRNHzY9bImr
VL7Ap8vjWa91KtaNGyreepaGw6rSIcjyOc/qQFjS8RuubttMb8OO8tWplZC7
J5VZeTMPWCvCuv6V2OeNF8ycrgJXG6Zg9kCBNkoNhZPr7PhB+hzOWXaRAkaX
k1v/XLgUWA9ljl9EJ+vpPNZ/EOqfcRWcxj6Aj/PbxLU/SnBHz3/U5/1/+Ksm
D6FMk3vVHhWLanuwdNMqHPdpNpUV9OQrbwezXNhr8W+VLD/VnIBKQ/ph6YdH
8M1oKpbaGpH8kGcQr5aGTeVxJMmKRKlJLrjAqgef6X+PMn19cXfrW+5/7zJ1
WvnCHYURsFRuHn+y+EPZS604YPVjksnvJz7c0gnvs/dz3SdF+jZlEK1c0SXM
fvYbtHSccKXfXhi9/yS0KWrSpWtFNEGvtwQWHOQ7z++KSmnj+dCAu6Ll0nWC
35gQ/GV6su6hkEK3T7iRXHd2X1pYizbZcWyTuA/WzVPmy+iIwdq70DzJGxMK
1uJ/u+Ss+xUfpqLXe0Dnfg9RqSkJlt3U428Hq3n07Xmi3MCDPGa3Byw21hFU
rokQ4HYdMhIdqDT2CP/4OBhNMAM1n36CVd4R5PFoDNm9i8Xr19tY/0q5+GJb
Fdxb/YdKXh/jo4lZIFE1F+Zuzoe58nZgrPFAzPcSScF5BxbfV+/mikmkE+aH
EXay+MlAC8a2B3GY01UK3JIraGj05UMtpjBr9jdY89yFFRp8OOLJdpBXdeYB
g17CksoU2P/AmxZvCsbAi97s9Wkfe0eYwZsfhmidlIxag+K5QEiBryl3YO9l
bfxzqgSv8FKa9mcba/VdKBx/OwMNEi26OcWMnSYvw9XXT/OU9IH4sf2i+P55
FrzYOBL3tvuIzT6HoMhZH39REg2MD8FLpQq4ZfFhdh6zhS2/1ogRWvMwUfs6
x4+MxuJ+RzB8kDo/i5qL/Xyl+WTjD+6oKYKb6R9JdDwmHHUAHjLEgx7UdcF0
7z5wJkUeDj8eCeVfcrjSPIBHXPLgVxuSSYj8TupZzZjhv6ouaUYxDFZopzSF
aZizLk/86xiJAbZ1dD9gJO5WNYN3O0rJ6+0OGnzjDPRfthrywg6w3dcEnKQy
DLu0p2NywiTQkjsHw98X8J/oQyT0tsLexvKY6vcV1g+zQLfD+aS03xybZv2g
Cw5x+Bb38bp4Hcp6uYmOGSnSNUmDqNGawq/wnlXju0diyRRP8rn7m340T4U0
1oe9cxXYatc6uumhBWdOnBO6hBpMP5WEIROS8P2dgSj1wxN/Ru4SYuwL6cGQ
E/QoTIvvllTw0OAghqHtwuC7E3lDKtG3uFO0RDmPIiMLhFfulfhF04MnRdyH
9s3G5B36FSoME/l1WAJaDjiP6eqq5J2nxU4v3sJkvyjY9eEruMtkUaHDZEy+
e56W/ntFhQOGSjYfu328I8+G1w/ZU5eqGiQ8v7iT0lzaoBCGYFdZTzzQVMer
5J5SXXYvvjjuB50zi4O/9km494squM/KhdVCkLD78HPoPD0Czir1ZulVKlza
MQmzlyzgtTSPS2q6c4D087oP3tqc0RKMFpaqNMpWBTaEK3HhhifwISUdum5s
47pXFeB2dTi+nm/MkvgtFDlqGne8VIGPapXscyWVQ6sjKNTqL9l/1cBnKe5Y
W/GSOHOReFRYwmGp0qifPQWdzjwkSc0tDPnVCXcrES3rrqBhuhu239tNByzk
hGdfTtH45W70YsFkzJKp5Xt3x/F8V0VecWU3xUgsISnzt1h4ZLtYpDYbbSyb
xfaJvWhCWjA+KhgLL6cuwAy3dHxj1CJW+x3E35JR9M5sKzqtVOCa2EKafKKG
27GKr8Ih2HBVFG6VuGH5kh180VED9xmXYcqd26T94gn8Cj8prBndCWNW3sQS
0zBeqx/KPgoLMK73e9j6fH/d3Ya5cEPNl91ZCo98l2P/VZq4rsdyGGZpAK/O
F0BGhjSfv2mC2gcSMCX8BgbEaePdrXslmoMyqP6rMnblB2O2V082N/8gdi5Z
iHvOTcDkgBJcfCuepCoP8u06A/jn1gfy5u7klifenFm5hb7L7uTCM9Ki0wEN
zjAcwJeueCAskqb2f+vE1Mv9eIFlKW86GwL9K3vDFL/DsKLahKYVZqFVpCf0
8n1EJ7QmoqH9DF78QBn6b74JiifGsLLfL5aXeoe7lYaIqrW7UWPGDu55pV0c
/r0Bqyx6QsrxWXwSJvLnMGvcNGs7+icu5cjfBUKXkiX11x4FzZ87Rb/6hG5/
38MVkQkQ1xCH70JqUDdBhOIeF+FG/V1xTXePUs6FgVrQPEmE8B/bK78T2zf8
Ei8GT+CRgiOfCVfCvgt71UftN2bdT7ckYdvzeWTBUBb9r2Hxmxp8fSaQ3Uav
5DS7hbTMVs66xyJ3iLT6KUQFJ5B9rIdgsWkE3z6VB4+P1FP534/wiepwfPRe
wfGBPqUFH6cxlgJ9Md4hVk5XwrUhvvy7Z6PkwMgD/LZPKyxq3yCOWT4bl88Z
w41zg7C8+YsQ9mwRrio0EgZeGY9DZHeKhSMT4MqA9SwJasZfztvQknrzf6d3
Y+j4mzC4fjqmjp1HL/wbxdeHPAju3Ld6n2uOkdpXIaM9n3t8649nri9nP7Xv
dEcchO8/vQXvpSPohmc0B07SY/meDRIbmWwWWkZxUbA0tht8pGVb1sKnJi+M
d/oj5Kn508TaD/SjlsHDQgGf5J0WZFwHwK3M72KKXQ49Hd3XesVPFbwankxJ
/wbUqZ5QxNH3i+lw1iw+MLuJj/cx512ftlK04g/4tcOUCrKXo9R7Z+7Xdzwf
n3qbZBQfC1/N40DGIRW1cr25OWguxoccwDs2RyG011Phj/MUfuqthgNffREa
s27D+3M6nPcmEx7KHBbD43rBv0VeWLxnGhy9WIqXiu5CtvEe8ULsdzrXJYuB
4ZvoTG9tyf43a/h0QBI79L0OOVt6872cLjCvCxQXRjrRclGX1rcPJp+sMnhk
1pOfHbomLI4y5nO1J8Da5Qs5Jl4S42r6sLq2Dg96XImx7bZYfdKbY8Rmehn2
kZeviKOieB8c3jeKG2au4at15mL00Xw6GmsqSgalYb/8dxTwR4HU1VZzXOFO
CCzRqsc4QSiOkNBZ+5Hs67i09rBqgIBSyTzu+xB+ci2E/DpTaGNsCF37vQxo
gipbf/fCYx1jYLVFRV3ZjmaqdUmvexzdgx1HjYM92Y7CxQ+92VpxAnv1nc9T
O3Ipp3Un1/6ejYapt/jc982kfW8ZH49UxqDcbPxwZQqsOGuM3wZeFE6YJZO2
nBuXuH6n3Fm2/LegTbw/5g+PO/IZNuknw8HHMvhrdykdKBxJw3umCR7uv0GU
XswvNu/DKfunYrH6AaLAqtrhJn78u1wKa/PsYEXtVIwaXEUZZseo7U8jZOxP
pa1u0Vy1fw8f7YrC3AVK9d8vDOF5jnupSCYfxIqnPKSxS3z4rEYoW1DCH1P+
SLJ+6HPX9Wcwd8Bq8dAzQyxN+EmXlw1jiZUHTXA+yGobHHhI8C2xozQKe2m8
F/ve/kwH78/kP6oDuaBBnurjH9DC7/kU6QjChjGDWGdtCZ9cmACf72jRrZxK
rJm0nh8aKaNeR7SYHGyLM8JPC4PN22BDL3X++zUZa3Q34do3Er6yPpwv6Mmg
je4hOlWpwDY2owXSeUFKbgc4Ru8PXCT7uvR9rXXtHgtxhZsfqplF0xbrMvg7
4whMtd3IGsp5EKgQTWdMO6nEXYN+q+ijxYQ2/pHVh+UdU3HR8n6cZFPDnotn
oOq2K7DkyyUonPtOYpQ0ENL+ONP4z3n0rkYTd42/QbBpKts9NKdjzd/AKHcj
ndA4VPem+Rjf7xuAot1AbmwbgkyXaOCivVS5+wbcN9HlK5ayGPGxPwzpMZK/
3HLne8suQkDAKTJReEe30xNxSNhIvrWmATLbFvIFW21csGMwnHw9g8+dKmC3
18v4vk01RSxMh/HhkRwnXAab3WfqNjcpoqb/L5DTGsiWA7Qg6bQW2qsqg8xL
gb1cBJ5vq8wPbR9g5bkPsONNBtrr3KTUeBdePrSFR+4dSVETtkKtXC0aSzuD
ffE6PuERTBr3Zfl+TC5dTrgMD/YfpZEzDPDOBx3qcFbDvM+V6F5Vj6NXzEap
NgUc2jSxW9tbaLPKUG4e9ERIHt3EF2VPkP6LtWz44yq9NOjBM3eVoicvqMu+
tVuUe3gQZaoi8WnhIlw+RR13Z3ZQuP41mqMBvKE6gs9fWyx+3PyY4v5q4jCp
RVA0rQfXfnUFh/QZ7N65Dlp884X1brp8duNr+LsmDAt2D+AZnt5c2qnEx/Qm
ksODk7QraDude1WGfWWlcbBvE/xZHYnn1urg3iArqu93QeIQ35///icLE5O2
gsFOG9olnYuhF4ajkcdy+FtYA5qj4ygiwRpkjP2g7Vi5cNz/MX0pXUpHvBdi
bXAS5MrvFRXWXBXcy8vQ1mk/LhjbKSZYOnNW2XZ+PaNDeKM+hVqmD+UL/uqs
8aAEZm7xx44uRz74Vo4fje2gVcO1UcHAFC9rD6Lm5+rsOtmYeyVehun9XLja
aj2/SzHBU5bm1K+yu4fHDOnbGF0cvkqNzyothakO5tAW9QRUPGOwoVCDV5f8
sroWHkj55y7T5CFbhS+Di+ngOCnaODkbk0RfrnNeQm+1rTjocg7c8lKgkLXX
qathKMv2dePYa5owcn02mw5L5oXzS4iePaNh5Y44VuYfjKxYTOOcT9Ikzzt4
vc8s+NfNYDJB14WPkceh9MUi8v+tC4s0LMDuzj4S1hjwJ+d7kJjaRD/UT9Ht
S/9ogPpDwcBcm/KHJrBTfzdKO5iIatuzKaufAsfEN+LuHzp8r11aOLH5F83W
7smhY1skFZtDMXn6FKHXwWBe2LYSb85fKUxy86Iv54OENBcr2FoTSbaHzWnA
3aHCrqJh0JZ8mIK7lvGJiFGstnAanxkQC279IuBBUb2g9BW53a2eXnqco6fH
zeH67Nu4V8sIRnyswhTRlspHXIGUkYcpf6MrNn56KETmuGGDb6vg0RyJb/41
QuO/u/gJtvArHk2KHu6iQoUKztHKgHttwdxPxgarF2/D05oVtH7be3hU3oBB
ITpo8CoCxs9/STfvhEHcpqv0+/N4tP4YT817LGnxu630r3vGzm6PrFOSwbrp
0ak4Qs8Kejda88Wy/mx/dxesOv1GjDCW5QSfOWw2qlQ0/LCHx//QR+UeEkoN
C0PNtO2S3fPy6b78AGz1saLBA7dTwUM/HC43l357/YW2htQ6uYX50LkjQfxW
poUjP9uhdGdfXvhXkVftIdBd+A0WBCqwdbgtzf2wAC4Xu3PnPzVyJTW+mZwo
3tg4lywdfgmaT07x4qpLYvGdW7UhivtQZ2gv3D74KC5fAHhv0CAuD31NJ9vl
6Ojb9XhuwzF+PFkKv4R1wvf2/8RJzW0SWjSDwpcH8tUXA1H190xcXWbA3u5y
2NKdG7zMe8DAuNGs1EeKX1iN4uXoQ0ON5Xhh3QoumbGdH69/BHuCSXIubype
27qALfNVmF69hMFbEqBS4wubea3B6PDpuEwrna4XVcIyn0DYYS1NdpNSYLx+
f/zk2iy639GHIbcP4IKC1SjrkUqjm034Sb9OiIzMhh9V8eK6JHXUuFGNL26V
4vWRtuQaEw8zTx3A0ubRYnFQrhhUWi8YFN+B1JgAzNiVy5c3BsLM0bLsdEeW
SzxHcPXfOsbWP8LiG/r8pCuZPY0N4P7Kq8KKW5G806ABtoSosMWTOJjxKAWE
3Bg8Zd9MGa5TCX1jcGv1GrZ3TuXnfpvYdFk6np8ijZpTJbjTSouM5hjh46k/
KPt7Os7plcmzGofgnH057DV0Ma+Ac3Rv3BmKe+YDwtcWMfV7NCUOaKXEnxG0
4cwxscMon2J/MCaduQVB18NFzR69IKPsPAfoHgK5fyES3Wx7qIjzw6qmLlC+
RGAsfUxMMnxCBvfDuP1qDDusV+SEsp2wcY0yv1ksLQS81aPIHpOx4U4pWj8u
hoTFPXCjtBP6bfPnt3+ksdNJE8YE6sPEnbGYYJTAKpddUZuNIPbDGHR5PAaf
HrGGPiZybPHOEFsso9C4ZSRMn9o9X8NTcNrgDvH3b2e+M28FHPR9SLdWN1De
0WZhSu9S9rjty+demKNxel8cC4oQ0urB2Xv8WPTWxyX1S9BPOg48rkeDr64O
VfgKZBpXKaaHmiDYb0eld0gRgy9C2fQuOu8m4XC1MzTsdw9uWebOnhM+0/OB
UzFy0HwR/+3h2GH7Ia9sDAQkH2WV0k/CWHEHycgehCTl8ew+KhIsWk/jFFUL
jJQpEx6WbqaDP88IhZP0eb26Pjq4X2S3KFfMVOiLl8qJ3M+y5PwAdUTVM+TU
Sx5/alWh1p2N5N4t9NCSNmi99B42FN4RpVZa4Keyrby/6wSZqO3hM2crhA9U
C/YWI3kg/RbWTKrlG27vJdPkVWDLgUpe7ldDA6fakIGRDzfePgI2dl/EQSNS
EBqno1FnbO25mdvxy8wxuHbObNZSdOE1qQl0uHcR9OjWnMT8jvg14RREBZXw
4kKPOtPnc3Cm2SC8ajUPhpVmYv6sheyr2iWaB7ylEc9u8PLB//H1AT5oNyuW
mwa8x4NRruRyIoMMz9wH0TUfXfP1cOalX8Lc0V20smwXv9HdCbnXvNhs8Aic
qOSO4U2XhSsa72ja+in4o7iLvFos2eCGCOsyjfiK/Do4URQtau0bJKp0fhWn
PZWyPuBoKJ7XGUi5v+Tx/JsMEc9G858P91CvJYf+3bjG524n4hPoAk64ij9P
z8VJu1Rxwv5HglLxW4mlXTAmx03G5Wq2LHezOw82V8N/NI2NDxD8+Xq99vPt
S+RuMgNnu/XH4NcpFJ4dyld6PsI/NcZ86HCUoDfwO703i2SdKe+ooa883tTb
iDXTjDlJqRc931iGA5ORTxZMRM8LahQWZM4aSeYcsbDFar67CReevkPRjxv4
TG0rN+5yZBraQg96hWDxChN8Om8MWnifxKJVDRCrulWg9i3wyfUzz/Mxppfj
M0j7yUC+uqoH/9BX4Mb/PtR56C2G9QHvyCbsPhqHZNGm1O5d8UwUL92fjqr3
VoC5w0q6VRWKUlE94ejDRFDssIYCiy3YWhaINa1fhE8qbbwrzAmtD/Vh489R
xD2SQCYGeWHOE0Fv3SAW0//Qrq1t9Lbve2gdFUaTZFPwZN1y3t4nQhxtcI06
FX9BUR8p9C605LibPymqPopupZ7j+e4L0ct4J070i+bNBtowwHIe/951DN/s
fwexXYVcef0kpN0x4FfSQXjn3xOhs+c2GHZtndj0UA39Wi6Lgbv7COkz07Dj
wSS27llGSX2PQu21B3VNp7ex53czXvWxAl7IPyf5L+b8Na2WbQM0OcIoTzz1
JhL2Nu+HB5F36OO5ufC6/ZXwa+oPUXd9tdi0ZKpw55Y5B5fnA69zhTMvb1PX
5BDET3dR2uUknmqYRG2eqzlcZSoaX/zO+l7z4WtFGYxSs0Dd4bV1avaz8Gj/
qbRJejbnzJDgQvkbEH5rC1XJrOL3f/fRryUvJavmXqDXSSWs9CJAciLyNF0p
mgYaw2dTzasRaDG9mCI79rOW5WE82mepWKKWwCdzF8POX/v5S6gBtco+hMvd
zFW0zh6TDhbyqcZ+8DzyF5VmPyefhu2A+49xyqBhrNlMkupJRUIfgwrYljUO
d8iP42Svg/BRO5Q0jN/C54cJKLPuFFaYZaJ3uhse2zeKTTL8ucJUl16dPSAm
/8sCx8m3OCxfkfek1cCgV8N5fmAavfq2nXRnB+KBtCZStB5EN3zuYK/wany5
LIEmX6uEtEtzIGv7MRImprLOmQ/w9WcaNo/qy35979HV/3TQJlALZa3OMClu
wGkpW/muShQ0RvniLsUXtOjjYPwfw+Xh13MbheEKDS2lJBGppERlNH7fc8rM
yixlZI9EVpmRdtqDSjQ0KBJJSf2+5yShkJGGEbJDkq3w4vV5/oHneT7n3Pd1
VXtXQKmsLnhMmENNQ8+z9oRYkrmfjh1TtmM3STm9RENszQvCxSOyuGKMHJY8
7o55B76KkzUC4cCdHDR/HsAXjYNZufmc2N0yn30GP5Ce36fH94LW0bUDzjBc
PQ8vareAVlcrb5ceAYNAFdbsE4kD/QdRzwxHWDn7IInJF2j18yzKKJnDj9MT
2SMnlJXU53H2IhnskfCJ7g4ppYiYMDZKumT37kMI7HA4wXLf30oWOvWn4jUk
LnSYzn8iFtHmWDMeZ9Wfh8m8Am9bxOU/9rN1yh1KHrkBnxpEYYKmOwwx0uZ7
R+tow6twTpt+CVJOhtI6zaX8ufgORty+wgGph9CqI4cKfe5BrzR/qOyMwfkf
FHiO1RtoO7BQeNz7F5mMqhenDbBl7SfzeG7tcZqhLMM6qUnCt2UD+d69y7Tv
9z18fzOC+4R+htK8A/h7tTJeacsUFQYncbGqVBhbtQFuXLiKFoUiHQwdBNv7
BnPd9ZVY47WNH09o4cD4T9B2chZu/8+aFxuN5u9KeRywJgzNuu0X89vmCKf7
fYODDgdo1bxE25qnBvzeKxHjvkygTRZmqPSiBbzKNdnhTxzkKGpTtE2JeEre
i47tFKWG+g24dGADrv/YCRGeX8SMQZdINn0IZ6dWglHjExhgH09/JtTQN88D
JCwfx58Sn4lLM2PwwwEl8dbOU9jwBEhLvRFsXt2jIcfjMKbpIbfLZdHCedvw
4OETYupnCTaF7EIZlb2YflcRg+TXwpt4P8HiuCJFvV2J8l5Hufi0Bc45JMLF
C25w6NRYtp2miubpetJ6PSlfG7iHLk9YKv6Xq01yyRvYru9YbrM/ii37wuFn
gAs7uavziZPOMLjHaC7xAbSobpeWjl7G365M5o4LJWh9YKWocU+VC5edpFG0
HtV+J8CsREPccSaOA3YP5mHxw8g1aCDuP+5NtzeNxuyP4+nD7FD+dEoRjacE
Uj+TT9R0JE+8++EqvHx4hIN1ZkKf5Z2gcSWWXm7Qxd17H4HVnEWo3cOV131x
J8t+I/G3TR+8NHwxOlk6Y+CqC6ySl43tZj6kdS9NOvl6AHrufw+brZE1dz2g
Nu/z0BFyFdbv7YluE9+RSk0zbVuhjF/rnkC4dTId1P9Nzafnc0leFPsPHIBH
p+jyFD4LWUeUqSzzC33tp44T/jqxsnYwO31wo7Vey+j9r8mkqtofZ0Was0Pd
SH6W6Yc69ctYsqUeU5UV+W5PTVY/EkEWlafhTAPjo+hQ4Wz9BqmxWyKMazxC
tc+WQFXoI75oclGSE5yLNX6aeO/tIcz/tU801hFxQ/+75LZvkMR/91lMMDTk
yPAguhn1XbB+WQA+n97AmEM/JR4PmyjUqQ22zRmDP5XNMLWoH6csjSWV5tPU
vz5f1Nr4k2ZbzMLcnEDhXtJQON5nEitElxOvu09j/7Hj9tYe8CLUROoTZISL
rG/x/puZON6+H2oMv02z6rPJIzSer5+QwWGrXDi4ooZufO7J3srPyMf3BGw7
tZ7lkpfS5kmB+GXHUG66/VWAZUWg3nGcfr+sF/e9Gk/bk0L41qNkOG2dzg3J
hULRPXssSZ7N7U5qkoNX66nykg0urGuEs2YtVHpGlyP73gJFh50478FN6jen
Ec6E6JD3R31++6o/fPTpw7WmDjS66TOoHZFyws1lHCiocFzdUB487zbc310m
dC87Cos/aPHkZAs+0KsP/5i4BCXqonDn6BXwnX2WCmfpsrXvVC5I2kzyg83h
48SP4hLvYgj5nAb31/Xh9RNuU5O3Ep7avhJVYt/AjywTWC3ZiRVrjku7VY2F
hS7TWHLZgpfmE3U/cw3GjFZn792j8ELxNNw3qh/KX64Veg4h/u1ZxMv6HMCw
6aegdMQOVD/RBE+Np7KsnyrOXWuANP4CpZzYz/d9tFnRtFr8veUwrfpUA1Th
xB8rdnPd5wy6qjYP4hri7G6btlOAyRve3FtGMArrpEPa/vzk2j049zBa7JF/
RSI75jbtm7sTHT7b4HLLgXgNH8FF0ZAlN3wp2VROOqRbDP2Y/hDe6Clw57hr
YvnSh/RC+QWtmvSd3j9IxcVyxrjddQLG2/5jsa0tkPpFBoq+xornhL18eUYs
Bto/h/9cvdHPOFaI/1NMSuapcGVXL2g1YSw1FTjd+5Sks+Y9bH9dL+x5IIp3
Eq/geh1NPvvtOD8qGI0vei9Co6de0hfzmyX6FweytvtSjkiz4tC+UaBfeQj2
bpfC0T+5MOH4PDvf4x1w6LzUdmzZbJqhFsLSa77SCXVB+D2tSBzppsn7LEbz
pt3zsSH2Pj5eFklDZ6hhVv063vUwjYxpOP0OTxFmBo3AfkMd2D9QlqJMXahN
9rrdmnfKYkWCMWeWT8TJLnq8aH4tjv9xCzq/PZfIKCmgZlAQPHnfQrcT9fDR
gGPwRlOf6xQCcVraWPa/GUqLLrZBoUsa/5VT4xd/j4OJrDfnJX0EdfnuZJ+d
CyV7n1PYygn85MNyQeucGro51cEvDQVBseQYNLSVofGeGPJ7Xiz0dD3G5fpj
Wczth1UnEnBMnCX9clHHzbYpeH2dN2wN2YGDLf4KOnKj+aXxIzqsjqj8+Sgd
OG0uiVltwZ9tFuHFtamiuFEk7YeltGDOLD58dAxZzlaUKj46SKbn3wpC1Sw8
KM7jKcmVcElwALNkFfo75rb4OasOpdZK3GemC7iNGoDbjJ7CE6NBCF2yPHbM
TQA3W+qpH4HCnkFo8kKGMuP12eJ9KFh6Dua0iy8p9Xg59B9dxUXx3eDAmu04
NCgLQkfqUtLCJSz30gxHuznwfzs/0quhJyhCbwErLX4CI3Im4M2J78Vi+3K+
ZF5LXZvzwbPsL/yMj+DYbH+srJTlU0ti+avHN3FVlypOuNSHxm9zIh35lyBe
X4XJYxZiYZcOnTkwCbcO1YEft5KhWt2KT31/R+dsztK83xXcU1sgm5I4StYt
FlX0vwpr76/D1mk/wVdNCw/0/iXoHZBHZYtg7Ln2K1mqWkCupBSW3JvKX5RF
XDj5NAbc1RXXDs/l8186BPrdBxdsyGPNiTMkwalEIHyTXLF3YgM9xHyjNDbS
OEupz95BveUhNkxoo+Hv99AQPQNc9duGe1/W4eeu8bxPrgXcZkpY+3i2+HD9
MyZzCVurnYdrrluEKK0dmBbZjZ21j+C7egPyTUmn8jeGMPCROW/p2R0CWk+x
js8SnNTdCjaAAl7Y7sipxy+A8lN91LOoFiLmm/F/nZ9x6wIzdJZ7CUbTvODu
ZScoaKgROxzVSM3dHEPitsJKBS/809XES77dF5PcEsRVQfMxxGQhG84dAVG7
+tDxtWehPOk939pxDNpsHoODazKu8Otuv8q0DizUUnhY2E1acnwt79gjwGCb
FMiOMoQTshup190huLD5Nd1LTMf26cd5XpcJTt94SXrixFqeqaTDK/tYUdPi
CITtd6jdwQxX7nDHTUvfizzzKd3brMnu3BenKIWyXv45oYdqEU41KsAh5SlC
cOceCkmPw0sZMWw3yRtlQqZhTPIqnv+5J95JaqPrU3rjjGsNonRAEu+aH0jh
tnmga/KIAlKeQbBbAFlMXQuqPncoL/SfV7ZWc9g3B+yYNx4t673woMI47ll2
Hy8v18Rlsx7AreDbgkHSONbwSaYwgx48MO67ONNSC+bGHINtuSk4Q/4aHPu8
l9odHVh3rgZqnUO+vkcLHN0iONlNkWN2Bgo5ftvA6vZ3Snf8x49PhvPRmhxK
nou8/dUgvjglh0tClGm09WfgGh+0iwsF29UR7JcTjU5TfomjNl+iy0Yf0Vvz
snCx/D5MVU4VObMMzSYrs/2aZOGubwp5BskzrNHmLw/2UAyMRLu9A7isRyMG
ScaA7sdKOLNhL1+bmi5WeHfDxoN7JO43HYW/Z8bjl/wHpPexgBryk3mGwmkh
SbsWdJt/CANGp2DY/BbelNOTbE6ySJ9649HbQfhfxBfRrfokyO0LxaTSL2BW
K8dXl7dQjk0IW9B7mverStCfeIIM/aIwOWMWn10QQ60+A2Bgr1R4O6yK8h8O
YY1z/jxqtQz+1DXEtkVuaDr5t3gDysHTpwQjq1bBndpa8dUMK+rRps1vKzTp
mvMhWDPyCc2T0RCu3V3OWZMixNfBo3FeaJk4Z9xNW7NXvdHf5xqqLtrAa/NT
efNxEV43KOA9xQZYGLMTOvKC8dL446Al/iTs9oB+bMnlKzut6QdME1OCP/KN
Amu7NX9USOH2BXHdIC0eYDoeb62KxNJLYXCtqxudvhjFJZRBLnLXQHl+jDBt
RQ6/qhNB914dPFyrwQliEEOkIl7YHUABI2zJcsBZMfVJdzLu9hS8uvWRntY4
AX//xtKsURUg3fyBdfqXUG8bKTo7zkGjzyXCf+06uCBsIM8PSeaWqiN86+MK
NL44hftvnCWMejmGu03SwiE9l2KZTBGvD0/gUyv+k8xJ1ua4ogH/3hWNCzSQ
i8+X04XA07BZL5wpxhLSTRT5pVsPLN+7DNyc9rHlwvtsEzmNpn36A+dGbefG
Ia9gf0AWDgnUwbE3ZLlfT1Pesr4d5irEgZfPIqFq+1nKUpbCrHfd6eT2XJzS
ILDCTAUotboCX40JWh9/gvPBdVh5fRYGLB5Aqza3CKc3Az0cGIsb1zYIv5K7
ATw6Kx3wI4EXNvxjIwUjlLFZz4c6r9CUPdaYduMjRfu+geBVHVDlVkgJOTlo
NNwcv4+sh5uDTqKbbRJV9ahCm5fWtDH0CYwL2Q9JffVx8lfkYx7mHHO9nuTX
GHNVj3/54nacjBozcHfxCgqJm4nxtRXS/JhsVpHL48AbB4SFvU5B85rBfObK
Bty5UIeVjCLxzORc4emxKiEy5hP50Er8lHCUNW9WizIZZXho73UKMpiIkZeU
/jnXVSqc8+82jzwRj4WST2oMLhs2gnpb/+vC371Z8UQw/+3cw5Z53VDB74cY
/ztSTFhyAxaoqeLnrUH0wUMepbvjJMM/jkfZCYEcZVRPOinXIahqMr/Y2J/8
u3cj5ThV/PllCns0MenjO9gTGc9qspe4a3WydFeGEXvLThbiZ4cKJw2TUMdu
K9+LihLvqXpCv1Fh0Oq6ib18nNhTY6Hkz8EaqqqW4+vVIzAgdBXHi2Xw170d
Wk+kIP1RZ/+Th+nG8Fj2/GrOZbsyuH9of862K2fXlASQWgSKS+pWs/fmgSzd
6MRelxzw5jwdfvbRm08U+XPKMgN0USkEpbU2+G5CNlz/Zs3lC/wk13aG87DK
JUJ/80S+/Gm+5NCVo7RnqD2vPZ+OXx6HkZVvNO7/OonTZw7gd/W/Ica8Tbw5
KK88uzQU1p8xRI8hVZCQoYQbnB6RaepGIczQnb+9ksXxE9Xow7EhqHMqkD6G
fOJdSkyen5PwxQETu3V9X9K1rc6kGt0Hu5tV0hx/O6ZKWzb/kIx958XhKyyH
6h/e9CysDPx7xEPANyVYzpr4OXsT7q6RCpFWC9DWzxme9owlXXsj9LA6KT3p
dFswvC6LgQuSyGLRc+oUnFAzxZh3rNgILtEtwhkdoMOftXmD32ie5f6F3D1E
KpmwH52MQ3HL9A+QHyqLqZ3L+GzdUurssRozbZwFg2Fe0kc7ZPnExK9U1ewu
XvYqwyuzZBisjgma81qky7Us+Hq+O68SDTFQ9RhIIwdCc81kCo3SYEvlm2C2
XFN48IHwuG4w+16Qx5UfN2PonvHoNeU5zu+okSrtTSD+cgyXf0BRre0JP14W
B9pz/fjJhp6cOjYNC5ofi464H07r94CWjzfEPNNefERbzzbs+Fzo9EiXbl0u
xwHnkiUvhmvh3acl9LBlKBi+z4UNPx/A7qSXdmNnPOBKPokDhecw2nQOR+v1
ZdOzFpgzIo5u9A6lyuzuWJtziE3+HSwRWOofwYNdF/GseBZP6R6BEcfNYNqP
eazxphfnDdqB66IW8e9af7q6oghdwjzI4I891n15LfR54MzpW1bT18VG7JVX
RKv3v6d+6yQY3C1H9B+ZjneO9MSTBq78aZwBTvWfgI99+uKZqyPwVM9NOHaS
GcywtKYQVeZ1a8fheH8H3Bi4nCSaW3lNgB0den5MaCkMhPv5PsJOuwpyvlQl
tqzuy0WT3lHMnck0KriQVswOIz+LXeipeFjcl7iAZ/pk8Mdnyvgr4BgeGTse
fa+rodyL7nzgWTPc7HWK7NpGc8kyc27YsJxXbTXB6I4F3DFmOn9aPpYfP5uD
kwvewer8Zbxx6gWw8h4JdsOn49AxwRiZYEt7bryEXVNvseMZFTY5Kytes0mD
UbnGmHj4Ar+YuALq9o3HyH9sP3xdPlhe7sNP1fNISVQlGVlPwao5j40Mi+Bv
fBAX7vou1v5WxDvr8tD/399XW5fifKW7cP/HMejevBAD3j2hman2bCs14Kyi
j4Kvah3tkNsDzXMcxFELq0l4/lAMUlyLvfyPSvaUDuLw7QbYfEUeL67ehNLp
mTRqTaQ4OK0fnvfuzylprnwg+C5duzYEo29pSS8dHURHVbqxdaAXpkqTsLB5
Bq5uy4TaO3F4/rAeFoyPkJYZfYT0kdukkmIZ3Om5Bqdkvxe+0WMaFR8A0vnn
4HPfRjowajezR2/sDK8SI26VUEGOPav8484xZmeFPqZSYYGbPBYW/Ee7IBbv
9+sSara6YnSoLjzWviKawT7W/ZoJ0WteSoLLqmhrWU+u22qJhzedpr6Te0Jm
0XlRyfQs6M/QxO+vFSDqgR7Oe32QaobKoMzYPMwMrpI699nHTWYaPLD4EXRs
kPLNXib8+kIUq6/eC+LdpTQhHXDeCWeJW/IetBivgw9V/YS6NkV+ELoCbZwm
0MgLB+BZn21YavCAvqX15/25u6DlhzkelNPCj2YD8LNJAm0aGo/73U2g7fwq
PJxVTXG9VbhYfzBHnZ0puGd/pkKPwRiod0LY0XmWykvmCLUzF6OF9Q/yku8F
a3vFcof5U9i9+TPZjLxL4/NOk2qDLUf83sNBtjVC4YoU0WtqCv55GWSHU77R
xOJ2mnlmLO6LyuOWlUFCdl0MxL4+TQUblNF4iwG3xUXRncYx/EZNhVZ3bZX8
KlvJA/SdxDFN7rSk2gKX7+rDE88bcr6yBLuuy/P3mJ44zXkRqu8KQY/MYrJq
M2Ktb11g0COIti8LIvnhYWC8/SVE8RtQNMkXjzRH0OEphvzXUpNX8EzoF2Aq
yIyw5GLNszzk73g6sM2Dx7ZFlfv07iSXC/b4e6sKrZG9Rree3gVXT390MVuO
l/1uwq8wO0DDIOw3PoVarHqh1Z9e1Onjyq31zuw37Bj0KZonWo2S59bhLdQ4
xJIsBuXyF8uN3E/tEN9/Gy1cPpeBNn8eQd3DB7A18QxeMRiAuap2OHlQInkc
m8KDpsrwPYPYf7sdJV5buBmP9K6AxTaL2H98N/AYIM9TZw5BYXQxBt4Oh0LZ
FXCifzUN7B/L+nLZ+Ee3jPS2WLLnGUdUmgHiKBNTjBoqkRZopNOjQ6ngKndZ
TLzhA8kaRTDgcqvY69gpNjYdjIdk53PP/U4w8mQm3TjsC+8i1pBH/B1YNsMC
dAVl7Hg/FvWzL9Jw7Z3odU8PpQe9eVivo/j9nw9lew6ktavU8fiN46gyWx/X
90xnnY4WfpARBVtDN/Oj3avAysgJ8v4O46M9Mzj8gQ8qNPbnhf1uwSjtbPza
PIS3mpHQdiQR5i++Auq5bXY8fQr/GBdCr6NH8o1+h4RzV4m67VsADpdlMGna
ObRxKKO4Byu5/sUN2uelyjZbV9LAIS5o3ncYzrUKpLEfJnLMXH24PNCas1yC
MNFpAUd4DCONMQaUk+lFC2Zoc3nbNbjcuYF8+vfBGmMvzgpexAmvY7jT0IHP
NXpy164Y5gt98Nm6mTi78XH58uinqPrmOO8aXsgBFx2xeM8xXNvzIGgneuGX
8mc08NlI3vbqEJ6q0+BfF9zL5d2teef5Mr7+sydO0MvG0bN3YabRM7iZESt0
HMvAi1HZHHkpC1xrAzhunILw7m4Z+v48KdpdtqPQ74PhSOhCssoywLqZY7i1
/DesOLUOhld/F54fmwXdgmPpx9wMmnpDjzXWHcZX8+XQ0DAG9bQV+OuwGvHb
uzBsX6LJ4xw1WPGdPke+LIDBe/vD7k858LAkDK9bLcbrnbU4Y0BP3nr2HxO3
enPNzkt06YcDT198FIXXm/lMtivNdFehs37OdNixHjwaSgT5XxfIMtuUffy+
kYryH2GsQTY0vNGFTMPHYHB0v7DNdxRPVuuBVqOsYUSaSIPvyuPTphR0vpnD
CqsXwfO5kyBrcotk+Os38Nb0Et6qPAO9YnSkejkWHOztghLNkfjweS8+LDOR
j6tEwm6NZq789oRObrThrRra7P3ZlkLz6+mbaTfxN53B39MNYV+6AhaXpuGG
/z7Qf96T4bWTJhr/2svtOxfT9OkLuV02SjhUvJEn7IyA9gvBvH/FF1b2NyLz
TQ38zt0Ar6r0IzMXB9w1zhy9J0Xx1+6F+FN+OL2ZMQz9X7nxWP0rcKTOC98V
hLDJFh12KjzAB2ci11orQMr5QjL95/L+ds8g52qRcGLjWni/KZDfHqmj0d+b
oH6bNvce2wjLkg5iedkKMPUYxFX/+qXzfiMkrNegyR++49fBw3HFohU4S5zI
ytOH0iCn91DyPAo7d8zk0CnvoV23D8umLsDC75oV7X1Nob7FldJSU7CqoAVW
nA8lhV5xYOnamzt8usRo72RRw/0tzR/9nD592Ij1Y5O5vXA6LZlTSlX9p5Dz
wyz8Kt6HlUMnoJc4FqwyR+EEIYdrT0/E37oGYHrnKGQ0dMDrGfq4smcFBKfY
4KuVSVQDF7CwagvOWKGIoVvCsWnlV3FqjCfIy+piX40r4hMKkbRUNkvuJGTS
8KZOUh+1nk80XuAjB/rhmQftcP70Xp6goMnq21vgv/X9OfiOYL91kgyuklej
gV1K6FQ/jG/cyiLFef4IV7xZse4zeD3pECebhGDZtNfwdK2eIDnrjzE1T0Xt
Z2q85J/fDv95CguXeePHI3dh9zNrlPUPEdRzBtC8/E085pQZ7rFQEy2snbEg
I5Mqp6siLe+J++cb8tS/nRxjHi/8NPgsLFAHfuEzAfJWn4OmjdHi3ccdlPT7
ItUGKElvDhlDn999F6yeveRRMjlwtG8njO83lIcUtHJdzQiWezQMsksFmv7T
hiWZJvjfUl86YzCAol8Vg/YMa76821Xi6vZBUA56K5y59lmStumDsMgtFYK/
9Kc+q/yor8tRuOCuRTsbJTj5zWBWyV1Cg+8bgr/eW3L9tJYLC/djboAHt+wa
BvUjj8Nls9NY0rhSKLf6x8C3Ounwi0/CpK8r+ND+PBgd74FWPkfB93YnZ8zN
hmF7lsPve08p0Ood3F73lRZv6ybeX/aaI6omo8YYJ/r0+SuljnQAgy+vqCj4
KTn2eQDmcp+opiGAI9uOcFKpB47IiKDGrQu5X+hKPhvXBzO/rMEj+sPQB7tg
9JslKJ+2jbeMG8y6niL96e7GL3oYktydHjwitoKN94wX24P3ijqblvKIgPPC
LOtPEF8eyrfd/ag+ujs+pIP4ScVAcB9zAHYrR5FP6CfpyLH/ZjphKb74sI+u
e1pwkcECUttI+O5LlnDOZScW5/QUFxRmwszY8bRgdT4EmnaDMY2HqNxvHJ14
1oTPJvep+PtuAZ9dfQqubVeoWHd8LW7TVcVJsW/BX6uGLV4GoXPvgZS4aDx6
rnwAhzRUwP32fYpvugil8llM0/qg32Q33rYnERcvPYBH3Y+KvUavYY3f2mgw
qEq00fkMU15aQl83b3FG4jy2zFzCZg//wM1Hf3n4ayueF1AqXYaXyfFcIYX9
7kG9Ti2g9RmuaDLZCz6+Hswbog5R85wKsFwxkBQe9OO3H+4LXReNsUpbDVff
O8q22+XQbWkWvyYDPjJbQO2ubFjZO0nISB4F18crCZySQ+4/zwgPGhRwpaoH
pS5uERVTaoReceZoUTqXt70MIbfeDliW/OVfPhjz8awAfnGzhu/9d4KW2s9E
58wrgoN+DYzPUgf/C7GUdS+QLn2pol73rMTeekb09LA6vk16AXu3BsL1H8BP
W7/Qhtab+DKnHuwdQlB4EktVT12ot70ml3RGgKRHAByZcQ7iVkaIuW0Xsb3Z
TMwlBYw228Pbxj0UU68ooenDFLwpPxTUbWbi37eJlKScQxXLuuHPua78O7RR
TKjUwGubtLg1pJVqOjK4JEyP53b8EqyvT0KtBgseOmAbf/Q4AS8/r6DNLr8g
oWyP5OmHC1TwxROPv7AU2q9aQ+LfZhh1J4l7JXdQnm06OBtJyXHPVXq8MwR2
zjzITd1qSO2/O2DjvEycvfc6jXezx1xbX9owW1eYp5CLPT4WwWDDMjJ2zqUO
j1I61WOfuMNgL87R3YdD94ay36HDILvqK/Ua/RSOzNoqNrzbgRnt01GxrEmY
735a3Fx/G7o0w3jitX40qqODn54Pwz9d9TR/0Ur2MD+A3Uui8HJOK2HmL5rx
IZydI77Q7eN36Gt5K32QRoubd09FjVpTvNHqCl0dZyD56TK76W592GSRJvWa
VQIda9fyh/hJtEF2BroMF3HT+2TszT/IJt+Zcre9EMca74Wj01aIhSMdaWSt
Aod9zoCsP2/p7f2HVG11D7bWPxNnHj5MzWaHodd6MxynrMwtd1Lh2wE9jotQ
5q9F11iz/ZX0hmcMtq1PFG65tEvKA7awZZ0BLo44zakrRBh1agpPjMvEHLwO
VpICGB6giha3dnPlgp+QdC8F49JChbbp3bD0lKHomLCX5FQGcWndQUHl/U0a
1KCGnpa11Gv8N5g1PJrRPZYnhT8Q1rf8El2SxvHUJUvhu+ShsPSeAyy1SoTD
r19AY/0QyMloIK/t1bw9swd7qK6F7sMCxVvPL9mev3yaRrhVClsON4uN7/P4
eN11SjVtEO+ML4cko0rSfbSBqp+KfOXIBxqt4ktDPs9HF9EJfSJbIG3cKxA3
GtGAOD06NG427+uYz7cak8o7Mz5Q2fXD1NGnB5qEzYHnj/zg7+cAWHGvBbbY
3qWoNQZgGVyOd/5Y4L1HPrD5QQOYQk9xevhUDtqkR0oLVDDv6QdwNJjE67Lk
qSU0nstcA7mnbDJ6+UeJHmUt8Hfmep6u/JAW/zDEd0xQetsN+9kk0qnuK+lo
2ky0fWSOK/vKoF8fRax4GsHQWxd/jqsE5eYWCo8y4/jv52Gn0QEauWsFl07X
gsbA77Rd3Y4X79hCu9Tk7WP/c0TJriAe+vCPRO14Hb9baE3/WUTz+g9tMPTm
dDRJ+k7j5kVBbfET0edlLn5Z/5oaz+XT4xGD4fbAfWJ6ahGp7gzh5mVunJSd
ieMPB4jX/jn31o8NMLHkCSW/7M5V4zTE4e9CeGa2BGdMeiV8K43ktV+TyEJP
h+8bbuR5Kjfga39r8s65Cer3i+DckVpR5Vc2Db7QKkxtHc1votNJmv6v407u
EpZ1ifTSqlRw9ayBVljAG72NIdVzO7+Ic8XLSr+haag82n3bicPV+qPHgWNs
82/uk9/rcGeAK2h5PYOHPwto6hIrHl1tzo8SRnOOvhm+ul8AB5fnckZYIWa4
7cQvajLi+aAZvPGJM9iMisQ77WOx87Ij7fBPpcyXmvjp31427KqCqUXHRcvL
xrgh7bydTvoxO+s1AfxGfwgucA8XnkjTJUl3FCp+VQ+gPWbRXLJ5MN06cJD8
q6shwiGYxnr78pO98TgqJQ2xKVNMd70CY29OhAe9I+Fp2hle3ubLP94nS7f6
fhTQfzuWFivTkV23+IDfAVK0jOEe35LZ69sw0OrdH18EHIaEkXr4ZnoXvKiY
gNVu2ZwhNwyPR/6lKwqj+WRxIjeO/wL7WEqx025wdXAxffWIFD4vuc4Zkd7c
ed+Flg50Qn7pigN+yZPvgg/Ye0UInnikyBua3dlJ74m4wHQtXtXSxs5VH8hu
8E3a69Qden8I4Zi/g8mdJnNjbxehXqmLlLZIcfqhVHSaNRr6bxtNsTKL+E3X
C+q+xpXDVdqgxEyOF/U4Sc1KXhjxdgi2viqDinwFDtS4wDqLFqLDyzCuVx0i
3p5eQsGb66hzfAn/eTIVN7YU05+JLrTr1Vf6NUuRnyVrYPvBHsLspqN0svk0
9QmWh2kaf+CUsxJlPHDnM61yWJ8UI+0+2Y9zpobBKrebkL4nGVsDmmGVnQZo
nXoNN4+kYKZmOZU+tBEfFxTxddtkauu3DWvC/fhx22l+oa4PenOv8qQad0ad
OsARq6k5PI71cz3R0b0BLPRnwPXHTpQjUQLlUTrMo++C5pIj4GWqRBdnv6AG
1zE4ok8DKbT9lowrjUWVj7PAx8aPn4RawKuFNeD0+4pwem8C/rxhw2eqApA3
yHK6VBlH1hVC1v0C6r2gCN91Z3JrP4iFO3x556800H+/CNsu9KHvi1NIef4G
EK79hdYyY1ut8BgsurmYzc7skyjsL8a5kzR4Z0g8GISeEUct1cU979NJtXM+
3rBSwDNPLgljBtVCUEM1XYlcjj0UgU/ON6MzghX+3BhHshtH8rV+O0lpRjo6
z1ojmEaa4ryZAdBY8ET4oDGITgvxtPqZGefNE3jcUuCUZHsu7O/IPmUHcYz+
Oq5p7QeSkTNEmcc7MERynpY0O5PBVgva3aMPPFdUxwvWG3HKhJkUcGQgDYsu
ou/SkXjl/j6+9ykWT9T8IhmpH6n80SUZkwxIWPqcwnuNEgfdUMI/a65CkSdg
6L+c+jsrmhxMPoHR01K0+TWfs5d6YcGxZ1T9gkWwCOFB8/QwrE2JZW7NQwuN
EnI1OYznFhnxXHM5TJEv4jllK/GFM4JqyxV+bGKFXfnvpevHH0D5D4nlvWt1
OdAvVHi/sRf/51bAK7Vvo3dDBWaka3JW/178ik1BLXy03eI3/0H8nOP4vkQL
z7lpQLzPFEzhGFTLWsBjmgKwr5sB8qkJfMY9U7yw0oFuX9iKWdoH2OCEPV+9
c5/K5p+k6kHneOYTYx7Q9xY0fT8As3Vk2GekPL/TiMR7i8IkCpEPweVqETTW
1rJfxX7wGpfAxf4ncGqun5Db9yTZOG0VlXo8EUcP/gHVrjWQ/uiEGDVmPV7K
e4HbT6tgz4GO7PJ4BgbISXGv/SHK22EEt57Ng+qkGFQynUjtV4j10Qbo516i
KYY4tcqCBwXN5c2Fpyjwxn4Sp1+GxEefoJdDLsRqxIP+1wqUaW4GW4dpWGDt
Bnue5+NnywSMaN1O6gne4H7HDkzKTkqvOqbDq7//OOpiGqU8CsNttZdwhaEn
DdE8SekW76i+6RYteWPF7X924x71BeJG0/1o/D1T7BsQRBfi9kKF3w+Q/1XI
saE9eWY3R0nNnTAO0npCMhPluKv/NzozIgOeaNfBpJM50q9zdpH1sRdiy9CP
9HL9QbD8GghDygogtocV5g7+JqwNrkTVN+PZxaw/+d5W4cfWlvjFj0FDYR38
PaHA2YmvKc5Sjwvul9KGwnS4FZKHot4iUI+yEwMXPIMJ91VxT6ibOGD1bChq
HIkxj6MpelQ5Rq66QEvPpJLsmwfCvPcuuNXEAfVC/HHD32kcKtTRXtm72FNH
gvYzj8LmN0ost/cleDta0TCd4XzHsYVUHJzwkG6eWJDAtD/KmEPfNvOQ2R5s
XDyHn18z4U2LBwnbPweJryZG0DRfVzqpTGD9aiP0DbPj3R0KfF71Gpe/HQu+
ulZkn7YfBql6Q7Vtf1aYEUhN6skgebceFJ1rqVbWS+x3KIPWPx9KXSFbqa/z
Ndw2vVpI04tgNf/HcE7lAu0ZGc39++yCzFKJrXLMCpQ9OVt496cvxsxxw3sm
y1HhXjJNevMfeQY6st8sWzTQaSWTyNlcmbAcnIIswPNYMAVPOyUmFs0Wrn53
ZuVnAcKwmiV4BVg8+FWLk57uY6V1RdxsWw4hTXepn0I6jT4wAMaYnOWrNlYs
3K6CJWX7GfXb6XxokTi7awQPyshn4/BSzjo4FDR+x7BmG+LKrmC2PRWLDulf
KX2/P+bLnRfn5H4F832zhI2tDGuib9LyV7H0cFQ4NlQHs/1cK7wm1wtz1mhy
hI4COlvFQL9uS3infgVscVjCyxYoYk3SSepx2YQq4yKFLLCinBAbXhS+EPR3
Phe89z6k3tZm4PdrrHhudQmFJimCke5BIdNhEq3bHYX0PhnGFcSLhepunPY+
Am7a9aSixhjKemnCh18ehorJczg41BHc/8XS24UzhYwLL+B3rQrZdF2mq+F9
+d6e1WyJVjwkdapkVr9xbN9ij052YWLu7o+Cq7o+bzsTIia22VC36EMQ/vww
PdpxWxDvFkh2lz0U/B6vYNemxcLLCYvx+KUcPvYsivNc1qLztxX8+lIWHH09
BzRuP+Uq32Ds1R4vlvjLYZXVIvGsyX5B1Ixgv9SNnDFyAB+UVMD18gTJvmve
YvfN9mjTuYFHiRNxUdBBHJszGqO+GaHO0jQYqvyA/oSvRI9LgThh3xGRarTE
YTZ5bDE7m/K7a+Osg2/g9ZXvXLsuH0YXLsa5hmaY7hlAW0cM4n26g9BfC/Bu
1zOhafEfmq9/mFI0rfjFqvM899pzWOc6gMfQgn9OoiuMmT2BJ+gGC35OoVgR
twKfq2eB3b1BKLtbC/+mLUU7Dx+umjaIXesV0MzWAjs/2fB9mwviKcVnYPDK
R+hceA8GGLXDgaOuOCm3lJakP2IFfwueNW0Y1mVvRPlp4aKcKMPbXuQJ8mGX
KeFqJh5PuYfDnk9nE7Xe7KgSTEZvR1DKplfgPSAF5zh1owCDJzD78Ap85jqQ
d+1pguJlg8Q5Nqo8vC0RF5oXS4vndGeZ+v+EaUtz4eWeR0KpwUVSBG82qd9O
zl4Pue7lHeG6pQLJ7N0DZ1r3/3v3EeGitwBq6Rlsa+JA66U/IdrKmuXG/RJz
PFfBznUuOGVoBy7f6kiBSc5QcmkQVRnViY83XIULC+0k9RpTpDbGb2hSWjgZ
aE2jjMkm4LJ4HGhMm4Yd15thtPoUTticwGMyulHEylO0eMMkLjkwG8ek3qGc
j99JdohsxQyd3Xj11XAwHCpr721szj5XlKXfK93YZkiYVPdgtXTkw/cA1s34
Q+xlb7vPBfenZ4iXdCvxMt2j0sYhOM+1DDuLk3nHtAi61jGcglpPQtfCIEgK
ioaKw6Vkm72JinUKISy5Fs44XgPH+pXiD4vzEGs6Urx+7D+++vCbZN5DNd65
OBe+b38lKYjrxmLUEyjzMyTFNDsObWiiSYI5TViXSJceNInjpm2CbeGLGNWT
6aTCfRqmPov2vckkjcMqnNrtDzTeSoY3370x1ywW97Z1ilqO6uLs42dJde8O
nBc5DJdtOCF+mLSB1c7NwPfD7sCIS/OwYJ8jr4jygh3zivnBBO/yt+5nuaRj
MNpov4U5Zp6S+dEryfNcEDrMeIwu85GVg87y2TIbXr+rAxo6L8OH+S2016iP
pDj3pNB/eRzndXnxju3qfPDVVfhofxgzXlfyJT9dUeuYAu5+bgYnCn+L1sk6
3KhiAYe9Wtm6wIfXnf5AFZoeqDDWHW/mu3CSan9IXfgCeotd0tFXp4hnngZS
ckYUr2hxx43bTNkrcQAZ3WmCW/16s2RaHgxPmkgfJ0dz8H8FYBz+FExj7anR
SxRezulLhR5DuVCmO6vuU+Jih6losvIpXWmW8CcsxIc+N6nYYD+ojCsWi9VT
Wde/H128k8uFZV74qGA7+Rn1hdJN3lh64zTVHt3Bks4hUH3wFN82j6DKJz/o
t3YEb4m25X6LAoWmu112NuUhJOOeAuteE+z9/lp8NCKAfSbJ8IJTE6l1zVo6
FFUBIxSmotFQT+rtMQUrlAbxtjGV9PrLY8nZ8q00VHcmFW9G1IoFDDq8kOd/
CSSN8O1C74ZBnN4RSmJVAy4+Ec1OWU+p1OoWtLX3RIUPfVHh2GxsP/YflX1f
iiTWwc/5R+i70zUcXn+WlF6v5/qd1yigqgfK9y2D3+WjuKIxFsNc9kOB0iCh
4GEE3VRskU7yjaWyiAR8qyHBZfqqvGT4Mtzi0i7GSIy4WxjRepcAvl+5SjL2
x3/w97sixE2fAXJ1WXx+iAK6zimFdS4E61bHgFHrFRrelYY+99+VbxFvUerE
mfS68RD3Nool7z2pQmliKL5snC90ubrQ8r0eQr36ZC43uiZ6H+yHfubDxc8y
+yFvWwV/P3CaZhX0wNEvXlP/oJM0Ybo+/znhxDt+PKakE9qcezaazv65R+Z7
xgu3Z23BqK3l2BQ1HGXbQvnznxWUMKZdcqj7WEocZsQZ4b2xbHqXMC1An428
a+ilqSU/u6xEl616V5Q7noFXHnlC5LUQlHbtpy+rrmA9JoBJ6Cr4Ncsal+6W
5W9yyhhw5DGahv4g051ttOKgFta/OC+YlzWR/UfgqWIA5w+bgVd3/8Fkvwr6
tfyhYOlbTUEH1uDAGSAc2T0bBli2ig7Rl/mdogp1jTxDuwuV4e/POfDyswL+
8ZXju/I+/3wkgjq61MSccG/ccdxBfNvLHKtPJaPbvetUVJzLyXYHoWOVO1of
teM/s/1Z//BUdD6Uy8V+Jqh3ZTmO1VKDt6dPQ2FDpViy7xxz6g/x/Rs//D0y
EVNc5wg6Az/TiBYT/HvrGA9d1UvYTqP4inQbjWzvBuYD5qGhejhv32fOy4Lu
QH2QG0RZBvLEkNdCWXo6v1iTzb4HE4Wdtodw+QotXmOrJQk4GcQHCrphq5hM
BxrP08BXtTTp62ac0D9NfJFRKi7d8oF+tI4Xd2UYwM9afRhX1kaTZXw5t3OH
sOBZB96PjRLnK0TzRfto3Dp8E6tSFaw+ZcIVtU+o2WkVpqufh7zQah6ZrkjL
9TI4Vxr6j89DYZ3SXvwR95hShqmy7QkD9N81DXrOH4oWb2Xx/i1jhBtLwbO7
LC8PqpX0umWGKz6GoNpq5EirVMmYV/NxxvBwXpS5id/ffSBmjkwml6rrXDdz
Fp/sMRNHPjSA0AMRoJa5k3t0poCTZRawebXg6DtfLNqjy5odrXY3lVUwX8YA
Dmt688rqcDKePJvVHhdSpEckvI+U463Jw7hY+RBY7dTE/KQ9wrvrH6jQ+wSU
BizBilJr8ls/mPc9SOeWCkU2PB/GATt6cD6mkvkFM8q5Jo/3cxZx/75mdGNN
BnT0mou/L6dw7adSnN47kd32FlNcuRmPG6+N9e8ukNuSnZj+SmRZ33RqjTzI
I7M0sf5puTgbquG1x114eSeVb6n3JK3r14Tuh82FhMgZ0LpTHn1PyUNBXwNs
X+LBWz088eMUe27G32DccZ+GmCdhvJIvPbybaDt/WSs9qO3OUyot2cMimX94
PRcXSIzxW8+9fP33Pn4kuUrpXeq8yy+Au6Leody+TBxXaYk75D3ZXneGEPCm
U3jo68WGG4Zj2thaqPn1r7v3C+zcrIxLw27CC/EYRK9Kxemd9rwasmnk02Gi
//dP0N1AlQ/NX8Qz5lXCAPsL8L7AFsTGH+SiHFXeTcWYj3c6on38Nvi1pAQK
dxfSLqkS+hpa8grfU3xwnxyFfAfa4vubdnz5QFo7puCIMCWhykFdLKkeygbX
c/GNqxsrWkhohdsQzDqdg7v9NSlEUODcsj9AfRvEmVbDeNHWecL5vTm4PtSc
jw69K/VKdIfl5qPIqlSRi1yU7WvVPlGB4WZMeKLH79KaqNz3FsQdqxCPab+D
Zcu/g3nfe5SdfsSuSjkeEpMKeITcBMiUHUa+q6zJ5Fml2HLss/THPwe2v6qF
10b3pzHphySyKVkkG/yIt55ZQ1q74kk3u6+4fcn98q/jnGHnZk+oDtqJbifn
ssxCCx4aV0cZW6up+wl9/DLkNRxp76ABWSv53YIE+DNsCNfW98ANl+Q4z7Y3
1v56wUtX7yfp62m4c+kDrCwM+9f7m3hVhS6cOjmer6xskJRsrBBy5/aBS88V
ccyyMpI7kU9ppnl86/cZtPv7jVZO3ENZe0nwH30RzhdvhYt98+FsK1Hx8Ov0
tPCrELM/hUPGxPOemfIV9+sLwXDWNFKTV+ODi38KszOnYN8JL8DRZDXL3L7E
SVqP4M/+eyRXHUev2jdJqtPXIGc7k6Tyy/nr1Ulo+S/jOtzdSf5WIOc/GQhy
G0Lwv6F78c2GUbjt+Qx22Ngk2Tz2Eb2dkobN/1UJ9+5O4PV2SC7eciL/44Ow
M1KKtonlrZnxMH3ianSO7sudcVvx8bfJXLlsLcdNGgnzQw7BhJ5H+NWFCDbM
+waR/m8l98++gtvjPNjyggumJYeQ4SZ5eFMYyy9qSmH/yjMw+VUoZIEinipd
Kzr/uY+fK4/RzE8rRUPTDnbdNVQc9uMt9fybSCMbjtGP7Ul0IK0efDODJMK4
vvjrTRJ1Na/FzrXdsG72T1pc80Z8GyAruna3xMxhSvg1vY9YWaZAMTXLqcXe
lc6k6fAGV3Pe99yeKje8p1mZ4dTt404Is0mH6fGXYfzuEtC3yOMv2w1QXZ7h
9Q5HWBeqxofPR3B11w2wmP6THIf5ojDiLhxqaAXp0ucwxG2UeFg+Cd4NL4A7
S+KE+WrT2cPdEO3O+OGOs+rUY3WekNAwGDNM7PHQ+wx87ZsCf3t2wve/LnS6
q7dgWtkO915Ngl6eO/nbuV548oshnShvR5+LCzl683zhQWM7WXWTwsvfupxx
aCYr1zyCcXfsWNF9Nzl8S6ag+CB+fzNCanc3lD0+dYhjriizRmI4bC8dwOc+
uvGP38jFO7Ip8pMtqymnCCo5u+BOYD5s6efJfoY38NQmTzx4R0qziobTpdWa
HFoZSM4bFwldg/pgUehUnou9cEtqIGV26JFjgS3m+7fTp+OlkGZkR3Zdz8Gr
pAEOvNGmxxo3yaU1kcs5TZz8t4k/Syej07QFvGZSitAxVA8+7p9EWo3a+Klo
CoZOqKVreiGgvEaNP+T1gz5pjdi7PAR75yeBwqZ/ntGcRF+c5SrOn9tIP9Nk
Qc5/Oc9iE6yaeZSDf4ez5eNCdnYu4OS9G7lZJ1s0TfwIJ9wFnGiqQI6xK0hj
bzK1L2un1Li+PPVyOywfdZDs7+qx1nBVzI9OgltZUeTbOJf7zX1Pk7cVi4dM
3VC6dhg0nW2BFcJD1PqcKXlf2U6vZYMF43UfxS93NqFEtYrSB7TSM5n1OCnc
AOWLFvGViMuU96YIs+4PpffrV4n5fdPhgYcrGr5QFHqMqqGR+/ZKfpk/4dk+
76jvbxEyD0XBrK0T2UF5FhwJ2oc60+fy+UXNLO8YjTFrnSi1WRfnFF6ksFXd
cW630zC48omU1xdIH5T8kB5O7E+r7xbABfvn4nW5BTTg/gBOfOMHb1PHc/Mv
eZ4VKqU5yb9h29hqvr2wGpPWfKRVjqelPuOu2gVV74Ww9xfpQVM4TcycJhjF
54DWwHEo75XBRXXZ9LfFnItj1cppx1rhvfJE6pbfJNQ7WLJyRTRqR7hgWOg6
br5uxtlK/enN1wTR9eUt6QSV3rjnnLlorj2KVw09LP1eYI+XPG3Fc8t+iZqu
elS35yGUTJmJK3EDflr0hb6+7QKl0sk05PxEumimgmUbKmiZRIfPOwVSYXk+
375igLvMRmPrJwnfn7MJV11ejEMa28BsqQT7Df4Oq5wFzLkTBwkJO7H1jiXn
P9gA5U21ZDYoFm2qv9P7Bbk01vMOSYzWctHoffx112lK07bjpU8rWWVeN/Z8
8F10k86CxW3htEn1KW272wtsQofglLYnVFLck9yTdeGP3Y7y/B8xwn+BYZg/
11Ac6/9H2NN3Nx7SjWWbAY3Q/XEvLrfPE839y+nonAoQJ9rzKH11/P5qKZi6
JXDp8jkYCLKoNK0Qrj++DFl/pnNA0x+YFr2YevzXncMW3uTqsyGi5bG1aBrc
nw+HzsMVB2/Dj4PTcNXAZbxkth5y0X+g8jEHvB9vgfIdxvRrThwKikvR9oSd
kLOuHzsGd8CI5Fb6WPQCtrXOpHkDH8G87gPo5Iqzokz2e2orfk5lLQ4sedGD
lMcs4z+bftBYi0CuD9vCQbWiNKwxSpTRiKVNVmHsG1dFpxZWwvYkbR49+RX0
mmCDZ8tNUH1DGk8/0IB56cYcUjgGXN1DsWi+JRir9hFqf/hxzc4gYVutFm5v
ekg9rCaw6eEJokKoCfaPrIcrGt349ZBS6a2mJko6dZ7HB+yAeBMp14WbUVrv
euif4YpvZlvi+dqhwA1jQOavOs9c2x1peTBM1qiGdUMi4c2aUfz4F1GPh91Q
q+cE3tpfH3aZNtNc+iIYHz2CaokKuMC/jYeMn07BxeHQ8K5JwHZHVphzm5N1
uvN2s3gs/3WYrRdF00O9VzDfcrndjP7W3CXfjSviv4PnUR2ckm/FdVsGi1P/
s8deRkocGh3EnUaDMXLASJ4bFIqGhQMx3+H5/wyXhz+QDRSFieyRGYmMSKk0
JLz30pJESZO0l6S0RSmbiJBZkVHSUJrWe68RKZUUofW191RSWnz9C+d37znP
IwyYHoMHUkpJMHSHr/SJVp58Sia9vXlx5ni0XCLH3NEfuf41pLv8FjpGa8D3
x9FYFpeMxmpeXGyaIszLXopfAjeJTY428FZbnu9phtkGWW+ihSbfhBdDT+Cm
6lpRcfREPHUqS4yXU0G/C4YsNcOGLbbN4yiDHtHmwSw2un0IWhIy0CK6uvyL
UhKMvpyNdZa1YLXExk4x0Qvrlyix78TJ1DjWjWsFAz5zyZhn9Tbnh635dHXe
ai5f+J8wrbM/igp7hEGD7bBPdQzf7wSu3wC8eO1+KtEwR30JA94tqYd7nz+B
xesukf9uJzQcs418VMajy2NdLv82GtruTsLhqvqChIILh1e5sUHcTnCcPhTr
b++htHWN9E5FinROqPPzCWJpiEQ5vr71jJ7Vn4DGgzMgYI4tdnfp8e38yZRp
VQGWYgkJ4ZF8y3eVGP40El75u5OO9yc6anIcr04U0EJaAnco3xMfzNbHDV5P
Yf1QI7h/9Dj36pmNx+P7gFXLO7Ad7sgnfZU5dns3tB5LFudcG8zWM97RQRMv
kHH9DhP85Tmn5DEcmhHIIaWPQHXmEM693szK6TL4USabbRfE4JPJibxFbjMH
X7ooKp2OQZt1TZTp3EE2kXH4+vRXMFx+iF/XxIKyniuIlfl0e2gJBg/RIPmX
+2HaTSMMnRo2NtXCkUcv2Abazaqg9VeRpzclUU//oWB/bIZoZSlg9KpCPuu3
no+e2Q2+JyO5Q3EOHW3cxKt2DMYjMv0xqPYvRY4pFWpOu1HRSDOa0boaHxaa
saPNUUFKyQ6D/Q9DRb+TsLv+H78M2E8hWTehvSgVA6sz6KtDMrWvOghrVsRR
cw6IyVtHs++twxzcqgn2Z3+KrRUDWc36qehCimizT5s3/NLF6unh8NjuFMT1
NyTrT8VwarEaN3k4wfx+j+lbb03M//SajC6sAvu1L3hx1QW0st8vBG3yRe9T
Yfhxwgdhpr4yBPiMojM220QN3dPw+voKWDw/gOcIiImvemjbRUe+PDUXzge6
8ee1pWgz5RellHnyxdwq6vz2khMeKENX0UFo2CnBi2suUHOjGtuPnYGSHbdR
ft1kcgl9Q6HTQohqbmLMnAEYbzTZLvpzf6SnCZir7oOlv33x0J5jZGOgi3Pm
mXAvlTSUMrFhVVNtPnzfE8ZW68G+upGiy+YbcPXwZP7QsZLp+k74rqTJI6V+
CfH1vXBn1mKuiN0OmtfHiUXhBXBtRgwF7rKG1O2pPFn1Kb8Ypsca8plUF3BR
3Df4PG+TOcpvF/lC01ZnKnXTwhqTz+D3UIO3Dd4GyW3ucGWtLH1WTbdzO9hO
H/2yIbDZig3aDewUK9tJJrYYCsT5HKw+Vlyqmm/X8HEWLvr1jdqcpLj+lS1f
aLCFE4ZncN/UWGyXUmPHpeP4mXkBvZW+yerDukh7YRFLhuvwuZpc3vd+Esjo
2pddTdfk5apHha5QT8ycZEL9hk5lj2MD2GbvDOxYm8oNXe9JRu2G4M6mdvXr
zYXru6eg97fdOPG/uWg31Y21PlfjZMVqWDc4Wnwddhe6f9dCZXwbPRp7W3Cq
fMK/C6eC1YYhfLV6InX9NIXCzAL6PtlbTMn7I5or68HEmCByqZvKKs+P4oWA
C3DzeaVw3nhKub1dHpunTSLx2WCO0Esl5zuTeU/eL/Af28XvG2LoekAwqWtM
YdlR/Xj32WgxyPMslb8ciWP2hIG8rWy5UtlMHuZihpu6w8QeRcT7TRXCtnoJ
O+OENBgZ9RGkQ//YzavcJjpfTeT1tnvhYVgaf3JsxYV+B7DjTwSPOb1XmJZS
THcKTPn0giM0P2A2Wo6ejbopn8m/8QS9u6HK7bKhKAxUoWl3Vgur7I3w6YbZ
WPdxMocfSsB1x5SEoBuaXPYhgoooiN0dy1HWvJr06/Jwdqwer6s+hBkSibi/
7CwW506AjncHeJquHKdrdHOQviMfHhTOdX/2o8746Ri38AyGT6uguMcDaMOC
bDQcMZOkrxjiocP2wuiddTCp3RFP1Z3iXlIsym+9L4yVV4N2v5vCi+EyvNTR
my5sScE9CnvRS1+A3ZLanNW4hO4ZOGD45y+orPqBKvRiuX9CLTVOyiCPanOM
EuPghqY7z1f/55cjTVnF0YJbNpwXlEVPdPTrgj57/1Dk7QKadkuCbfraUYvO
HD4YWUiHD14F1as2HL/pIkyjKtL2zeTtmdN5duRO8PPfhUV/p2PusjrY8EAH
A2bkYvuy8zQ8KRm6E66I0zZtY+VDlwTN13PEZ6dDoK3VCPppLOeMgRGChZM+
dtWeEdYkeLLUgCO8fexpqIl1xiinWPzuGUjzTr2gFqdBHNjfj8e/lePSsS+E
lMeX2eTjEIiMekMaZ2Xw1+rO8lAjG+xfkE84JAUWrGoDWOgn3Go8AL7jjOHY
Xg88WRPD+3dp0pHfJpyf3QVBRx+DUeUXMbZNk3u3vBLOXH4Hi2RXo7HMFOw+
+5yGRTwhI5eTZLWgSszVWcOrOteg/y5LPDL5oLB9xSysKBiJpp9X03nVr/B+
8hwcXmIGNlUrqSk5hPXOLOVS2QUQXroYV3y5yS42sZAa8lxsopX0stGc9wyd
gx96XouKxZcpKPIGTC5Op/fTB7BlhhZLlZsJBovG8evxSbYLP8Rgx5x8Dpok
SW1Zmnzd7yifUde3W3LsKvnP6UY762QMXNRAdtFVkKAai2k62WwxZh04jFTF
kE1OpLV4CrfLqcPRAjV+/J83XNOcy87r6+mM/hPI2JuOm1bGoX7hSj60/IJo
dNIMyqZKcuyJMFq8RJst6uvpa2kquU/Zyjqj+vDOGZGYu3QptWbU0d91A1Dy
gE+5s/8CrPvUA14ySrx5RS2c/y+HuK1NGN22DIfbHSP7bmnOu7we5SaO4pjj
t6Bb4gStKC/+N0CabH1hrODhPgwlvL+RtdkWsHgaxuvPeWJk6n7R8vVScXuj
AY+d+lWozUrkdcZlol/KW3qUkY87GvJ4cUYURe815ZPH+3P71hIhwfcUZbgn
QkORM6/9tZbtel3AP9s0WWPKBl48q5l+Ngsck3EXCs0TyH6mCg8c9kD40aFF
V+GpsEp/PveMdxY6hxSXD3DcwfL3b9D64e/pkp822C8uZPX2WpZoewH7pMuE
04MdUSbhFBZvk+ILyePKd9RbkEH4R1g/vw12ShdwbNZPcjr8r88iQv/dpR/6
r3kPibon8ZWHJ6w0MGGbyz68IH8dTwzxB8k947Fp0wYElyjsP2yt4D76X7el
fwWPQb1RVs8VS17tt/v2oJRCzowSO39a4LzwYp7ovZdVnjzmuCN3yV81gHdf
6oCoXpuFLa/6C6G1adjhfoKj/2bwi08rMOt0FF67uZPnNyqAo20n2Eyr46dt
oawVbiDYtFqBxYonZHXwMRk6RmCTOBhPzZX55yh3hIkfNqLWn1ie0m8C1k/+
DttU3Dik+xF4qZiRiXq4sHW0PFctPgcusb5ckHOWBmIi/xmnQlIfTWhopTTu
25VLy1rsyPWmBG/6M5E1rTcKN7Xyy8bKHReOj7wC7ju+8kVnVX43OpQ9NTfw
7kQ1rhAOw4sV19nw23PMz1siHp/XC3uaN4lWX2X4uewPmvv9PYXtK0ZL0zM8
K7eM14zOgp9vy8DUYgNG7dHn5msDBQudbBSm2YP0a23WEVV56LMRPEBmAde8
SMZDs5bgoJ/IKtcewLT3lyjP2B15VTxkbNvLUzeuo63az4TiBBc7tVMqKKQa
8e07w7lG4QDUn/lMn3Iy+e37MuFCzAHxT0AMTD4cXz7Fw6XcNTibXPytKEf8
Qd1VFZAYNVhYvLsOjMql8UzMQXQqmcHd25FrIYSHmH0Gu/ZJ/3xsLYw/5snT
6o+B27ocGBPgjYL6AbZQ0MeaEX3o0vexHNFxiF3d2sFRfZqgvdqFb37vpvhj
Ebg5qUcM7JzOPpDAZ7R6IPC7yBWWRWTU5y/NeD8Bw5yXg9aZGSQRPo/PT5cD
k2Bz8cbZ+7Dqv/by40P80FyqADtXJFCE2cXy7NI0fDp1G24PTuclCjl0RzcK
PH/4kLhdlZfL6vHGTwNh1wwZDDkkT7+366BNay0ee9VNmfInsO2rMT67ZwkL
c+fjp/Vn0L92Pmp2KXHrgmjWzeiNywfl8Wzfu6C0ZwVKqVZwVrY5ujs1A9zy
4rlmidARHIMjk23LqyrseJSXOue2RtHXRg02tYzBAG0J8hqcwtIFEQIGVdDL
lGNorg10HpTxJP6Ajk3hcDbLEPv3WiGafa8D9yvy/OmCM+zd94ikb0hz2J2z
wtU+E9nALJlfak8A/91lqNDnNbREKXDf3f925/1IsvaThVeH9HiEw380essA
3rb3NzXjQVhgdJGlO6RZT2kTZ3X7CB+DMq21tK7wmFXxdPinIY9bFMmv763C
GYpn6dxLBXToWiPEqz2A9oxwzv3bm+RS10KF5D72CVFjJ21R1D9VARcqYmDj
78MsY6UIWVn92exAIPjtV7Y38ftLktVlwtwSKXhR9p6+ba4QZqzby+KLETxC
ZSxX1HbDTo9FmJ87giV32NntvnCQ977fjYbdDPIzpO0Tbwr858l7qviZBSs/
d9OQ42egUakYu19cYhm1Mfysso9A3zPpaEA4r9hvRzdTFmLAgX52a298p46+
/5GD1D8In/EXl9Q2g/3pJuj9yY1v+q/nu48ncfqsCBENwoRFPmfg14cTPIXH
sVPcU+Fxc63Q/G4nrpvVCqYTrHD1mAP4rCkOhMNJGJVtwZe0t2CbwVNRZ+p8
vqVILOxjGJI0jzTPrGcDt2KYNG4pJQm2KD8EcZhviHi6ajNKGK5GryGFFP5z
Dr9PG8VS+RIVfgu+0vXtA1lDup7apmzki+Mj8dG1D8LkJ2tQdJ8IV5Zv4rVy
lYw9+dT3wnRh9bZNHChRhPNSDfD6/SxeYZZCs4xzcP2POyyj7QQt5hWwuuwZ
9N/sJyQFzqTYSR3UZtPMn/ET9bG7DKtv7YBlLftROXK9YPNqJEnaWFDpbnfe
/z6HPI+s5Lzu/bjCfzgXBi0VdULs8EG9DTzfPZ1demxsnyodhycvh9kFXMnG
pxL5GPLImFN1xrFUfR8+VDufX/e6LZQmrBUPQj+W+VpDQyyMhVvSOcKKwN+0
4epL8LkxktZ6R4HHsHKclpxGqwIukORfVVj8bs3YuOA7dK64rPzI19WU9+4g
bViuhZs353LA+2DUU9bnI4kt8Ge5F7ZNsWHrvr34wHIpSuqIYIvP1XRZ66BQ
erGJLPyvQ7a0NP84HEp70n/DrW4HPpp6HJe9scOaMHPGqy9gR5sZmK16D6N+
psOi6Z8o4V4EPp7zk+7rKLFi13o+OH0hnnn9Hzz8ngFNg1LEuJjv5SWeeVxk
Vg7Jl7/D+/SfovXzgRxe7sHqSp78VTPdTsFBjtWjflPTGX1MDtwv3lepE2/p
SmBIuzM5fy5GLQfEom8WaOA8hwe8WS/qhf6EIRfKoehlGP72/Q1huwr5x50c
uKpmhyv6e/EpbqaEv0l8bt4iyMkM5bLGAkoN7mTda16YPfsCKXjrYeO+8wiH
g4WzzV8FB/vJLPH3HBZ8kcVhn/R5ZbE/N24xwbq0ZBj+fTVdspdCUXcHj50V
A/4rx6NMP18cKGTBCY2Hop7BdLEm+ArZNo+Bne+SaLqli/j+rgQXNPyiyYc8
uFNtNj1elM0+O79QJc6GO0IkOVp4oM85O7JYn8mxU+6K6y5t5a0xcXBPs4S2
pNvAusuKqF4jS8PMQ4RZdrcwuXMj7V8zmYt+3xIUlq4jufpBcK7WEZ+FniK5
3grCnuA1XBadz47Bxvxg/KVyT0vEv5LpPKkUuFM5jEu/tYhPI46yf8g50S/t
l9DeHgPXNBCr9DT4+TEj0aZ0O2q7KuLrwgDeqNNN1gazhdyxUvjuxRiSLsrj
aolUtkk7LbQfegbPRlTzPWdbvDZiI1x1i4NZ4z7BaxRoor0KXnrwBWLjh+Go
l0PxWT81mD5/HE/798Bdb8xp3jsXjllqAErZhvxF6QuMl16LQQ+b8JS5DraO
uwRXJO+j1nVTnPNsJCwadEx0P69BzSHn6MDfOXhQdw5fyVPjZekSXDLqKJR2
usFh12b6ZfYFmud7kvYzVX6lrQWHlj6AfnWO+JUV4HDkTLzXswtb6/zwRl4t
GAmD0BRVIEdyAbdonbbzvb2NYfYmVE7bSlenSWJGlz6u+YX4bsxUXv9Xl3fu
KYSXDn9RL8aCv2pnwE6HKWi5uxAqLCewUnwe6b5ZjL279pDleiNOMn8pWpb8
odqi3dzr4U82yfgBJzef4NjpZ9i7fAXNtnoLhlkS9LktQ+B5TbBasj87LKng
Pml+2BbhT2ZuedB0+wbOGaxAXa/2saplOI7onSaUDs3lfsZx3DP/EgUW5/HH
u7vgRnE9JdRswkcOidSwEjHD/TetjLwvtI2rFEcFOfPQFmOWv/dTjHWqFV1+
XsE+WQc4RFsO7wwLhyMj90DF1MNQc/ARzTz7GKTCtHn0vtOY8Z8IN7o6qMVO
g+MqavBz0SCcFzOA8muKQHpIZ3lI9T//W2HGGQ/9qDNPh5tmD2Oh2ISvG35B
qyP55fnTo6hkaRns95vAuxuy4c5bbfyAarhumQHWxT0GKp7Iz9rU7Ga6/gAD
nCTuvWDAI3c2Cie9tHDG90wo2KaBvw/I480KHQzztODGSGXe0TOcY917oMfn
P3g5exy+CDWmnSpqoOOijbf7raKq6Rvw9MdxlNcqTdl+lqiYNg/25cRj/Osy
MURyGu8Mq8GmPTIcld1eHrxPnzWz3Fla3/yfSkTRtesjMLcnHPuOVeRzEZL8
d1Esq55vAv93I8oTy7/Zajnn0G+lEijsWs1rkpl/xhSIMrbf+In+AbY8GAQD
7i+GO3tOCobzBuPUyffFtqdFpDTOlJe4tcHdLTGcXD8HWsJ8mN9rYM6SIdRH
1RCrg4zR4etWVpLX5SHXtHns3gPoWGwjBoaWkMLlTjopuZh/2RTQmekDMOPm
LNF1nQ22hrji8dE1wtMX43H+/beQ+MeRSoRcajPIEOodNPB+pwupwjlSXCeL
EivkcZ7uTNxvPQVPWq7lukVj0Cq1TnB6sVGcphNHhzaYUKV/DVypHMP9Qr14
hIs9KcVoYoj+d/B8rIBfRslUGD+sxpefsoSlJf40/992Bwdo4R5TV5QbPJ/P
O5XSw3vFUJcah0Z7HNCpJYGmdMazlF0MOKXOwNzLJei3IIacbmSD2iUXcdaI
LNpt44eFfSbihydb0fW2OWp99cSqsDQw2T6Vry0rRlPlp6L2Bj2c3b6ALcK6
yOJUMlTGCHzM7DzN+jucv9vEEPvuZa1zVYLCI01hZ04HN31qJ+lhOZDdc4Ds
px3A2Bt9OVMcy98idfHpugtw8HIXzHm5j6+NfsGJy05DpelMDvON4PLHFfAl
sxdEOfbjWR6JkPEpgoqL+1Ct1X4yaS0j7acm4ooZ6ig345AoZ+3EP28uoOdd
GuT6yIvsplyGK6fmo8nSSHQeWEK5T9R4v26kWPt5HDX+Oczx7V6MyoLgsi2O
fByzybtagS4alvJKK3/xWG9NccrNg3AsuYv6pPzL8EEShrx1Ez2j9lGorza+
7JcPRaXS+ET9iPBcyQ4Wr74qTMgv5ZBpV0A9RZ+jlk3hU2NPwctBVTjKp5ke
CieEY3Jj/rFTIcbsJ+GcgSVMTBvH73/E481P49HLx5Du3mwSZcgBekvO4tQ7
uSDXVkyz9seBxs0i9Levhc5zu2Bf0xX4ObJ3xezh08VWyWFcGIi8T683azwy
Q8t7Q3nhwk1CqIkZDxxTQ3eCIjC5LBp1Lhyk8K/28NDXmpQXh/GZzu04sHel
aFj7DaxfLqN7+g20y0wOK7bbg0nqI5g2QoMVZt4l24QGOOEex+riRWjSPQBK
O5S45OpKqFTUZrN8Lyx2fEXXWzT4ko40F/2N5lG9VeBaGOJduw/wfuct+lVy
Ci4udaVXj8LBdY5QYf16N+9VtWbbzhCaeciCnWY/plvj9tLpR5ao9vWJ2HZP
k3d9yYFnHc7U6HSaD96wh1t6lbhrpTrPcJWGW3c74MhdL9x961t5tfc9Ou83
APZNDSaHLeE4qHon0/plPCx5Dxr3GYxFi4mTegfy1Z4W6vdqBp/4OQw3znst
NAbVU3isEvu1dlF+cVFZrIUpnrjvzTNtx1EJnKL839N5eokMh5aeox0mo3nb
0glgFbcfvl4r4qnnpvKQWe8E7QQ5uvIrBB9+PV6usWwOhy8aR5svbqD0ss3C
B+XTbC4th4nGt4TzdQTp9TOwcsJ2bN/cJOx6nscdc5fxw9r+0Ogky2/Ph2BJ
P2MWpAajjE0yFowYIt7Ydh0Tmqexm8YNLNn/hbw/vIBqM0WWmhrAp+Vec2bZ
OOhnY45X9xuUl5TUwf2KiWxTIo+ZvdTY3S0TVi8dz+vP+UPjdCeU9RrOgQ4N
oPDCCr1tZ3PAmih2PaqPFb1ySf9DDl1ROchSz4hcnd7BSOlk3Be+H57Xbqfc
hXtg3fwMcF6UjDsViqigdilfaRiKZiMS2THjABXPyhDvW/qRaaoEZ2/5AMOM
ZAVr48fg8Hsqb+7/Tjg/6iqr2jnBiQvFYtawYFrh2EqtfXPgxkg73vMlgS9U
1wsLdPuS/P3V1DuqiIJ3lUPH2XYhK3Q4XegH7KsaT3V3lUhpgQ7qHbPAvPeO
3GPvxSfMJ6EvJ7Pau8GYcPtyWVpdAp1J+8fx/7jcq48N6l/9Dh/nanDTldtw
pyqUNnv4sMlAJRy+IJhnLxwkXNgWwQrKu2Fj5xTMqP+Dfqq/cSlWimnhythd
LAl2K+rIfJU7jh4yBeYdCoCgyjHwJm4IaygIwpjP8njQ4opwWisV9x42wJPG
feBk30k42PUwPjvuIO44oYZVPm/LzUJWk+o5bfL5ZURz4prA/bMz/23oD163
7pDhOh/R7NYu8cRUZTSf7Yrdnc7CjJgw7PfJiPVrgvCt6jfSn9AbKCOPi92G
c6W+qZ3Mjum0WPvZPzfdw6HjvLgmowbU3juU1a6phDftu/HDo3gs0T4FfRJH
Y+DPSNQaUI2FQ6PEZe2jMaAyCq2Fq4Lv5kH8qDaJihaP4M9JwbTBaCH1XE4S
D88JoElTD/CUw0X8w7a//aG0fjTtjjXJ4iqUubAXFhWuwNymVDo0PoNLin7R
84FH8cERDfGRvhfHrBdggqW1sDDPDA5FfKWM+mIaWjuRj23O4Uljzgnx2XWU
3vOYfpyOxzMG5lw2/yYVf36Km6TkUSaoyfZs/HXcM/IxdhtE08L4E6Bt/YV2
penhmEmv2L50Es5hRRyRL4L09pG4d2Mrf4rYye5jpbi7IpVtt0/nzYb3aePr
OlyWNwmv9sRy9U3mgIoUzom0xu68F7R2oBkqazyioKWfxdSzOjzjuxKbGOrh
Y8kdcK5dHbQXp5Hs+6HsOKQfwdeB2CXVQEHViiwW6LC78mJYM7QVPL+o4uv2
Elx6pB3UFuSjc8VAmHTjmCA/6DQoPJrDS4snYeHtLqgtI0ySCwalOiP0jDHl
MZc20I/ZoVRk7EZ24834zYYtPHZqJA4fdIqMFlnjRp2L5OZRz6OCTtHcse4Y
cesof9z5HAYP1ADF4Vk8WT6S93YMgiyvYnBpduVJOfMFuRZ3SPuYjmpPjNB3
BtDXjqd0ycAMhx8LFw5nfIZMaxsekOGF/mV+UKvwFKb5nsSN/sp0XPsmCLVb
QEbihmD/15K3eifQGp+vUKTaC4dN1yevKAXctCVF/JHyHsKLtghrz9mw3vQD
bJJVAD39L9HmuerQ8O0tycINYZnzBOy/JgRqJHXxy6dMyNOTYGm5XuLfaD/c
riSLQ5Md8Mq73ty6YTJf0hfx56BwfG6uBGoHVDi1zogrVyWi8hZDMnCW4ehb
czFEYSM3vZPjzKoseFOyDfOj70JS7Tics1TB3tR9B2d0HoXR5zqp/4oxsCO6
EooWaqPfqPG8fVwaeO4qEASxGcMUwujwwgzUr/XCnXZpoLz2C4VtNMbrm/ZC
w9ehVHP9L6XkbOO7DrY8+GwihMX8oIPpJ+jLykiImzWTU/tugqGvAOTd+rNd
ykG4fyWAd6c9o4yyejpkepID+lmKn9vuwuhRa4QRnImK/A385Uewvo8Rd0ye
hUb7tNjn3gH88WgQuyi0weWKJqrx/ARKS3pwHs7n2ZeKoN/2D+Iik6PsdnUt
Trf2p0+pCtjLWoNVGtVZeUkw15tY4Ni8KGGLtCYv1C2CDFMSEg+shZtZY/BF
xDjcfr+Yors+0QYDI85ckwADAvbDo08hYLp+HLnERRJMvopjJ/dl8w3RYK75
DsrHjKCZjaWwrk8tKORPxfX1Ibh22Xf4swwwM74Kfa9IwQWXdnGZmrW49nQP
LDx/GLvuKfP6679BfsI9MH0Xw2Xvne3sZw9k+ZPTcGj/SNqk4ikmrwpD9xcB
qPetnoLWvcP1fW/Z9QStE9x1gFPn5qPK8VKxsewO195bCitSxoujCr+LCl8m
8cdzhfDucz3Pa1THxO2An3e2kcuTr/Tsdz29COkH96WvUm5cud2asmt0a91B
fpUYICaV5+AuKTt4OXU7Pr4lR7fKXlK9RawQuXsiXl63Bv08lDB5pyEfXtdB
uS43xPFBpWRQMYAXyZyGBZgj5KzYiE9OWtOFb3/A9UM2Xfc/BN02a+nOUTUe
RJY4LCuTvBsOUsNdZ74+sRd+yRzFr3zKRRutZki1S8TegfLcvqkPx45rx+Wr
PsM0Tw3xcIwmODeGoEr6Tj6ieEAw6z+PvC9+ptqmsSw/MlOYpSiP8dlzxZry
PmzVYs4TkiUo80wFjbt5UsjKfyF6LkkSji/TQ/8JWWzUcIm2KSVSVdFgsFYe
wQpvIyhccjDu069H/bOe+KxPBScfs4OlFwZxZexI0dH3fPmRo5X4XeMhDRji
UP7JVwt2vXkGLf5utHRwf+z3+Dg3XokpTy+opXqxFNTXXxL0v/nxmsj9Ytui
S6Rw5CD0+9MojlB9SlJagay22QanbAvBxee0+OvWO+VtzlfZbt8LelNzAfPP
RnHbpSHcU6mCsVnpUKIkhZrLZmL7t4Xk2fYemuy3wfxXRVAT1oenG+jh8ion
jHyvwMnZqTxE4Tu8/DYeQneF07AhZRRSVAk6e+bg5cujUGPlQBirq8RaKx5Q
+olMXKW4g+9e0+VMufOo+2U5jOi1D84XOVC2XomQXqvDT2bLQeK9qdxweBSf
XN6Hj6jF0GkpabSSNMF6zxG4aaMJXujeyhuznsIXHwccv/CueEkspWNpFyno
9Cbh8usoPju/GI2NjTjqw5MyH6+/cG/Qd7t6XE6pR4NhyPcyaPeRIum3MuD2
dCrO878OSRfj8dGVFnyrWwy5H6NhvsMGUp9iT3vfK+PBiQWo2z+QZto/gKHS
y/DhvA3ilUk2OMozHBMPhkHAlCKo77TCa/fVOHiqLMfMasFeywjWWIzmF9Wh
HHl6F99+5C3q+rjyoCg31DnhQQodPji4ojfvOzuK8npPKf/2/LQ4qbM/fA3v
S+P2a5HWnEIhN0IfQ88owc+ra/BIjw8vrY+ECYqD8NPe/pxR4Ab635vg+2A5
aG78Dh0x/1zojiL+3L4aQ85uEGa5qGLmtAPsqajEM1d7055xFrTNPA/O7Uzk
k0Ui5B73xXLTmTjAvpqSbZ9w4UJ54WFXbzw8WZsHZryn9JarcGa4LM+MmEPR
wVuEVT0n4ZyRLd7c3pvffLcn7TFx4qLEOrjwdysHtczGqwt/U719KkycfpPu
ayoL7fiVZsoaQP7DKPwTOoHX6uTArC/OqJrujsVZa+BiixzPWlsOtkb/wd7n
jRx85QqPOmwN4b4V4puT98TFCc9A88sXUS5QhCtLRN4blY65B96Iv5468bL5
+ZSy1pYDfbK5JHIx5K0/wArfr3CH7H9w/Lg7xguXaZiEBrqobhWUlyXhsP+s
+K5KOTR/6ASnf7/xUqOT/F6GQ4HVLH4/9yuNmOxOD/2t8MTswzykdLcY3rEJ
Ug4bYt9RkhjZdzyOi9xsOzHhKK3M2kFxhy4JO6Q88LCSHU52NQFXy1YqUlmN
ezSfUfDVVlG1lzsN/7KdZ0fWixfPj8R1N9vEqlwtGHE3GZVHKlFzzGA4ckKa
W97m/eujjXYGeAM3dYeCk1iOL3tPYI/CEKw13k1OYcq4WfMwNA2YhEqa1eB+
6CXMvF8u3Pu1n05ZrULzUWuheZUdfZ/YKn7Jew9Dh8aixbI01n3VLLaEedPr
pr5s//sELbgyg70a+tPDyW9F594dEBWRjEuq03jJT4uKz+P38JDCxXz2tz41
p96gM/Z3aMMzdf4yrB+6Wmxg2c718DGukUaryePih8d4pMEYuohied8pKaLq
1BPsapWD0VmrwPXHPH5y6yqUb4zGpg0HsfDxADI8Yop6S9dg1il9+Nwoh8lZ
mWLR4UCYvUGV/8w1hieNg/GLnhuvMF7Ao92C0O894Py3ZvAzdyUnJngIb7Uv
8eW2dghsSsTs1cP42gxdGvRnFB/K/IC9ZX/C4TWdtMv1P1p0wh5TrK1Yc0W2
9UKHdCHOcaQgtdcSH4WE0coFo/Cp6hAcr2uJu7kSlStN+fh6C4gsfYZOj46X
q3vkU+U+3/IJabIgueqAMN5sNyecSgTPy1fgy8Nb8P6IG+VKXgMXNT++8Wws
Xuuzio65yPLGxg3lNx7+AH+J/yjnxEGY2cLUjDZi+d1j1Gv2Xp5SboQnAwOx
obsSAr1bwStiMD/kKLKZbYWno6spff5G1jr7Xry+/Spd/x0BcnsH4uBp4WTq
LGsvj4U4cMBe8csuBbzqcIyUIvvxLNsQch8dyPsTe6PVtgjqu7CVfCxlxb4j
IygntYRuz8hG94dVWNMaIrz4EMcPFH7Bztvedn0DE8DRxoNGdF4G74pInH1Z
HwVZVez9QYbzN2lWbLOt5oW928mmrgCMnFOYDpnA3hU7ed/QQ+xWMgt/vuig
u+411K8tB7dFbyUTeymUG31BnFrgjhXp822VHqjCn63T8W29NF4YuBujJD9Q
jXEJdcz0wz8OC/i7nyG/XTcN999wwXuDorjDJU+8ECEnvvIL44dda+jHM01a
ZifwGs08KomwwviLBqKI5mxgfxT7/Ms/u+0g30wLJqGfIr+ZupJHnE4X/3vk
AAUulTx8SxYezh0AQ5/s5K2eq/nc2HC8cz4cVr76ycF3AmjvtxeUf80KX8lp
4qg5baKDZAm39GMhZ3iY8FDhtmi55QcYaMzgsDUboUn7gxhlewk+db+BOTVT
UXvyO6oc2gz3FucKZK/APlOP2FUZb4X639u57HcR7rc6jtte5nPbG1OhPllA
08knqONPBI4z3C/M73Skp0Z18Ei/N04OOMY7RsqzZNpqeHvdiQ9MnEyFz0x5
5Atl/i9Fhdu7hmE/n0HksbiOblXeoXMVCigrfxedz4TQ6Ofa+NjXhRrS0nhT
70tkrTyfzzcso5t+g/nAkU/kJ5OEQX98MH1Qh5DlkIerDbTBSicC36S6Cutt
O2BH6C8w22IhrpID9vCQgmFJ23BgzxD0Wd8ADm5RuPGqM850L+DBdVWwwDJT
cH1yHy41SPH98QL++Rhfvuy3N8/ro423s3Xh44EGVNhzlNo+REC5Wxcbr4mD
wVZ9eMWQDB51QRvN/3lN23AjnKoQgfJZ0UKybB1tfhLFTcNG8/2GcuHhERfR
6dctUctzBUyTN+BJQ3bj0ImFQvGgbE6pnou7u56Ap9Rw/k+unpSbv9v5Ro/C
V0q3yLurQ2yxtcZl+QZ8bcJBkPJeArEwAD37GnJIQwoq/dqJC5xf0Mr90rh6
bRoeMnVFsxMReG3vWmp0qxVtJ8nB5qOGELthA6r3jBLdK6qIDynbL4W/NEp2
HD+Lmw2Tn1bCpU9LqOfRT3hj7gchW2T4wKpCcH6rhJMP6YrlJstoY7Yuu394
zfrVEuyzYS++PVIsfN5TJxxwDgaPX/8YSK6KXJPiufL1jLLEx1/h4Plo7t5X
jKFPmK3vz8WCCiO+ckUPnxlpo17zEvQ90kecljYaVbKeg0lPCx6zUrFrtLtI
BX9mQNB3ScyExTxu4y2I3z8LH3Vfp3cmhdx8JQEdq23+/YE2bjo+j1uOp/K8
O5miucounp94jEoXG+J29xlc8mgYVt5+KpwqWE3vDJP4R6++SBeXQ0DQb7ho
eV9oDTDEfePX4vbTltxHeSb/MDlZfvvrap441ANOvNHhmCuVMGJAL9xvfRfa
9efQiP/60MF7I+lPhDIaJe/i1IGPhO+Ks1kraBOsFaVQdeVdse2PNNlG1lGz
b7M41CQfov+bxk+dA+CJ5m04/Dkbjc5MZ69CbWr1+AIOLZPwo5E6mu6otHOe
GI32Z9RRtmu9mDcymxr7qqHvHifO6+/I6tl90VnqFJ0vdOW7NirYd6ceV70f
TtEGXwVJ/cdgNmYw7Q425lXfMkiIscdeG27CC4MqKLbcQ+Yjf8DxWg2YuDsE
dfIekOkyD9HDywcMr51jjdftpcOv7+FbK0/QCHV1utajCQvn3QX5cS308sVI
is7Uxu51vXGrehqee36cXPrmsNzmMdz/aBiv2VyFYU7yqHrMhu8250BrSh3V
7nyETxPL4fLuACi/KMPXbx0vLxw8EeikBWepfRRzhp4A+bAeWFeaUp7ocBnc
NaRR2U0THW+dosHpQ6C+MRZ3T82A2+/UQT1fgeQHmyA9nsL2Feri1ZlFkDlq
DBWoKsKdT4dQ3NMCq5IK6TjmiUpHtwoK8UnCunt9Uc8kE8N2WeEcP2+eOn82
D0jpQ5UeGrgrYiurt+XDr6LTVGASxYvmBtKeRksum/KS9ceXw9PqXOjSfIQK
uUfAz3UjPv+yySbpynTyGp4uwuWhVDlSAI3WBSxPWRCm4YsWvVRwbb4Nrgkw
4o8T8nDLkiDOCYzgTfsG0I6jq+HSqZn4an4arx1+jhZ3GXNckr84xicFg3Pu
8LzKSkpo70VKZ5+RZ2JflBy6Bd8XlrKGHdES4QQlO6tga/Z0lDN+C4ry1uSd
+QsKg55zfMNyTA1WZEkLPb5g94OUnxqRqVZ/YceTmTzyfAoHGj+GthelPHzo
G2GW9AOa8+0h0U5zrto7DIckjIRGz1yqGTcLd2/ey1oVQ2DaMEMxXGkht6go
sdc0WV5e3WpX+2oIXGw2oSGbHkBO7Hi8mOiLW/OVUMa4N1vRXLwvuHGg/Fpu
NXwDra9d8I2GJgdVdRP6PIDTfJPQYzRt2dQAOWuT0XGLMRebbMcsy/n8Y5AE
7py2Dzzd+tOWMDu8czAV6if8FoTzCRycdogfnOmAopuDUbJsWfmc9ZP5RlY/
VggYwRdl3MS1fnJ8/dUaKt5zhbLPFIHHk/TytBMncLGsE1bfDsDsLRfpi9Il
WNHdDHXhq8WFq28IKZgDMzbqYZNDHwGqmVrr7PFA83T+FlojeJi00bdiFbTs
Z0uO53RpwIB9ws8FnnRKXoD0nfGgecCDr8tlYOqhSH6i2otS+ijAcTljyu9v
gr9GumHp3ULxbnQDTT00GpUyOmD9zzv0s180jXs9Fm3dRNDcdlToXvmNTsYe
pVX2T2C25XlQcV5eboBzIPtJPCr/aaCHOQPYeJMNZ+QfhR/9RRoYOQQn7H8H
yWMV4dOvJFhxtZWu31+Aa1Yk4L4rk7jT0IolF27lnx0y/K19NBfGRfGjY6ac
OCIInq+xwMjjRSCxeQ3OeFpHz/4uxPQHSjCzbAm7XOnBMbNdYfAMU9bINiTl
2DqInnKCah8/KG9xbxCiMlNZ780xMUuIEbRuSthtsLvCsyKaSEP8xgmwiDyD
neBpZ5jgarOGusIf88O2X1SQ1wFV0wrZ8mMKJMari14uoULPFVP+eNeMZ3iH
42kDW0qziEdrbxP0+ZjLxcl6+O5aFJc+GclH7uvz2nF23K21WYg1rxaffcvD
3g8ncOKxeCH+7AKu3TOCXx3PhZreedCoFYEDgy7TxUPPYJW8BOp2zkXt68dF
E51A7n82kD+/3M56p9Rw/WMZrJg7kb+8DaaGvqa87H40v7v1io6ZvRLUjuZx
YpEaZAu3hK6D23jTRUPc/Daah054RglvP5Pp8RS6LiZR/LBAjouYQiXLJHni
1Z28tjie/Df/EFYMWkX3rg/lvk9csDGvl1g0eR89qMlD6WUq7GhtzVN27ixv
8zFmn1E/hDNjamydpv4oP/x1AOre7s/HbQ7ilsvJ/LskSFhd1gp+w+4J2w13
2zYdS+CvfklYnFcF7ztesYJ+CXnkjKDOj4l83ucpXfReibOHJdKzL+E0vL8v
a4QZ4dqZU2CpdQKe2H2JNh3x50tmMvh65gQuaI3Be9hAVhJe+Dcjhw1WTEJ7
k63s+LtVeNzhQc4v9kL3ezXw7ziKfW88hKo2aZxfFIrutk70OXAWf1rbH/pr
zEXLvzVwYM4pIXqbPgw7EyGeS9ksypX1pfDvKeKx5e8oN/8vqdb0FlqKFcB0
lId41raFNZP64j4/Sayy/YCJjnF2Ly+sBa31s7DTeCjfwVXQXbmD/PUmwd9v
50SlD8/EnUEJsHV3GfpYPxCehJTx8qRr8DfNFeNgDjr384ELz7+JThr32Hbl
fCg8ZVNedLENFG8c5MKh2vi0swE1Z+wW+3iO5pzT9jz3WDRrF89FifIGQSvg
EPkEhUNLZxLbyy8Gr79raSXepE8R1dRQ5ApaqmNQ47g8/te5FF+/mwHToxK5
4skZ2vcwnfn4BfLOSYe4myJJWYSWH7U/RIF+vfDn30OcbnVeLEiaL5x6NoLt
vhuy9M7LNKXAmyafSKVfXg/FwJ5jMOo/PSjy0sY+uvvhQ2YB7zb1xm32Bah4
I4pfXl7CPvZP6Mm96eT2oJ4ynCPL/jxwFyZmDMfZ4QEYbNICA3/sQA/7c9D1
LZZ8s9RxrptIPcN9QWm8KX5fu5pvNe9i709PhbLgCOF9pxrrLP0p3joSDq9O
LePg4hi81hWPVTN7RPOOb2Cdm8evLJuwtH4Bpr+Pook7+1DpUkvslZkAB0K3
UnnyG6jnQySurYeIj73tsz9MwKKO9QgfRuHMWeFkdGw1npVaDfGiDHvXKOFp
93LQmCzitedV9CT0Ob5LzGfp4dZ8Wpv45l8z7M4oJRcTV8Gp1RhTp4zHqq0y
NH5KBjt4X6LCmAJbPbTCs4Nn8OWda4Td01Zww83rYnRSP7w9shDm+GzER1oS
LLt1Cetv1uQFQztgeKsEtntn86YuBxhXO5PcFm1kDcVy8JqjisNHzMf4ZXKs
oDoOvmy6bPf7nCS6Je5g8zNL/jHBKyp6N5jDFGfQ0V/qqHhxNYXc3Y8bDuxj
6OoWe1pU8NUOa4yoUIKVBhL82uAghLyajHr9bkK3RCF8mlgNUlOi0U88KQ7S
/SjO36/K6/qZY9frq6BZYYNaBdVwd6iksH5/GLmOzMXzy/uJE0RbbFJpwIsf
Z4vNb84JXbKJtKroJis1r8f6h8tw4usy0FaL4HNLtvGQTV0wMdsC/ryqEsKu
xeGN6OfkNjAE7e+aQujhpZy31x687h3kZQUTqMLYnjSuzsaTmWsoNeg4GHV8
hG6d5fAq6QsYnO1HgQbIUb2f2pmdu4iPeipEUncEj0sZhNUS9jW6gyhu7lzK
O5HC9p8CIX97b3ztMwUzc/aw/8ebdn+fDMNWr0nQsrCMHk1Sx8aBH4QdmaHU
c7iW/CellvPUc+QT4Mnj2tLpvLQMzkgzwBdLfOn39I7yLlVlzNU/JHy/P5y3
0BtoOF1N2Z1VNC9xCA4xRj7TZkWNzWnikenHeNnlW7A1jyl+lS2XW+7g00G6
UDxBCssCJnJr9Qth8vJaqP5sjrrn8rD1hiT2eRcLn1MP0tL0kXzWuZrMnj+h
F4qp6PLxthj50wtjf5WKyr1H45yPXSBdrUz/rTbloL0H2XNUGSTeEFjxd298
vHKLMLPECjNNlaAqRBqG+9/jXPtazGuJ5jAjRyHYKQXMFrbS/q0e0DRHnTMT
97H7xvO05IkFNw6bDlktof82elK5a3wS/XKoI99/nXjR8xLOHa7G7+WWCBaS
C1kB1vG2X/N4rJEcmY09Cpb3Qso/7srl98FbqO2+FJtXPybZ5GJaID2Ut57U
FSZoJogyDrdh94YQmKh3n2KVNXDou6PidVNFrq49xZu+hohVPu4IDX25XPYQ
rBsoi5tfXsY7x+Np12499jwXCk1SirzzcR1r3jPgwQkRMP5DD7gZD+avB7xh
xYoktrFPI/9HbnjfaTPO3mMm+A+Zygv9h9CvilOoVHVMdFX0ZM/+i7nh6TFx
kdl67G9sLxwNHw7XipaBdG4RlM7VEJ56ncI6szP4dGQUFK0Zw3ctVrD3wVju
NJHi6twG2qZfA8FLLfCrfJ14oqYA76fKC0t0/FE3IIMlVIfxj9Ou+OakLkp/
38PVxgas9V8lfwnUQYXfLpyrOJZ8miQ4J+4TLz6cI+aPegVbFWP5jLcq3oy6
CVJqYXbt9yYLO+b15qapqlChZswejSps0nAPzOS7aWq3g+C4IYqDBk/nON0M
8HpkCe0ZOTRwdRyly6qT7YcvUHaqm/Y3pvL1NYO479/5HJDUIjhWSWLq+Rq6
Ozed5F0e0h6f+8Kc3w7cO9WDOw6cAt/yMWjob402971x3y3G13cL+e2l2vKj
CjGw1dcfPyQexvsae3DN8m14eP1VcbTiQHi86ZMwNakCnMrC2frlHHHl58vg
NVgWPYZ3wVH5FH4+QlvISm2CwbGzqH6gO0u/KIYWjWY6MPwMR9NECHwqg60n
nCFtdSj2qOuTp5IyJloo4KFJqzhB/TEZ5Q3jfsMf4tLTu0mmcy0b/DkH+TKJ
mNl2FiT7zcS5cgpo4T4bQ5W6cW7KKfjQqo5Gznlk5rQNLvvP5bu7EoXPI/rD
mQWXkS/uwPTio4QyG+BliiMeMtpKmpsPotR2Qx4n95kijCOw68xzWKoB/Kxw
OtmNfCluTgtmy6R9eMaqHb6eDGXX+r/8t/ERDdAJx5y9ffkWGbLOrbswYf5k
5tYkCHrXBYN/D6RnLhtw6ooMVDj3FRIUH9CWsSsE6UBbVLvzhWb5VIk3N34n
lUWDKFQ5kp+POmI39Hu1uKD2BU0JGMrV+2vxsRrgF/1IUFoSze1jq6AmXQ6v
Dp+Gfru0OHiQHrY4iHT/EGD2oyJaZqeDnsk6fPuxKIZl+jEv+0LTG2R4kkwo
YcZpUfOrEw7qF82RjQ1U/nIi+9eYcnNAE2iNukpVUR5cejuWfxROL/+8ZCpr
n1IUTyUZc8HK24JTwmkyWy6DNneOcbOrK2t+1MMXF1No3DdzbtMwBWntRJx5
ZRXdn+NaFjHohvhcMheMxw7HiZr9+YLGPlT9mwP/JBIy1ngKNpQJEv67sNHJ
AyLMpXBFhCkV/igWX8UZQqnEDlxjXCBCnArf7LTmierZUDpvDOr9jaGsPxcg
IWys3Z0+Q1DH9y9NuFok+v74AeZvXtOIBX15ipoORz8fh5fey/KoIcPwq/cm
MPbwQp8ffbhoqBXPexJE63XlQcdIG69cLIVbeUfgbKqs8CbhGTjproU/4+Np
4YJA2vD+JT12DyD5zX3sbh5N55QbIyFtaTPpSK0SbJpUMLmrL+tkagorIsfh
qPGadOqTDnY+deAdLqH4oGwuuI98LGSdVYQPQU3ib1dzFm+kYNOTJywENtPp
Gxuoe4sMa8rJko/3Lnja/gz6nc/n1rVnIFTTQXwnYYqhR8bwvru98WzlEnxl
8ISWNU3Hgi13wAstcZdBG63W6EV6r8fSxcEJfNEoGjHCBSX131LsuUXYlv61
zOBtOErnmWHtpBh++LWIeh0fhGffSOHFUg0Or1/Exzu7oOBSHwh/0xsHXPfm
WX4q9KukEx65f2OFkgiY+jkJfv6RAQ23WB5t8AX2j95uZ7Halkf/GIuu/VZw
zd6poFy83E5+kbYgMTCGbCNHwsY9M+HikWTG7XPwPoWh76VsNLw+jyq+PRN+
DLXB/jYyFSpX7GHPIEu+JF4nYW4fHv18i1DQ/zt1yamCYdxVaFrnQ5MmNkMR
ZrF9UBNYPV/HsUVD8OM+gd7HyMJxvX+ZxB2gJ0pa4jkVK7ylwqJ6cDV9ziyj
/0x/gcOVcjrxZzYOWp9KjwsO4BDyxMVq4VB6RpUM4o8g+s0uP7UpGppT++Iq
HRtsiHpTVjJ8I/b1PkLG/uswKS4RdfOOYujpl+Az6Ty0Ft2AXYP+UE+kBz9e
cRGXB9+F9dstOKLOkC/FbcZr08149rsr4qNtifxgpT8mDxvOLmlL2UEpC39+
i+cZiUUw50UCq/lX0PPLSqDz7TC+snknKpckUuSy/WD1cy7pTJmCyTVG/K2u
if6v2L7/uX67OIBHRiFSpE2lUEiS8XmfoyRJhdKSCG1p0d6UGZFRQjRJUZIS
n/c5ikpKaJdKoYx8jfYS3d3/wDXO43HO9Xr+cDXuUcAj/Q/yQ5044fnRUXS3
y4r3SPfRFovJqBlvL92vtwZL706hwA4NXq3gz+9vDebydak04MkQNP20i06l
dYdmpY1cavTPzHKW/OyiIXXWL5bEqki5FhrJYd0nmCfVYreVqzDWdyINTbFj
J86m0E439GhfiDXKh2C06QpO/LybDaP0qG5KmWiY5kkhP6/yiTOy+MDQgX0C
n8Ajt2AseBSIwWM04ecpS4zf+5mCjTZSBP0gv/SnHJQaDdvcqmhp60LKmu3C
qgrh3DC/P5zrH49iYyMkWZzGSY6X4EfKS7i7ax86ndCAsf3m4GUtJSy31MQv
eebk23yfVs8ej4OfTUSx/obYbrIMZWcNgQfnd/Nkr2E0xm4CrnjaAw7kOtHm
MzI8v/c98blhPWnuGIcn9dZiWkcBPfNR5vL2BjKs+g+2+ydw/SZTjvVQ4P7/
fH0g8Tw4qJiC8nND3NkJVBUoLzg73EJDiSy1hMyAzJePaHFkFrW8iqLAgRNY
LnUNjp+1BRZ6fpBoBS3EzglbydfuLd28VUvPliryheO9sNrKGHZF6Etrj3j9
c2IGtf9YA1/vn+H5S/bBfoMetCx5ACu1j8LdjhF4r1aQzrleBWfVckR75SkQ
MycEvUJswNlcjlLq/Hn17P9wXak8f5vzGs3dUzjrnTePS8yhRfEm3PZsDr5I
mombRrdAfFsCPXmkwl/NX5OEkzmtMAiO+ufhsKDZ8OV1FVy0aLK6tvywMLZV
jfMOa0Ev2cc41lGbhE3fBOURGrijKQGk9h2Q3bMUHnRP5lvL3djmlAlsue/H
a5oGCDnNb/Gmuws3zlbCBuyAxZsGYZVHb+nH3rHihNlxwu99DdTlEUtBlWNx
bqgND+g8TPX9fdhUbwMGWH8Ck1sb+cqHclFyTh9tWlXQ+K4Mri4aDarGpvyy
Yw8lHaiDouP9ceupJEDHP1Tb5iGs2aIOv/bJSd/+uAJf/wvnqf0W4ox1i9lz
nBLvypHwqRp1XjpXA+pQhONtorBBMhwDNznizQ+ugqjMpDc+Fq1qTKCkvp2U
b94jSWYRdPmacknKZD65z4Z2NBlyiFMaz6dGsS4YQaO5j1gbeoMXnyvANRNm
w4irC3De8z70/u4PsInRJSE3AENTHISPP6y5duAvsr40HXO77FFldSlm3QoQ
Fkv0aKp1p5gqG8xd6eX08sMT6mXVGzOqbbjoRjnYncoRzPo20XnBXHD228k7
B8fiwg0RqNYh0NXeZaDtEML5Hvs45LcZ7Mr24x+LrSnDrZ1NDAby2AvbxT+v
KkAvShajElZxUEE4D5UT+doCUyG6fh5q1rty7aV0DGofJfzY80W0z7kHQWk1
YmmTPCsmBdCoCefAumENWvg6sX78aWpUSuVfrxIkyj2HUIGWE2if388TP6cL
dwt6cmTebF5rG0pZHo3Crn5hPGtjHL+flybM2fSQ2kfsxIsTk0lBxU3037SL
thv2gvhSA2ujL9bitrdfYWzFKfL88J5srK6R/sW7Qm74aK7crs/3Y5tBtukI
7D/TjSJzcth2uxH4HC3HLafDsGTJcarzu0yeoWXw4e9Xsu74t48E8JdjAN6q
PAPbdnhiTv/JYtDlbpxXFw8nFJvg8l8NfDLaEr+ud8DJcdtwj58MR5MTij09
+fmLOpIUiOL0uP74pzIGm75GStOEUprxx4I2TznEKyKPUDefcVhaswfmvdXn
8bPCaYaqEf/6rCmE9CMc/CWe8vyfcGzEEPrz4gWo/E6lfXM+046tK3GUwlD8
PHoyP5r9jXbqHyabO2/paPlWyPvvJyyx9IYhJ09A+vUr0LChG4TN2U0BUw5h
1VZZrPw5lc8PsRNCRxzixbseS++4G4DX2mIOdX8BZ+9clA4KeQKDs94LSe6p
lBmxiBZ9C6A1rVKU2D3AUptwKs55jUFjdQuqXuZRtkoLqbx2olN37ohV8cpS
rZuPyLpuHcy7tIbtFOexz+elOKboBmWtlqFVz3Wp83AHfFl1kA95p0FP9TPU
abmN1l7qhRv1PLlwhzO2b1KglpdvhS1/R9C7eapsvfkc7dmZT3/FEko6/0La
HBSKmR6JcHXnmYI8UQcau8mgquk5Am8j9vM5wJaK8XB+ppz1j8ZHorZ/OPf5
niTUfLkghgeuZYeR+zAyYSBrepjiDPmNmEV/hJmFXwSF9gBpy6S3MPjUCp75
9h7ZL0qCEZn5gmNDPA1O7o2hISqYN+wgf9eYASde/Qcd1i4otz4E+7rL8DaF
BCpY6Ieem7pgRdRnMJeNBRxshHPHuoH9sudC6JoEXH7tE3zR7hIm/vUkTcku
wTBnjTj21XrS/tpitfZSO2i1jEK468Gnat/C2vnPxKc7z6FpkD37NUYL9XN7
0cqPCpSZ8gwM7s/iQ/99BlsXP2j6e4C3jbnBFouH4TV/AVbq3ifjrW3ijyMS
fnbMiqJ3dsASUY3dJ2fCtKDTwnhNF/SrYl4M03HThuei8YQMVF/9SlTRC4Dp
IQls0isXKubE4p386xi0o1mY2DidLS9UwO/FIDXPGYHSjbNo+HYtfN5NG77I
aVDYtjKKuxtCjobKKOuhjrqbinmfbRYf+2eNCW8+4KXJqXB2Uy5tv15Cwdv8
cKqCISosUkCdlUPww21tDMyPRiOffqRefAGuKhrjWNVEtrwej87O6pxbFIhh
63qwmqXAf0zOUJNsEThe7Mm/Gg9zXVwQLTw3hLH/aXy4RI7ZQR+Fihz2dXGh
nh9ioKnXW+hnUSfc1xqAHXbtdCVyNH4z+2pV8OCDNOgS4LTzwTykbSYotqrw
i+ws0PX0ZsV7qyHD3h3jr5dA30UpVBvSjYtjG6HgHECTbjHvdPSWvr/0nuSV
5/C45CDYMv0Hpd35gLf4LMybVg4Np/M4eECSJH76IfY7Pgj7j63gXMsL4u3q
TjFNtQl2ZWoIH+U72bpun9C29y4ZhfvxSXdZdu1hyCX99PF10ifJctUgLuwK
hIOR/3K/aSBX79XmHqc+g1niG7zt8woGSQdCs/5nym48CGUDp3FFan/sbMhB
WcfZ4DAzlAflDsfG++cowtc53/70WVr5/Q0MCJyLpbXtMPW3HL7v2Rfxk0g2
OyIpu/ABJZrY0kObLvji6Mu5/5zs88USwvYp8pLl72jAy0ZwGDOVU+vW0J6M
+zSws5w72uXzX72YjEEncjhHdhM5XNaAodVmKOOTgO/ffhf1P1rhq/nbcZZJ
FZTO9gM11YcYaVJLNZIe1oYqwwTdj/1ZmBKCSb+XUCNOFCR7knCB71D0c9xC
XttvQOLIXqwwNJue/g0BvcdmqOGZBtobomHAvjhwVZ/N64LHk2fTbq4Kvg0e
ygY4dqaeNMU3h6pNb8F82zc4XHU+T5pkgTYjvHl3aQXnL9DAUYtO8LqNE3C6
vifGOe3nX80DwPCjDKSY7ueG0+ewxDsMVilNEZxUx1P7qXUQE/qE1pZ/FUb2
OSR+eLsbl+bVUf0EXyFhRrT4YaqnsN1Mia+UaHPbnUGYuuI4vZfpC02eiZTx
z1+3UnT4w7cAzL2ozYNablPtu4Xw+L0Ju9w/DVHhBmx9OEjqZjpMuFt5EWIa
M+jYmQ9kevokNk91wGH+3aCeMsS2rhaKfa3GWeYG4tPRoTx0gRqnFlziUmk2
kPIQ9J8UDi8ys/jzoYdw7IYKGrm7YmW3K1AQP5sVvNpAycIXzkbn8qZOQwzW
+gD2uvth1dQxHDo5nj2W2qGmbimsHekB74Z58qvjQZjbPIT3jC2lxW3N/L45
iLctvop7vJZL+y13xCXF06G5KxMyA7R5dQ2LDiXLyeVICUZEXaMiey/ufFlO
++r6oXXvNnr+/qYkr2dP6/dKF8Hq+2DomDiQK1/uxdZGJbLx+0GGtcW0dGEa
/8mw5W8+D6jdT7FQ5p4sfLeYj7cXqkrPnZiL6jiJ7ZJ9MLskQlgbyuLjG2tp
S0QHnIOHYmufGHSNuIFHq/zZNYkEo8Zj9K2KoOPLcro14hsd7xGOTSdzqHH4
APqtEwrtJeVS1bPR4P3aj7VMH/Fpuw0Sr1/rcbXrcK7JVqWhv6YKidJfVHY/
A3STjvB65WO00q6W1GoLLHs+cMdRL85Y9RgWiBfjRO487YeFlQpc8fM9vDH5
KGplJ0PT5XF8uXoINozVwI+v7vHTT9b8a8sojFbLQ4Xk/WyREC35/dwZ+zw1
wEO7bHnzAie6/+cLKBztgG0/UvDJs2Ni1cSHgmXXRfqQchnjV0Th3aX55D95
FBxaFg+b7j8B/yp97H8kDoa+TMLbS0bTrqGy+PhEAlkdyqZJ8wK45dxG/M1u
HDQwAOukhzntbDoUJwwRsnVG8c/qMcKUeVUU7NCdfcbe/JedzkHvswVkJDWG
4uiJ7KiTIdzYWis6Xp7NE52/k1XmQdYbvE6YsPcSmkdt4Y9Jzph7NIAdhwXz
/Y6XKB+uiQ2D3gtTXpykRUF3Mer7IGxPladWczPuUSYhp4HVVrUnHtPqV8NR
q+IeBPRXw345Zti5WZ5rPv6E8cfl8MrucjgVfg/W9jzCD8rVae0rVRwou5kf
RN4RDSKWgbHiTZipcQb2/bHC1B334INdMB5zK6Yz/XKAu2fQqPl9xZVe7eSp
kkylfTbArROr0Ks0HyxXZlOQ7U/h4Kk5IP2vnpxm62A30+lYa1ODfpGBNNI9
QXS9KktDFlXBgWFvaY/0DwUNOUFpxbpo/VIPEyZcx25frtKeHfFY5fYNcg99
FZa2jwGNijV4o90Dxo6dhOErz6BwfjgOjtpLw45moL5GNbxa0RMtr/yANzv0
+EpENEX+TBf1GgB29tkIH162wNupobzbRBPv+iRDjfMj2mgwBoJMWNjClfB6
uwausBmMBXWqKO61Ij9/JS7bXwtPzhfRaRlFvH4hCiZPfQD9br0U5O55iBt/
pOKnyUQ/re4KvxUs2e6rLI5v2o2TevvT3nxf6rfGDd9tOwow3pqtJ6vhxtx8
i8ZnVuw/epDAtZGCDloI0XSAf+3RkC5Tj6e4vgPBPzFG8mGFDZa8OkF79SLp
l+STYHhuCTx6pogezwZhfucaqjOOY9tD96D33TLyOXaQ+v0ehf5jzDi3QYel
WyJhVuRxoquWkJESJ+w0WYmfq6NoompPfNV+W6qosgANld7DXZ1NtKnHIjLo
rQG71b9Bj/7N5F/XLix+N5/OfdPAYsWtwo6s6Vxl2wzSoWF4+fBMdNW4QyGT
jrGeS1/0+W6Gw9W1uOeHAiF3QJCotmEg916hg3o7RtGJladhQ5oPbrQ/Kgy8
OR3rVW8KNQG6+D4gCwr3BtIf1SXse3AlLp1zFg4MnYpxA29T3tk2UnYxxkWR
1+Dc7zD6+yaRjFxUMfmZAVw7aMwJoAkN4brUMGMRbE7dgK8sMunxrQx+ZnRa
sto0DBevCuCQxf35UoYaqZ//JB5TlCk8/EqWTz9PFhMmz+fLDVZU/CUMPc0W
4dPRH8R+ryPh5YNwsuj2WHq3Qx2FPZ48Iu8M1+8whL1Lh6O0dDlmeoXRmc2T
OMmkWnim+gCuhZyFnQtH8eYp1jC/VpGPlnTRJe+T4ByTxKuu6+HFoj2omTua
S0LTMWNluvBVpwmGbLkIN1qLWeVWHA194o0GEy4wf1XlrHJVTns3F57ndiPn
35vZKXkuPezmQZdU9IQOnxXYa1mqIPyMwTFr3Hn6mmwYOf0bmL9dxq0yKWjM
erh9fiP47FXmC4aZeDDiKy3tbcnXvdy5qVSA8p8WnD/uqni420fYuCkGlqvs
pTtbXoDlc128fD8T7xn3xkjpIo5aOZLnab0QVnwFeNw0jF9duAZXZXqxe4wH
mG2fSYuKKnnUrQrarK6BSMtE07/bWbl0J/f2DuBKswx+nDITXRafglSXDpow
IIG+pslQUlaK+HDMPih48QqyLbSweJoTy/aKpfKBCrxdu5Ukrm30+/EprPwc
Dq7RXui2IA1d5fPhtvozasi/wl+m5UDQIi/qL1Wma6ftWJq7BM+EhrOWb3dc
FRfJg9d8hYm/smjj0/Ng/SQN1fas5coVV6jj5wCqi9IW1qwp4tK3LwWTkCKh
IswBp108QM2Je6iQMv91+FzOmzYYTd/IopupEweoaWMyJAmrB/XHl2bF3K1T
Ft8c+0JzZ1+Ee2bFEH3/ML4qcIc3usO54txk3jWyC6NSn9OuG1o8LWApJ8bH
kWTaBmHcP0ck/YjCfmNWklKzBW75uBAucgzLD4imyWWF0PavN687roX/bA+I
z6LOw3mTCwSfbsKFW8dgx+pteGfxoWtll1LhvzQlbNHdIso/Hcg2WQ5wM7AI
e9VU0HZO4Nmvj+GgwYos6J2BVjXCupKraDM/jRK3ZMAIsiRFMY+UfCewVvkX
+nAhAL/MNaU3dxFHzmsju52fhH559ZD0shcmRg3DJZEvYNcVM3wwv0Y06vEQ
RjYP5ksXCoSrRX7w8egLugjHKSO+TmhsTuebtzPI+9JCDszRIZf50zmuKQ7l
Ogx4/hEb/Dg6EaaPWMDKFRGc4d8lfkoeyO03ptHrSQPYwbQe7y//SPbbDAUb
h+WC/X+zsfJvLK8apE9Tjm7hIzKxHDouCSNizkCbk5Tr718Us1zl8ViSLY7U
SoUnCkd4ZttscVtFM30ZOZF7hXSQ3Zb+/C5NAaM//RufXf8Mk2UOO6yb4YNs
X56xuQRbD7jjt+MaFBDjxbVLjfnqi3BMFqvgI6vAjmcLaKPTOTHrTAL57dPE
MUt7sBirjJ5quvTz2hnY4+sIFfQfBM7eiGe/H4OY3HFc+DYf80dn46w1DdTh
+pFGdKRz4F4z3rbsM7wNsOWY9BghfEgsX88/g5cX5NM+w11oPumztMh0HdTZ
yvNzW2duPjGet1rYkOujgfyqZwkEHplILW8vF/wKli28e/M2nb5SgvaPldBh
dBcZD9HkT//eXL0xyBNSA/m7rTzWax+jm766IJw+ByvbOyUHtVNBMfqkNDDp
KPeIsKb9AW2Qe2U4Ki54B4M26rLOf03Q3fET/TaaiL/OT6RVmS0k7vp3z+u5
cKWfHqueD8aB12fzZPMqGGCoAOz3EmHIZzhx4BTPdZNwC4cLGtfb4croh4KZ
7EO4Wa/Pj67Zc0HIDRpkPAh/98ul+O7hNOpYISmqtAjPCvVx6fjr8Ep2CW1o
XwUj5oTxWWMmyWVznD4oC0J8d0qqveuF1uXrsa2nFWBQO4GKPI2YUwjO55Sp
4JUyH5VVtZ7XuoI/LvwDD28biffLDuINaZX4uWAxLR5+hSflVVHQMUOeqaLO
SwY+px2CKv9OM+eaxe+AXHL4tdkDaWOZO+V2aqBSXCr8zXDCgO3e3HeaL1o6
V9GNZNnCNW2JfDNYni1jA3lFlBreOJHGRRdeCntul4tJL6PZraQDPNpiWW+B
kjC15AI/7rTBe9YF0N70SdSImy/Irc9m/7DBrCw/mWO+Ggp3Az0ZlspijEMM
e3fIg4p0kmj0MhNkIE14OnAMLk76JEbLrAVdvZyCKtvjpLZ1Ezho5YmBPrs5
PeiH6CF7ArL6nMBHtxrxhFMs+s/8A8cyi3GrxjNwts2DY4bl5GwyhBeM8xD3
j3BFp9tGgsmRfxYQewkXNXZARbkBLs0K5G3NOZx7XhNjbq+AwrZ4q+95rfDx
wH6afzdDXBXQl5267+B1msHQWarJXdvmgW35GXY91UEyc5ZQzWng4Iwq1D86
CtP3WvKZ04qYLR+Mn+sjaOXm36K8+2tqW2SIK1fHinMqX+PZ8Nc0fVgnDV+w
Ei4Oy5AWnLsEoare7KrO1Oy3GRrvvMPeo4bzMcOVkJu1RvQ0rKavH8tgg9xQ
2t14CRSvV1GPS1dg3rj+WPomVLT7tg0r9kTTup0Pha5ZkVjkV4YzS4biQbtM
+mg0kitXhvKppvv881WVZKX8VPFeXS7ELmZ6K3qiu+pTWHnXhZ7m9uTUsHDY
cUsXhQVOrHdzHWLWRJoS0Un+qZHsJSQTvj4FIatHs/f37hi43wjD6y15lncP
Pv/QEA19V9EiBTl8F7BYGCvzwTJ/20F4HF0OciseQqeLPa0oX4VHH8dbTvpW
LShHNdDXCGtQMtPH5iOLYdBsE3JISYRjry6wg9pl/BSuhKkTLHHe1hlsZzmK
6/5a4Kg7S4XDHW5s0K2Ua+18SNAs41jTFqh8XU9aTiYcmzkUH1y6LyhFBuHG
qR58tykSxJ3d+IGFHPsZyfzrRzWKkDe01n+hB/19gnjn/mAuefiUJIG76c7u
k6Ax8yoZdXPFd1PHij+aN+LHuhyeUhQDDz1GQ9TnLkrMj+cxD/V556LX9LOy
O09MvSdR+2GMUbUaGDG0G3gs84ErUQ+ERLl9WDOrDY7UjMTgkmGg8TZMKNEu
gmXDSyhrYW+kWUMLSy+9EV10dbCj0Adln0QIgfsrxW8Z0/nsoYH4XnM89i/L
wjq38Xg/WJW7YvajUObO6ocm8+Eh20lT8xgudL5GTj478fWCPLz2uRPkT7eK
s4v/WeHvOtZuI+p79SKZmudD4R6Gq8MGc7cBNyRzdMLJVzeOuh84hGkXRtO+
Cltul10GE0KuE3V14elxkfxvSlPlzc9UMyOFJTMHsbfye8E5OQTXBP+g3uNm
oqrEmyxaCwVdtQXSUV90sFkrEDM6z0uHbO6gbxomKH/gKvcr28zPdj8iq6In
QtryVdBDxY6nxFeDx6JOzu3wp4jIgdDtriZutwvglB+q1NElgekHjXGbV7p4
Pu4IxsUNAKvDlbSz8DfZB+XA2FM/hbS1OVBzXh6DKhZgYp05lHqMoAIzZfHH
qh5g1e0brpnyWVK0IQNmt5YJMvU3eXXbDyHuiSdNe/6UIqpTYE5SpfD66DO0
eSphw9WHRPs7M1hhWjK1/bkpZKxRxSfXJ8NFs2vUM/koxC/1owrbhxylGIOR
/bTB8agmW30x5M+0gDSmDIC++62F7mHThe+qoVSc/RwLN0n49Y8wqjryji48
ipBk/h3Gsf/lQaOPIyxcWiX6+BtjoYcH7Z4hh9Fr1pLj7HBclwO454EK1mkv
QfVPU/H7sB48Y6YK7847QPtpLm6praPpsf1ws98dGj6gVJhw4QobUzjKr/wD
0fMMJNk3Z/HZKyrccavS6v7GTPq6xp/WXtuCg3YdkFz/IeH2mCMwtNtBHCVk
stvnI6h2czL6zaoRl8AOPFt5iecNisfYb5H8aexx3lltwtqTn5LyxWgymLIe
XYZE4q5fF+hsRSBeTp2IBtO0+fyKEpDxkOCGyWfhm6wx3zwfhRkVT2F2Sgv8
DZmH12bsB/3cPah3RoM8vcKw8MlJ8eiYq9Da5Y691s9g+6lqYJbykrY6mrPT
/buSYZIUyayYg+BQPhVTnLwhfnolnb5nDRMPJpOkRzoPeVaM96/9hDNyB6go
zR+vVG5l6/tLObglXzr2LVHy3mMQWDQCt5Z8pP6LzXhaSRl4KylzwR9LTP/+
EQzbL/N7ow5M17rLa2u1cbEklO0mVUON5yJ6ndREaX6uGLRrHxZYd+Ok60cL
1rfHQ9ncYXitUpWTdRRp+4I04c6cMtK62gNaX5TQvKHPyH1hHeUOjmDfi4dp
SkIIHj54GFcMluX+3tv5wMTx4LbCBNNPZaGT+kJQmjmDy75chBkn1QS/M7dh
w5t0mjlTF7deWsd+Kht47dMRopu5Fv+aegyIMzgmd5/w3H0Vb41x4dHHbbkr
WCr0GZgIlwxqaNmKr0LFlf7Yz1MeC33OgcKoPlzWO5j8m6ZA48MMKmkdw1oz
ZtCmncfA7oMWfr4fzhb6R9AkWpveaA7gFnVjtinZjp9Ux+Cq0nAKXhtLfTKb
aKT6ctJQWkQNMXLsq+SGq+XiUWFrHldbHcbY7FBylnkGp0YpcFFDgGTnu3To
pmDNi9tjuGbCVtQZtxRb/oThhL3plBSZAvGb3FhFeSGsuONLagVBfHLCMH6d
q89fnh2gKZcC8WS+VNjocYCMLI9g2dBmIdLRi4Vbw7nFNJj/9q2hMPcJ6DT6
Pzrv60MnWZM8LtzGtKw0HPbAnG+5EK5bb8r+J/PFmvFZwmQlOZ44TpeX1V2h
lRtFMFYMlip9eynZ12JM8gaRkDdiPLTtv4rd9saD+5K38K3VEZJ8x2P0+hBW
urtRmDQynIv1t/Jn48t47LoXe79PxAEzImHqaAcY/viUmPN5DRreG4WG9gdR
V0OGfQ7owB3LMHH5qbXi202LeH1upNTOQZbikp7Sr+H7UG1op6R1/Q7W//uU
XGrfg2WsFD6dEGjt+n3CoSWfYOGN4+R16BY5PUd+nBTOMhPOYu/FVShvcA3W
Ca9BPbAFD49yoR+vvbio/wjhTNAUariuj5OGTmLf7EaKzXtGszNOob15KD3+
dRnnWRsLM1s2Q/c3lqj4rpiygyX0e40WluADenDaGBPnD6Q3T7Ip8Uk+qVcd
FSvyFXHQzfEgNzgOzb0TuG+uCuapWdK8T/NpalAcOsp9oRf6ruJpOV2hYGUC
LnSo5uXPNuBEj2HY+mcAuizLwxnOeZI5G+1h9rKl4pADRtz/zhtweLiQEp6k
0HK7++Q6K4/KS91EG9uR0rJuJMLcB1j9SYemNFiyfKKcsMjFwqr2Q5nYuCCV
HUZ/xydzFbhlazW4v6ugneflMDi/Rpi9Lo4XvPkLA5fuoXSj4UKgkTfM70in
05OqaO7n46yjH8JLXk3n8cnysGzBbHTrek/dym8LgtY6SnxuAsfEjbxkcj7N
szHF1Ki53KRxjU2vWfByjWVsOnMwdp7MplifK7RQv+TfDCiisRP9oaXMjl1N
XP7VtEZyrT0Fbd/YkI3tAOnbmjAwKx0EoYeKxeT4TFhJG7HP5HUsb10pnA0c
yrN3++DrjRJuC7jFT8434yKbNrjS6il4eztC7JEeOGGXIfdcqMy3egXS0HEa
YL22URzirc12Xt35e28Nemy+WXrXOg7kxgWjy9hYSp15FfLGHMBbTYmgfV8T
bl0QxAVlW6nG9xY8MRgh9NqhDy9+3KW+D+dyf7cArC63w1v/anN3rhdbBDzB
JO3h1nfL6sHcUkq1/86mM2gWO6er4u9VW3B9njz8uKKJb069RP9z6mChWyY6
5e9Fs3x7jCvaLe5WS+XFb1zFhqW/ATS28TrPbRLLQOeCkqI5+OtGDx5q2hNv
m4+E9QdPUWzBDP64NRxDLk3jYoVcun2nO8J9Jb4smcU5VbJ4buoZLNB/RQaT
H9GJ64MgqCEDOiPfw/JOXbH30Qhh5lZmYc18IjeJ6KHWi7wyV6HH8i/UMbad
jttVgCZnwh09PZD5q8Qxn96Q7+0ptM8yADYtq4fEFGc48VRBEuFhgG8alHju
2l9WT1L/0MCY1Tzvp5vQNHm0kHIwCNtKDoKemj2f8S+nGDdz7hTPiLduZMDv
lGzuU7mLF91+AzlOf8RFP4vYprA31Y2V4bR1LjRgR5sQ9m0jJ50oFdc2tEKW
ZQ11S5GF/coqQtO4vlzndAHudW4Gs12Duc1ZGbZ+C+Hbc5vpxtt0/liWgnFp
OvitWh+N/uXDA+f6cGmgF6/2+A63bbK5ubKRFmw+zJFJh/nvXQl/nN2jMGHX
UW4eqYuDh3+Bv/U3RQ3pLB4iP41rdyhg6cFNmKpgIWzZ6PBvzW+Y75FJnb98
uDh7Ja+zTy/41c8etJL0MEEjDqe9yoWqNluoqr5OFX1yadSlJNHb3wy7vwRs
qztOo+QqWB6tcPu6X8KGsWa42ykV1uiU0aNyDfwbeAa7NmyBWv29rO8Rya1v
jvP0h4bwsikYTxeOR4f5hdjm4cVLLe5Bt96qoNdPIvGZMQV3KJyFqe01kLU0
mMNV3eCCbDgUlkeims0V8XtWX1FyeQA7Ju9HrcZEvKe9HvbcOIziwEhscc/D
WTXe3OPNGnqv5g0rqw9D8bGB3Dv0L20zKKLwXV78LCQWX2ZO4O8ecTAiYjPu
Xq5PN69FQLnbHOilm4IZWw5DT+tQ+J5/iLqnu/Bg5V/iwQ/hJN624paZ3bEi
yFMyJqWfWKD2CQzN8+DGhQm4AwAnm47j5+ttMRm288ebcti5Ug4aPF5R9axP
tGn5cUqMW47mektRzncQ5i3/BnYeathYHQbr7G7wmiQPduzfHQd7pvNhb1v0
jzKmhBw7XD8jHKUqjqyjfY19E1KFcWqq/Gn3N+qekyLGlf4n3Pabz9oVRqg+
/zn3NvsKRb9V8bH4/39mNujpOkl0KNvN4y4OgsYL7rgn8yNN18gn3/RY8lsm
ZYPRIBw5MgbtA2toTuMaeHD6OKrW96by2LH0+8UM3r/XlTSidfD61XSa13+q
mJpylGBTG2lPm4L/jV2POD5DsJprxwraB3h8VyMUvHXhURev88aTd8C6XyfM
mheMkTuukcEtM6jR64vFur50LzSM6pQDQVf5kbR6oRoPu/+BWhr74gzJBZhw
/bYYFlTJQfvUUavKFxe2fIPopeXCtAYnUP07iTP1HsGDgc+xzf4mzV1shRKD
KJwXa4qLbkVj4tbjMPS5PQfe8cP6jt1ocOgDDDIYxynt59mycQkE31AiHeMt
9Dc+HjaM2Qd37bXh0/JmGnuuL4bgZci9GCWqL38nTJqC6HW8FJpakqWFXUPJ
uFMGvFeNwxybZKioyKGvRbvANr4QDn97Dk8tmsSIEQTK0eNQcaolrZ9UzK4X
UgSJ7wlh9YEIujfenCXe3bD/iXhYX3SWK29Ksb/6Ae7XuIwTK2K5DHqwXfc+
vPuytaSk0B5LLPbBs48T8JqMDIu/p+IUQ3MYvkzB+sg1dQx0n4qKIwPYsCgQ
Teuu8YXiAox0zRTsA/5Al1EDy6T7wJ3xj0Dv8QFRyaEPKVqux4Rxfvhici90
jPKgPXvWcJazCacf7YavDGWsJ+Wf4MGbl+cPdfgrHRFzBdZVfsRnWfPw8nQZ
XLjjKAw3fyvG2OmD2rNNtFZnjPTemMG8f2Y0vX6ryOdsb3HK5kKW2dZOo44E
i0eWLxGrZeQo/V6A+MmhSpQbUy8WLqmiug+7eeJ/VuJhTVusuneO3m8ZihpK
gZgQGMSqUSIPO7sf57isp5rWQ2DcdYBe+KlyhGGcpTTgiXTu7YloYT1I1Brd
ByVpfXjEzSE8ZvZ1chl1DlL9YoWLvyXcGTIFfQ8mUaJJe8HLkY8kQRyLJY7/
Mu6jE1A2WJXTbqyFrWvVcEufBhquVyxMXqeNcHszaK4YAqNv6/+zxBz++XM+
H1Zezl+y4nGD7mVIyTUTg70G4+tbuvjIvR832GrhwsDu1g1N/dk5XInuOxXg
xV/vaJNLMiQNbYcrPqIQ3zCTvm5V4kmtBKYXz9LSipF4wP4I3UiIY4O40azV
zYKnhOnA0tiDmGCWBz87dpJ5kmzhhpQMHpEUyU1V+8gnLAW5oV6yup8KuoRZ
i3HDeoHOkJuoS1sprMkfxYJICmjOgdwTq6RzpqnzUVdDfP7+kmD37CcNs2vk
PXduCOmVzFtUHXHQ8ShQeSDBSVt7iuEq6eze1QeHvR7ADsWfsOXUCFy4ezhO
vDqdu1lOhvmKafCmZAp691hOCV7yNERpHtbs6sePHAMFd+fxYtPWGBw24BO6
WarTrhFq7HRlEKyfO0N49O03fBjdgwsDqmFZ3T269PQHBZuHSQeUReOkAkuI
Ka2nlnfWpGiE4O0whNxd0/B+rQpUG23gnw1y2C5/H54f++cA+QIyv6LEQ/uM
Ax+DI+xZeBFumo0Tu3/fJmwPWiz23FYsTLtwSKp9ZCPJvguluslmMM9/MI23
y8RpftOhn7+58P7kErR6XM0l6/zR6KYFd7fKguVm3Tnt2VOSCb4GPz6/E+WC
54NOaD6L+WPw3KJ7dMuzO1+I6+It39IozKwHJvT+AH7SVOjTuwl+X9KDFW6j
se77ftwSlIDbPydiqdVbmPOyU7AMVsTssGf8pcMd+0avgt1r49BErSfV9vLA
vWuTUFGlhKLfJghFijFi2ORY2FDhQjGn47l44SHekDqfag/5CT+V9oJ9vxU8
xjaDh+1ex61fP1CP4zHsYRwFN4pP85VCK6rcOYciBg+g65erqMJ9Pi/rIYNz
Sv0YNW/wOaP9HPcjm5LYFJ9ssefYhFQOW1YBl/ufE968TsSBAyKYClXEHzJ+
0Jw2GLZ1haPz2YeQqpYHPbdE4Q/zcLHwVKD0p8VcYYd5pNg4P55d556nvTVy
+DctGmcPk2XPzGvUc+967jd2IJ+5ZsKhVR+oNVeNl6kPRwPPiXho1jHx99sI
+G2ZTbwoUkLfknFCagBX7bgOSxRLIHKXB5ZP66KjV8tpy2gtmmDVRU/DAzBx
9ioOajhCdpXHsMcbCbtl/yTZ7Z9gvt5HspJ9K86aaob7/xtIjY/DuH1Us/Dw
X3aS77BE/cIh6Fu4H7P2jcGHm2LA7Ukm1DpLxKP+mrxJIwC/P9hKb40W849z
NTRhxTpIMGqCl9ctcdTt85C2Zwred54Hlicmsuu/FO/4b+Ln7bcCT5uRuN91
HGoV98UB/eR54kx7loSlk+34AxT89JRwOMoFMkyfkH/LVTy3u0m8889/h+aU
CVYzZanV7DYcCJ1AM7q+iHPG9+I+/vfEAFtN9iqWxWNHWiA7YhsF9HXkKwdE
HnGn6F+teiNmDoDkGX/x075koXXxTjxxt40uW6rhxhGn4GnReTgd10aRrRlc
dewJ/RrZKZrIT+cTwXp40/igWNh6EGcmHmW9N+vAeqc9j54zBicFGGPOP0dO
GO+LvwZ5cK6/K4QuMkfTh4543T/JqtLZiDsMWmCIpgRnWGzAceONpZpfR+Px
G4PwlUMkS1xH4cDsRLHD2ZrTz0xBr85k6dLqRNQp3Ylv0q9T55H9qLpI4GAv
Owo9EcKfNQ7hAY1MHpHQSuZD6iE9ag4ssLokDPhmTMf/jqWxnS6C95UQeDNJ
hzb9p47SNCKlnBg+khkBFVIP9r7/HE6VHiXzOW68rj6EV9ioQ+oSZT5qos6V
l52xNmA5+/Vdji+HjWM/YT/o2abgx8581Fm8U/rcIhBneTJkv+otTfpjzt7P
/EmrYh1MKXGGujtasF5nE3/dNV1ateYtzScZlM+KES6YpPM6HQmMuT0cY7sP
RvnO/iDx0oYXxd50/LMBHxj8783NT8PJo6WwKkyBH59oFr2ON8OR7cvJq7ov
75rjzreUxqJ+lRFa7AnhL7pKgrfpWnpaHgSLqntzxJxV4HF5EpYWbKOc58l0
Rkte+F5wgsfWjaf3N2zIYnMgXk1fJFqNDofqemfsvVUUF6VcpGr3J1au8lI0
W1Qv3EkX0Hgvwp5IVzYI7y1unb1JXCn7E0LrM4S6Ni80aFzMEz7egNOD4yjX
3IMr3h3iQeMeixvKHcnIJBS/1ITTvvs9uVU/HAwC59P/ANElK3s=
               "], "Biases" -> 
              RawArray["Real32",{0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
                0., 0., 0., 0.}]|>, 
            "Parameters" -> <|
             "OutputChannels" -> 15, "KernelSize" -> {7, 7}, 
              "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
              "Dilation" -> {1, 1}, "ChannelGroups" -> 1, "Dimensionality" -> 
              2, "Interleaving" -> False, "$InputChannels" -> 21, 
              "$InputSize" -> {20, 20}, "$OutputSize" -> {14, 14}, 
              "$WeightsInputChannels" -> 21|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{21, 20, 20}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{15, 14, 14}, NeuralNetworks`RealT]|>|>, 
          "3" -> <|"Type" -> "Function", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> Ramp, 
              "Net" -> <|
               "Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                  "$Dimensions" -> {15, 14, 14}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{15, 14, 14}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{15, 14, 14}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{15, 14, 14}, NeuralNetworks`RealT]|>|>, 
          "4" -> <|"Type" -> "Linear", 
            "Arrays" -> <|"Weights" -> CompressedData["
1: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
wzvhoXDRugTZgB3YMBkCo4FueNhVGyB9HgYYRsI3DWvqadbDQUd98O8NMuNe
+0fo3QdJ+xdf+PXsKLG0SuYYepVAu8A6RuF9CD7ZrAZrt3cAa99LbH/PZXwC
I3FfrgiKXs7hVtvsIyv2+HDl56nS2AwNklqlRUXetsDHEE/OJs9XFFMCcEa2
GRzne4wBhfW4buCC+bZ/O0RyzMjfonx4LiLP5hu9hDcdJpi5sR7lDdzxZIUm
6TL7CL7R/UQu4wd0a+8FfX1enPilATMi+GCv/9vS4G0uxK3rDbFY8x+0PvqD
g3tDMOD3R3phpRvuWZHIvXD7EHJvfC1tk84F3awP+Lp02KxBdEfZn+zH0PI4
hH7s6oH/vgWDUZoSjtVvRN2UITxUpcMcmmilvbYz2ONxZ8BZRoVcN4rBbtdB
7rwkOZhqieesC8iFUx21nPdTD7nCZw0Jzzw7os5zjlwmI3gk+w4USTyg05rK
uJ8HLJlA007caRQOhfpTMBEowerxNcCsWAGWSRIE1QMIIONNckc9UdflDy36
5Uztg17h7Mhq85lttbD28XI4lxcLNm0HIenJBizwGadbv1zkiNZp4drMzaRF
Q5/NyfzOPSr9i/x0kIHSb8Pci8vW0i3LCumCD0F4YEMWuPG/oFuc0yFq2Aav
hNoC7J2Ft7Xe0cGaVnKpxRdXxlXikaZW5Jtzn7PmiSIj+Po5hunpYouSMHsn
U51Ut9hgZHoavNjFywo9KsT4On58eX8v9hg5gPGoGzj/UYLGaa3o62tbhuaT
NHz+b+4dEgTrTs2gsq2V4NslTGzuCLO/5H+iZaAQa7NwD04W/iGcJm88VlVD
ro0mocdBRXwRaMr26nZwtrv7UcHj08FlxBG+hMkjj4U/bnn5kxxRyQaReoId
siNg3zlIye/PXO05TXDmWRV0bi7BWQYZpP/XQe6dTyXU8BUPmzTUhXS+DuMw
IoxCLYXw6RNr6r3nOu4fjUWfiGHM+DEB2R1xULn6AKxOSYWb8b9Jucko2eF6
EsNyZBmJ1pO0MHKYlA8Nw0/VceqaEE8VzqWj2DNberPRCSWPazFnI9pJpng9
ZKmcJLuS92FPYRBybmykQV9CwX9lJkwmrwX83YbLd7eQB20EO51XljXq3CA5
E4TrrykCj3xS6Y9tL/EF3wi3fMsNmiB5kzPLpJQW578mnwSyyKYlsyAh3pMO
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
hbI6bei/cwmtBlTh/zmsijA=
               "], "Biases" -> 
              RawArray["Real32",{0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
              2940, "$InputDimensions" -> {15, 14, 14}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{15, 14, 14}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
          "5" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> -1|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Input"], 
          NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"]}, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
      "loss" -> <|
       "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
        "Parameters" -> <|
         "TargetForm" -> "Index", "$InputDimensions" -> {}, "$Classes" -> 10, 
          "$IntegerType" -> NeuralNetworks`IndexIntegerT[1, 10]|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
          "Target" -> NeuralNetworks`TensorT[{}, 
            NeuralNetworks`IndexIntegerT[1, 10]]|>, 
        "Outputs" -> <|
         "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "MyNet", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "loss", "Inputs", "Target"] -> 
      NeuralNetworks`NetPath["Inputs", "Target"], 
      NeuralNetworks`NetPath["Nodes", "loss", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "MyNet", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Loss"] -> 
      NeuralNetworks`NetPath["Nodes", "loss", "Outputs", "Loss"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.899965791258768*^9, 3.8999908215868645`*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"59657c74-8a6f-43cd-a4dd-d8e76ad35f42"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 180}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"74e72533-71ef-4ede-9398-80fdb9883766"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 358, 6, 88, "Title",ExpressionUUID->"2a5e0de6-398a-46f0-85d1-ef56e92a81cf"],
Cell[941, 30, 499, 14, 31, "Text",ExpressionUUID->"7f3e9ead-0d57-4913-893e-29a272521e29"],
Cell[1443, 46, 1194, 32, 77, "Input",ExpressionUUID->"52223c95-b99b-4d49-9620-fd87ea3b2aff"],
Cell[2640, 80, 401, 9, 31, "Text",ExpressionUUID->"4898254f-1e5e-4127-a468-a8fa0aa2e8d8"],
Cell[3044, 91, 2518, 47, 163, "Input",ExpressionUUID->"88808776-4c24-4770-a608-88ac5c33c6d8"],
Cell[5565, 140, 390, 9, 31, "Text",ExpressionUUID->"6baafdb8-25b4-4957-8248-b39beb25f925"],
Cell[CellGroupData[{
Cell[5980, 153, 2302, 61, 163, "Input",ExpressionUUID->"185bd20e-b93d-420e-9e13-2035c0d7a18b"],
Cell[8285, 216, 30465, 642, 438, "Output",ExpressionUUID->"7c172746-a698-4152-905a-8a0a5272dda1"]
}, Open  ]],
Cell[38765, 861, 30796, 650, 452, "Input",ExpressionUUID->"80102c16-607d-43a8-aedc-5a12e2131a09"],
Cell[69564, 1513, 156, 3, 25, "Input",ExpressionUUID->"4fb3a841-a2e5-44ab-9d89-fb3f47708e8b"],
Cell[69723, 1518, 725, 20, 43, "Input",ExpressionUUID->"214c0df1-468a-46a6-850f-b34404d1d650"],
Cell[CellGroupData[{
Cell[70473, 1542, 189, 4, 59, "Section",ExpressionUUID->"fa2104ae-bd4a-4297-925c-ec46ad74fc80"],
Cell[70665, 1548, 738, 16, 31, "Text",ExpressionUUID->"3fd8a2d6-f15b-4889-8c01-b6cfbca36c2d"],
Cell[CellGroupData[{
Cell[71428, 1568, 323, 7, 25, "Input",ExpressionUUID->"54a4b80a-f8cf-45b5-9eb3-4b6a20613307"],
Cell[71754, 1577, 193445, 4294, 532, "Output",ExpressionUUID->"4608ca52-0cfb-4a0d-bfec-1ed366b6175b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265236, 5876, 367, 8, 43, "Input",ExpressionUUID->"7c6d8178-e953-4db5-a435-722848b322c4"],
Cell[265606, 5886, 287, 5, 28, "Output",ExpressionUUID->"acef38d8-61bd-4633-acf9-a4e66250cc04"],
Cell[265896, 5893, 7439, 174, 42, "Output",ExpressionUUID->"38b1d76e-6a5a-4d8c-837e-5e5ac297524d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273372, 6072, 275, 6, 25, "Input",ExpressionUUID->"f25a77b4-5974-4767-b348-045c3ed84c68"],
Cell[273650, 6080, 6953, 168, 42, "Output",ExpressionUUID->"0a29397f-776e-4920-823b-158b467a47f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280640, 6253, 266, 5, 25, "Input",ExpressionUUID->"7c02fe2f-c8ce-4484-ac92-873d0def9c4a"],
Cell[280909, 6260, 679, 17, 28, "Output",ExpressionUUID->"65611b4c-47f6-4ee5-84ec-17f31b3c74bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281637, 6283, 249, 5, 59, "Section",ExpressionUUID->"265cf13c-abfc-42b8-bd87-513cbaab6935"],
Cell[281889, 6290, 818, 17, 52, "Text",ExpressionUUID->"13d45ae9-64cf-4981-8d2a-be20218175b5"],
Cell[CellGroupData[{
Cell[282732, 6311, 978, 23, 43, "Input",ExpressionUUID->"a901ff96-8a4e-4a6f-988d-f2dfc6a550e8"],
Cell[283713, 6336, 256694, 4215, 404, "Output",ExpressionUUID->"268f83b3-380b-4340-836d-1277c3ab9a45"]
}, Open  ]],
Cell[540422, 10554, 738, 12, 31, "Text",ExpressionUUID->"9677fb0c-edfd-4671-b02b-86d4b720cdef"],
Cell[CellGroupData[{
Cell[541185, 10570, 791, 20, 43, "Input",ExpressionUUID->"16d13f6a-e2c5-48b1-b476-c229f47d5ffb"],
Cell[541979, 10592, 90780, 1496, 404, "Output",ExpressionUUID->"addef975-8970-4175-aa3d-62da4bd22259"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632796, 12093, 577, 15, 43, "Input",ExpressionUUID->"abf9c285-1de1-4fcc-87e1-3bf0e54b312a"],
Cell[633376, 12110, 81514, 1343, 404, "Output",ExpressionUUID->"3dd70994-f330-4919-970a-90ae2afe225a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[714927, 13458, 210, 4, 25, "Input",ExpressionUUID->"ea88d566-0e9d-4c33-af14-457704b3630b"],
Cell[715140, 13464, 345159, 6093, 215, "Output",ExpressionUUID->"59657c74-8a6f-43cd-a4dd-d8e76ad35f42"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

